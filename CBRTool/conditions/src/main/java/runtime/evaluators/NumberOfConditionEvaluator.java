package runtime.evaluators;

import java.util.concurrent.ConcurrentHashMap;

import fieldhelper.FieldHelper;
import fieldhelper.StaticFieldHelper;

import java.util.HashMap;
import java.util.HashSet;
import java.lang.ref.WeakReference;
import java.util.List;
import java.util.Set;

public class NumberOfConditionEvaluator implements ConditionEvaluator{
	private Object currentObject;

	private FieldHelper fh = new FieldHelper();
	private StaticFieldHelper sfh = new StaticFieldHelper();

	private HashMap<String, Integer> values = new HashMap<String, Integer>();
	private ConcurrentHashMap<String,List<WeakReference<Object>>> map;

	private HashMap<String, Set<WeakReference<Object>>> queuedObjects = new HashMap<>();

    public NumberOfConditionEvaluator() {
    }
    public void initValues() {
		values.put("init_2",null);
		values.put("init_1",null);
		values.put("init_0",null);
		values.put("init_3",null);
		values.put("addPositionsOnCheckedLine_2",null);
		values.put("addPositionsOnCheckedLine_4",null);
		values.put("addPositionsOnCheckedLine_3",null);
		values.put("addPositionsOnCheckedLine_5",null);
		values.put("addPositionsOnCheckedLine_1",null);
		values.put("addPositionsOnCheckedLine_0",null);
		values.put("addSpecialCases_1",null);
		values.put("addSpecialCases_0",null);
		values.put("attemptPiecePlacement_2",null);
		values.put("attemptPiecePlacement_71",null);
		values.put("attemptPiecePlacement_9",null);
		values.put("attemptPiecePlacement_3",null);
		values.put("attemptPiecePlacement_47",null);
		values.put("attemptPiecePlacement_31",null);
		values.put("attemptPiecePlacement_43",null);
		values.put("attemptPiecePlacement_13",null);
		values.put("attemptPiecePlacement_6",null);
		values.put("attemptPiecePlacement_37",null);
		values.put("attemptPiecePlacement_12",null);
		values.put("attemptPiecePlacement_86",null);
		values.put("attemptPiecePlacement_55",null);
		values.put("attemptPiecePlacement_45",null);
		values.put("attemptPiecePlacement_62",null);
		values.put("attemptPiecePlacement_66",null);
		values.put("attemptPiecePlacement_34",null);
		values.put("attemptPiecePlacement_17",null);
		values.put("attemptPiecePlacement_23",null);
		values.put("attemptPiecePlacement_5",null);
		values.put("attemptPiecePlacement_7",null);
		values.put("attemptPiecePlacement_44",null);
		values.put("attemptPiecePlacement_14",null);
		values.put("attemptPiecePlacement_64",null);
		values.put("attemptPiecePlacement_19",null);
		values.put("attemptPiecePlacement_21",null);
		values.put("attemptPiecePlacement_69",null);
		values.put("attemptPiecePlacement_59",null);
		values.put("attemptPiecePlacement_78",null);
		values.put("attemptPiecePlacement_35",null);
		values.put("attemptPiecePlacement_22",null);
		values.put("attemptPiecePlacement_10",null);
		values.put("attemptPiecePlacement_70",null);
		values.put("attemptPiecePlacement_30",null);
		values.put("attemptPiecePlacement_74",null);
		values.put("attemptPiecePlacement_1",null);
		values.put("attemptPiecePlacement_28",null);
		values.put("attemptPiecePlacement_79",null);
		values.put("attemptPiecePlacement_26",null);
		values.put("attemptPiecePlacement_4",null);
		values.put("attemptPiecePlacement_36",null);
		values.put("attemptPiecePlacement_75",null);
		values.put("attemptPiecePlacement_46",null);
		values.put("attemptPiecePlacement_65",null);
		values.put("attemptPiecePlacement_24",null);
		values.put("attemptPiecePlacement_39",null);
		values.put("attemptPiecePlacement_41",null);
		values.put("attemptPiecePlacement_42",null);
		values.put("attemptPiecePlacement_63",null);
		values.put("attemptPiecePlacement_67",null);
		values.put("attemptPiecePlacement_8",null);
		values.put("attemptPiecePlacement_33",null);
		values.put("attemptPiecePlacement_73",null);
		values.put("attemptPiecePlacement_80",null);
		values.put("attemptPiecePlacement_49",null);
		values.put("attemptPiecePlacement_60",null);
		values.put("attemptPiecePlacement_84",null);
		values.put("attemptPiecePlacement_53",null);
		values.put("attemptPiecePlacement_51",null);
		values.put("attemptPiecePlacement_57",null);
		values.put("attemptPiecePlacement_68",null);
		values.put("attemptPiecePlacement_20",null);
		values.put("attemptPiecePlacement_11",null);
		values.put("attemptPiecePlacement_58",null);
		values.put("attemptPiecePlacement_29",null);
		values.put("attemptPiecePlacement_50",null);
		values.put("attemptPiecePlacement_77",null);
		values.put("attemptPiecePlacement_82",null);
		values.put("attemptPiecePlacement_54",null);
		values.put("attemptPiecePlacement_76",null);
		values.put("attemptPiecePlacement_16",null);
		values.put("attemptPiecePlacement_27",null);
		values.put("attemptPiecePlacement_48",null);
		values.put("attemptPiecePlacement_61",null);
		values.put("attemptPiecePlacement_81",null);
		values.put("attemptPiecePlacement_38",null);
		values.put("attemptPiecePlacement_0",null);
		values.put("attemptPiecePlacement_25",null);
		values.put("attemptPiecePlacement_52",null);
		values.put("attemptPiecePlacement_72",null);
		values.put("attemptPiecePlacement_83",null);
		values.put("attemptPiecePlacement_32",null);
		values.put("attemptPiecePlacement_40",null);
		values.put("attemptPiecePlacement_85",null);
		values.put("attemptPiecePlacement_15",null);
		values.put("attemptPiecePlacement_18",null);
		values.put("attemptPiecePlacement_56",null);
		values.put("attemptToCaptureSquare_6",null);
		values.put("attemptToCaptureSquare_5",null);
		values.put("attemptToCaptureSquare_1",null);
		values.put("attemptToCaptureSquare_2",null);
		values.put("attemptToCaptureSquare_0",null);
		values.put("attemptToCaptureSquare_3",null);
		values.put("attemptToCaptureSquare_4",null);
		values.put("attemptToCaptureSquare_7",null);
		values.put("attemptToPickUpPiece_0",null);
		values.put("canCastleBetweenPositions_16",null);
		values.put("canCastleBetweenPositions_4",null);
		values.put("canCastleBetweenPositions_11",null);
		values.put("canCastleBetweenPositions_12",null);
		values.put("canCastleBetweenPositions_7",null);
		values.put("canCastleBetweenPositions_10",null);
		values.put("canCastleBetweenPositions_19",null);
		values.put("canCastleBetweenPositions_13",null);
		values.put("canCastleBetweenPositions_2",null);
		values.put("canCastleBetweenPositions_3",null);
		values.put("canCastleBetweenPositions_21",null);
		values.put("canCastleBetweenPositions_1",null);
		values.put("canCastleBetweenPositions_5",null);
		values.put("canCastleBetweenPositions_23",null);
		values.put("canCastleBetweenPositions_15",null);
		values.put("canCastleBetweenPositions_20",null);
		values.put("canCastleBetweenPositions_6",null);
		values.put("canCastleBetweenPositions_8",null);
		values.put("canCastleBetweenPositions_17",null);
		values.put("canCastleBetweenPositions_0",null);
		values.put("canCastleBetweenPositions_14",null);
		values.put("canCastleBetweenPositions_18",null);
		values.put("canCastleBetweenPositions_9",null);
		values.put("canCastleBetweenPositions_22",null);
		values.put("captureCurrentMoment_41",null);
		values.put("captureCurrentMoment_12",null);
		values.put("captureCurrentMoment_23",null);
		values.put("captureCurrentMoment_42",null);
		values.put("captureCurrentMoment_9",null);
		values.put("captureCurrentMoment_3",null);
		values.put("captureCurrentMoment_48",null);
		values.put("captureCurrentMoment_28",null);
		values.put("captureCurrentMoment_18",null);
		values.put("captureCurrentMoment_32",null);
		values.put("captureCurrentMoment_37",null);
		values.put("captureCurrentMoment_34",null);
		values.put("captureCurrentMoment_17",null);
		values.put("captureCurrentMoment_35",null);
		values.put("captureCurrentMoment_26",null);
		values.put("captureCurrentMoment_13",null);
		values.put("captureCurrentMoment_30",null);
		values.put("captureCurrentMoment_22",null);
		values.put("captureCurrentMoment_47",null);
		values.put("captureCurrentMoment_14",null);
		values.put("captureCurrentMoment_15",null);
		values.put("captureCurrentMoment_19",null);
		values.put("captureCurrentMoment_0",null);
		values.put("captureCurrentMoment_16",null);
		values.put("captureCurrentMoment_46",null);
		values.put("captureCurrentMoment_49",null);
		values.put("captureCurrentMoment_55",null);
		values.put("captureCurrentMoment_33",null);
		values.put("captureCurrentMoment_24",null);
		values.put("captureCurrentMoment_10",null);
		values.put("captureCurrentMoment_2",null);
		values.put("captureCurrentMoment_25",null);
		values.put("captureCurrentMoment_43",null);
		values.put("captureCurrentMoment_40",null);
		values.put("captureCurrentMoment_21",null);
		values.put("captureCurrentMoment_50",null);
		values.put("captureCurrentMoment_36",null);
		values.put("captureCurrentMoment_45",null);
		values.put("captureCurrentMoment_27",null);
		values.put("captureCurrentMoment_38",null);
		values.put("captureCurrentMoment_39",null);
		values.put("captureCurrentMoment_6",null);
		values.put("captureCurrentMoment_8",null);
		values.put("captureCurrentMoment_29",null);
		values.put("captureCurrentMoment_4",null);
		values.put("captureCurrentMoment_7",null);
		values.put("captureCurrentMoment_1",null);
		values.put("captureCurrentMoment_51",null);
		values.put("captureCurrentMoment_31",null);
		values.put("captureCurrentMoment_52",null);
		values.put("captureCurrentMoment_54",null);
		values.put("captureCurrentMoment_5",null);
		values.put("captureCurrentMoment_53",null);
		values.put("captureCurrentMoment_44",null);
		values.put("captureCurrentMoment_11",null);
		values.put("captureCurrentMoment_20",null);
		values.put("checkForStalemate_3",null);
		values.put("checkForStalemate_2",null);
		values.put("checkForStalemate_5",null);
		values.put("checkForStalemate_9",null);
		values.put("checkForStalemate_11",null);
		values.put("checkForStalemate_1",null);
		values.put("checkForStalemate_7",null);
		values.put("checkForStalemate_14",null);
		values.put("checkForStalemate_17",null);
		values.put("checkForStalemate_12",null);
		values.put("checkForStalemate_13",null);
		values.put("checkForStalemate_4",null);
		values.put("checkForStalemate_8",null);
		values.put("checkForStalemate_10",null);
		values.put("checkForStalemate_6",null);
		values.put("checkForStalemate_16",null);
		values.put("checkForStalemate_0",null);
		values.put("checkForStalemate_15",null);
		values.put("clone_34",null);
		values.put("clone_6",null);
		values.put("clone_20",null);
		values.put("clone_26",null);
		values.put("clone_30",null);
		values.put("clone_48",null);
		values.put("clone_2",null);
		values.put("clone_56",null);
		values.put("clone_7",null);
		values.put("clone_1",null);
		values.put("clone_21",null);
		values.put("clone_38",null);
		values.put("clone_29",null);
		values.put("clone_17",null);
		values.put("clone_51",null);
		values.put("clone_35",null);
		values.put("clone_16",null);
		values.put("clone_50",null);
		values.put("clone_49",null);
		values.put("clone_57",null);
		values.put("clone_36",null);
		values.put("clone_0",null);
		values.put("clone_43",null);
		values.put("clone_10",null);
		values.put("clone_13",null);
		values.put("clone_19",null);
		values.put("clone_53",null);
		values.put("clone_32",null);
		values.put("clone_8",null);
		values.put("clone_15",null);
		values.put("clone_27",null);
		values.put("clone_14",null);
		values.put("clone_12",null);
		values.put("clone_39",null);
		values.put("clone_58",null);
		values.put("clone_31",null);
		values.put("clone_54",null);
		values.put("clone_44",null);
		values.put("clone_42",null);
		values.put("clone_55",null);
		values.put("clone_3",null);
		values.put("clone_22",null);
		values.put("clone_11",null);
		values.put("clone_45",null);
		values.put("clone_47",null);
		values.put("clone_18",null);
		values.put("clone_5",null);
		values.put("clone_9",null);
		values.put("clone_23",null);
		values.put("clone_37",null);
		values.put("clone_46",null);
		values.put("clone_25",null);
		values.put("clone_40",null);
		values.put("clone_33",null);
		values.put("clone_24",null);
		values.put("clone_28",null);
		values.put("clone_52",null);
		values.put("clone_4",null);
		values.put("clone_41",null);
		values.put("constructCastlingOpportunities_9",null);
		values.put("constructCastlingOpportunities_6",null);
		values.put("constructCastlingOpportunities_4",null);
		values.put("constructCastlingOpportunities_3",null);
		values.put("constructCastlingOpportunities_10",null);
		values.put("constructCastlingOpportunities_0",null);
		values.put("constructCastlingOpportunities_7",null);
		values.put("constructCastlingOpportunities_12",null);
		values.put("constructCastlingOpportunities_15",null);
		values.put("constructCastlingOpportunities_17",null);
		values.put("constructCastlingOpportunities_20",null);
		values.put("constructCastlingOpportunities_21",null);
		values.put("constructCastlingOpportunities_19",null);
		values.put("constructCastlingOpportunities_13",null);
		values.put("constructCastlingOpportunities_2",null);
		values.put("constructCastlingOpportunities_16",null);
		values.put("constructCastlingOpportunities_8",null);
		values.put("constructCastlingOpportunities_28",null);
		values.put("constructCastlingOpportunities_27",null);
		values.put("constructCastlingOpportunities_24",null);
		values.put("constructCastlingOpportunities_25",null);
		values.put("constructCastlingOpportunities_11",null);
		values.put("constructCastlingOpportunities_26",null);
		values.put("constructCastlingOpportunities_22",null);
		values.put("constructCastlingOpportunities_23",null);
		values.put("constructCastlingOpportunities_18",null);
		values.put("constructCastlingOpportunities_5",null);
		values.put("constructCastlingOpportunities_1",null);
		values.put("constructCastlingOpportunities_14",null);
		values.put("constructCastlingPiecesMovementTracker_159",null);
		values.put("constructCastlingPiecesMovementTracker_513",null);
		values.put("constructCastlingPiecesMovementTracker_280",null);
		values.put("constructCastlingPiecesMovementTracker_186",null);
		values.put("constructCastlingPiecesMovementTracker_327",null);
		values.put("constructCastlingPiecesMovementTracker_249",null);
		values.put("constructCastlingPiecesMovementTracker_320",null);
		values.put("constructCastlingPiecesMovementTracker_285",null);
		values.put("constructCastlingPiecesMovementTracker_295",null);
		values.put("constructCastlingPiecesMovementTracker_109",null);
		values.put("constructCastlingPiecesMovementTracker_394",null);
		values.put("constructCastlingPiecesMovementTracker_367",null);
		values.put("constructCastlingPiecesMovementTracker_30",null);
		values.put("constructCastlingPiecesMovementTracker_432",null);
		values.put("constructCastlingPiecesMovementTracker_391",null);
		values.put("constructCastlingPiecesMovementTracker_301",null);
		values.put("constructCastlingPiecesMovementTracker_140",null);
		values.put("constructCastlingPiecesMovementTracker_4",null);
		values.put("constructCastlingPiecesMovementTracker_466",null);
		values.put("constructCastlingPiecesMovementTracker_102",null);
		values.put("constructCastlingPiecesMovementTracker_425",null);
		values.put("constructCastlingPiecesMovementTracker_376",null);
		values.put("constructCastlingPiecesMovementTracker_491",null);
		values.put("constructCastlingPiecesMovementTracker_449",null);
		values.put("constructCastlingPiecesMovementTracker_60",null);
		values.put("constructCastlingPiecesMovementTracker_490",null);
		values.put("constructCastlingPiecesMovementTracker_105",null);
		values.put("constructCastlingPiecesMovementTracker_192",null);
		values.put("constructCastlingPiecesMovementTracker_408",null);
		values.put("constructCastlingPiecesMovementTracker_467",null);
		values.put("constructCastlingPiecesMovementTracker_360",null);
		values.put("constructCastlingPiecesMovementTracker_487",null);
		values.put("constructCastlingPiecesMovementTracker_407",null);
		values.put("constructCastlingPiecesMovementTracker_106",null);
		values.put("constructCastlingPiecesMovementTracker_187",null);
		values.put("constructCastlingPiecesMovementTracker_8",null);
		values.put("constructCastlingPiecesMovementTracker_515",null);
		values.put("constructCastlingPiecesMovementTracker_131",null);
		values.put("constructCastlingPiecesMovementTracker_233",null);
		values.put("constructCastlingPiecesMovementTracker_127",null);
		values.put("constructCastlingPiecesMovementTracker_91",null);
		values.put("constructCastlingPiecesMovementTracker_500",null);
		values.put("constructCastlingPiecesMovementTracker_126",null);
		values.put("constructCastlingPiecesMovementTracker_533",null);
		values.put("constructCastlingPiecesMovementTracker_334",null);
		values.put("constructCastlingPiecesMovementTracker_382",null);
		values.put("constructCastlingPiecesMovementTracker_488",null);
		values.put("constructCastlingPiecesMovementTracker_537",null);
		values.put("constructCastlingPiecesMovementTracker_42",null);
		values.put("constructCastlingPiecesMovementTracker_76",null);
		values.put("constructCastlingPiecesMovementTracker_381",null);
		values.put("constructCastlingPiecesMovementTracker_383",null);
		values.put("constructCastlingPiecesMovementTracker_146",null);
		values.put("constructCastlingPiecesMovementTracker_352",null);
		values.put("constructCastlingPiecesMovementTracker_415",null);
		values.put("constructCastlingPiecesMovementTracker_509",null);
		values.put("constructCastlingPiecesMovementTracker_247",null);
		values.put("constructCastlingPiecesMovementTracker_162",null);
		values.put("constructCastlingPiecesMovementTracker_410",null);
		values.put("constructCastlingPiecesMovementTracker_536",null);
		values.put("constructCastlingPiecesMovementTracker_128",null);
		values.put("constructCastlingPiecesMovementTracker_506",null);
		values.put("constructCastlingPiecesMovementTracker_387",null);
		values.put("constructCastlingPiecesMovementTracker_188",null);
		values.put("constructCastlingPiecesMovementTracker_444",null);
		values.put("constructCastlingPiecesMovementTracker_269",null);
		values.put("constructCastlingPiecesMovementTracker_242",null);
		values.put("constructCastlingPiecesMovementTracker_284",null);
		values.put("constructCastlingPiecesMovementTracker_521",null);
		values.put("constructCastlingPiecesMovementTracker_386",null);
		values.put("constructCastlingPiecesMovementTracker_221",null);
		values.put("constructCastlingPiecesMovementTracker_118",null);
		values.put("constructCastlingPiecesMovementTracker_133",null);
		values.put("constructCastlingPiecesMovementTracker_430",null);
		values.put("constructCastlingPiecesMovementTracker_316",null);
		values.put("constructCastlingPiecesMovementTracker_474",null);
		values.put("constructCastlingPiecesMovementTracker_484",null);
		values.put("constructCastlingPiecesMovementTracker_44",null);
		values.put("constructCastlingPiecesMovementTracker_328",null);
		values.put("constructCastlingPiecesMovementTracker_297",null);
		values.put("constructCastlingPiecesMovementTracker_378",null);
		values.put("constructCastlingPiecesMovementTracker_219",null);
		values.put("constructCastlingPiecesMovementTracker_492",null);
		values.put("constructCastlingPiecesMovementTracker_68",null);
		values.put("constructCastlingPiecesMovementTracker_332",null);
		values.put("constructCastlingPiecesMovementTracker_185",null);
		values.put("constructCastlingPiecesMovementTracker_196",null);
		values.put("constructCastlingPiecesMovementTracker_346",null);
		values.put("constructCastlingPiecesMovementTracker_411",null);
		values.put("constructCastlingPiecesMovementTracker_111",null);
		values.put("constructCastlingPiecesMovementTracker_356",null);
		values.put("constructCastlingPiecesMovementTracker_171",null);
		values.put("constructCastlingPiecesMovementTracker_252",null);
		values.put("constructCastlingPiecesMovementTracker_389",null);
		values.put("constructCastlingPiecesMovementTracker_63",null);
		values.put("constructCastlingPiecesMovementTracker_178",null);
		values.put("constructCastlingPiecesMovementTracker_483",null);
		values.put("constructCastlingPiecesMovementTracker_478",null);
		values.put("constructCastlingPiecesMovementTracker_323",null);
		values.put("constructCastlingPiecesMovementTracker_485",null);
		values.put("constructCastlingPiecesMovementTracker_17",null);
		values.put("constructCastlingPiecesMovementTracker_450",null);
		values.put("constructCastlingPiecesMovementTracker_108",null);
		values.put("constructCastlingPiecesMovementTracker_373",null);
		values.put("constructCastlingPiecesMovementTracker_144",null);
		values.put("constructCastlingPiecesMovementTracker_61",null);
		values.put("constructCastlingPiecesMovementTracker_277",null);
		values.put("constructCastlingPiecesMovementTracker_315",null);
		values.put("constructCastlingPiecesMovementTracker_250",null);
		values.put("constructCastlingPiecesMovementTracker_326",null);
		values.put("constructCastlingPiecesMovementTracker_253",null);
		values.put("constructCastlingPiecesMovementTracker_313",null);
		values.put("constructCastlingPiecesMovementTracker_364",null);
		values.put("constructCastlingPiecesMovementTracker_311",null);
		values.put("constructCastlingPiecesMovementTracker_330",null);
		values.put("constructCastlingPiecesMovementTracker_114",null);
		values.put("constructCastlingPiecesMovementTracker_538",null);
		values.put("constructCastlingPiecesMovementTracker_276",null);
		values.put("constructCastlingPiecesMovementTracker_52",null);
		values.put("constructCastlingPiecesMovementTracker_104",null);
		values.put("constructCastlingPiecesMovementTracker_2",null);
		values.put("constructCastlingPiecesMovementTracker_184",null);
		values.put("constructCastlingPiecesMovementTracker_77",null);
		values.put("constructCastlingPiecesMovementTracker_365",null);
		values.put("constructCastlingPiecesMovementTracker_291",null);
		values.put("constructCastlingPiecesMovementTracker_202",null);
		values.put("constructCastlingPiecesMovementTracker_191",null);
		values.put("constructCastlingPiecesMovementTracker_231",null);
		values.put("constructCastlingPiecesMovementTracker_211",null);
		values.put("constructCastlingPiecesMovementTracker_481",null);
		values.put("constructCastlingPiecesMovementTracker_397",null);
		values.put("constructCastlingPiecesMovementTracker_390",null);
		values.put("constructCastlingPiecesMovementTracker_463",null);
		values.put("constructCastlingPiecesMovementTracker_475",null);
		values.put("constructCastlingPiecesMovementTracker_385",null);
		values.put("constructCastlingPiecesMovementTracker_529",null);
		values.put("constructCastlingPiecesMovementTracker_65",null);
		values.put("constructCastlingPiecesMovementTracker_271",null);
		values.put("constructCastlingPiecesMovementTracker_419",null);
		values.put("constructCastlingPiecesMovementTracker_445",null);
		values.put("constructCastlingPiecesMovementTracker_213",null);
		values.put("constructCastlingPiecesMovementTracker_256",null);
		values.put("constructCastlingPiecesMovementTracker_87",null);
		values.put("constructCastlingPiecesMovementTracker_225",null);
		values.put("constructCastlingPiecesMovementTracker_460",null);
		values.put("constructCastlingPiecesMovementTracker_115",null);
		values.put("constructCastlingPiecesMovementTracker_152",null);
		values.put("constructCastlingPiecesMovementTracker_289",null);
		values.put("constructCastlingPiecesMovementTracker_142",null);
		values.put("constructCastlingPiecesMovementTracker_439",null);
		values.put("constructCastlingPiecesMovementTracker_342",null);
		values.put("constructCastlingPiecesMovementTracker_290",null);
		values.put("constructCastlingPiecesMovementTracker_339",null);
		values.put("constructCastlingPiecesMovementTracker_525",null);
		values.put("constructCastlingPiecesMovementTracker_173",null);
		values.put("constructCastlingPiecesMovementTracker_224",null);
		values.put("constructCastlingPiecesMovementTracker_377",null);
		values.put("constructCastlingPiecesMovementTracker_246",null);
		values.put("constructCastlingPiecesMovementTracker_384",null);
		values.put("constructCastlingPiecesMovementTracker_220",null);
		values.put("constructCastlingPiecesMovementTracker_298",null);
		values.put("constructCastlingPiecesMovementTracker_310",null);
		values.put("constructCastlingPiecesMovementTracker_57",null);
		values.put("constructCastlingPiecesMovementTracker_45",null);
		values.put("constructCastlingPiecesMovementTracker_164",null);
		values.put("constructCastlingPiecesMovementTracker_274",null);
		values.put("constructCastlingPiecesMovementTracker_136",null);
		values.put("constructCastlingPiecesMovementTracker_531",null);
		values.put("constructCastlingPiecesMovementTracker_97",null);
		values.put("constructCastlingPiecesMovementTracker_80",null);
		values.put("constructCastlingPiecesMovementTracker_88",null);
		values.put("constructCastlingPiecesMovementTracker_232",null);
		values.put("constructCastlingPiecesMovementTracker_26",null);
		values.put("constructCastlingPiecesMovementTracker_261",null);
		values.put("constructCastlingPiecesMovementTracker_234",null);
		values.put("constructCastlingPiecesMovementTracker_120",null);
		values.put("constructCastlingPiecesMovementTracker_528",null);
		values.put("constructCastlingPiecesMovementTracker_438",null);
		values.put("constructCastlingPiecesMovementTracker_33",null);
		values.put("constructCastlingPiecesMovementTracker_143",null);
		values.put("constructCastlingPiecesMovementTracker_258",null);
		values.put("constructCastlingPiecesMovementTracker_442",null);
		values.put("constructCastlingPiecesMovementTracker_89",null);
		values.put("constructCastlingPiecesMovementTracker_198",null);
		values.put("constructCastlingPiecesMovementTracker_458",null);
		values.put("constructCastlingPiecesMovementTracker_510",null);
		values.put("constructCastlingPiecesMovementTracker_9",null);
		values.put("constructCastlingPiecesMovementTracker_370",null);
		values.put("constructCastlingPiecesMovementTracker_476",null);
		values.put("constructCastlingPiecesMovementTracker_5",null);
		values.put("constructCastlingPiecesMovementTracker_147",null);
		values.put("constructCastlingPiecesMovementTracker_306",null);
		values.put("constructCastlingPiecesMovementTracker_190",null);
		values.put("constructCastlingPiecesMovementTracker_420",null);
		values.put("constructCastlingPiecesMovementTracker_318",null);
		values.put("constructCastlingPiecesMovementTracker_305",null);
		values.put("constructCastlingPiecesMovementTracker_74",null);
		values.put("constructCastlingPiecesMovementTracker_112",null);
		values.put("constructCastlingPiecesMovementTracker_43",null);
		values.put("constructCastlingPiecesMovementTracker_176",null);
		values.put("constructCastlingPiecesMovementTracker_392",null);
		values.put("constructCastlingPiecesMovementTracker_20",null);
		values.put("constructCastlingPiecesMovementTracker_433",null);
		values.put("constructCastlingPiecesMovementTracker_520",null);
		values.put("constructCastlingPiecesMovementTracker_402",null);
		values.put("constructCastlingPiecesMovementTracker_499",null);
		values.put("constructCastlingPiecesMovementTracker_505",null);
		values.put("constructCastlingPiecesMovementTracker_10",null);
		values.put("constructCastlingPiecesMovementTracker_340",null);
		values.put("constructCastlingPiecesMovementTracker_494",null);
		values.put("constructCastlingPiecesMovementTracker_53",null);
		values.put("constructCastlingPiecesMovementTracker_199",null);
		values.put("constructCastlingPiecesMovementTracker_49",null);
		values.put("constructCastlingPiecesMovementTracker_218",null);
		values.put("constructCastlingPiecesMovementTracker_353",null);
		values.put("constructCastlingPiecesMovementTracker_254",null);
		values.put("constructCastlingPiecesMovementTracker_257",null);
		values.put("constructCastlingPiecesMovementTracker_512",null);
		values.put("constructCastlingPiecesMovementTracker_464",null);
		values.put("constructCastlingPiecesMovementTracker_532",null);
		values.put("constructCastlingPiecesMovementTracker_12",null);
		values.put("constructCastlingPiecesMovementTracker_459",null);
		values.put("constructCastlingPiecesMovementTracker_123",null);
		values.put("constructCastlingPiecesMovementTracker_333",null);
		values.put("constructCastlingPiecesMovementTracker_69",null);
		values.put("constructCastlingPiecesMovementTracker_116",null);
		values.put("constructCastlingPiecesMovementTracker_380",null);
		values.put("constructCastlingPiecesMovementTracker_423",null);
		values.put("constructCastlingPiecesMovementTracker_322",null);
		values.put("constructCastlingPiecesMovementTracker_273",null);
		values.put("constructCastlingPiecesMovementTracker_517",null);
		values.put("constructCastlingPiecesMovementTracker_227",null);
		values.put("constructCastlingPiecesMovementTracker_223",null);
		values.put("constructCastlingPiecesMovementTracker_182",null);
		values.put("constructCastlingPiecesMovementTracker_405",null);
		values.put("constructCastlingPiecesMovementTracker_238",null);
		values.put("constructCastlingPiecesMovementTracker_23",null);
		values.put("constructCastlingPiecesMovementTracker_508",null);
		values.put("constructCastlingPiecesMovementTracker_230",null);
		values.put("constructCastlingPiecesMovementTracker_357",null);
		values.put("constructCastlingPiecesMovementTracker_345",null);
		values.put("constructCastlingPiecesMovementTracker_181",null);
		values.put("constructCastlingPiecesMovementTracker_347",null);
		values.put("constructCastlingPiecesMovementTracker_455",null);
		values.put("constructCastlingPiecesMovementTracker_519",null);
		values.put("constructCastlingPiecesMovementTracker_462",null);
		values.put("constructCastlingPiecesMovementTracker_48",null);
		values.put("constructCastlingPiecesMovementTracker_279",null);
		values.put("constructCastlingPiecesMovementTracker_321",null);
		values.put("constructCastlingPiecesMovementTracker_235",null);
		values.put("constructCastlingPiecesMovementTracker_228",null);
		values.put("constructCastlingPiecesMovementTracker_263",null);
		values.put("constructCastlingPiecesMovementTracker_314",null);
		values.put("constructCastlingPiecesMovementTracker_189",null);
		values.put("constructCastlingPiecesMovementTracker_19",null);
		values.put("constructCastlingPiecesMovementTracker_362",null);
		values.put("constructCastlingPiecesMovementTracker_38",null);
		values.put("constructCastlingPiecesMovementTracker_293",null);
		values.put("constructCastlingPiecesMovementTracker_308",null);
		values.put("constructCastlingPiecesMovementTracker_443",null);
		values.put("constructCastlingPiecesMovementTracker_86",null);
		values.put("constructCastlingPiecesMovementTracker_355",null);
		values.put("constructCastlingPiecesMovementTracker_58",null);
		values.put("constructCastlingPiecesMovementTracker_243",null);
		values.put("constructCastlingPiecesMovementTracker_16",null);
		values.put("constructCastlingPiecesMovementTracker_168",null);
		values.put("constructCastlingPiecesMovementTracker_477",null);
		values.put("constructCastlingPiecesMovementTracker_125",null);
		values.put("constructCastlingPiecesMovementTracker_177",null);
		values.put("constructCastlingPiecesMovementTracker_40",null);
		values.put("constructCastlingPiecesMovementTracker_262",null);
		values.put("constructCastlingPiecesMovementTracker_472",null);
		values.put("constructCastlingPiecesMovementTracker_22",null);
		values.put("constructCastlingPiecesMovementTracker_414",null);
		values.put("constructCastlingPiecesMovementTracker_124",null);
		values.put("constructCastlingPiecesMovementTracker_451",null);
		values.put("constructCastlingPiecesMovementTracker_207",null);
		values.put("constructCastlingPiecesMovementTracker_170",null);
		values.put("constructCastlingPiecesMovementTracker_172",null);
		values.put("constructCastlingPiecesMovementTracker_359",null);
		values.put("constructCastlingPiecesMovementTracker_435",null);
		values.put("constructCastlingPiecesMovementTracker_452",null);
		values.put("constructCastlingPiecesMovementTracker_145",null);
		values.put("constructCastlingPiecesMovementTracker_331",null);
		values.put("constructCastlingPiecesMovementTracker_429",null);
		values.put("constructCastlingPiecesMovementTracker_51",null);
		values.put("constructCastlingPiecesMovementTracker_237",null);
		values.put("constructCastlingPiecesMovementTracker_511",null);
		values.put("constructCastlingPiecesMovementTracker_157",null);
		values.put("constructCastlingPiecesMovementTracker_222",null);
		values.put("constructCastlingPiecesMovementTracker_288",null);
		values.put("constructCastlingPiecesMovementTracker_78",null);
		values.put("constructCastlingPiecesMovementTracker_319",null);
		values.put("constructCastlingPiecesMovementTracker_516",null);
		values.put("constructCastlingPiecesMovementTracker_28",null);
		values.put("constructCastlingPiecesMovementTracker_85",null);
		values.put("constructCastlingPiecesMovementTracker_351",null);
		values.put("constructCastlingPiecesMovementTracker_302",null);
		values.put("constructCastlingPiecesMovementTracker_446",null);
		values.put("constructCastlingPiecesMovementTracker_62",null);
		values.put("constructCastlingPiecesMovementTracker_130",null);
		values.put("constructCastlingPiecesMovementTracker_448",null);
		values.put("constructCastlingPiecesMovementTracker_336",null);
		values.put("constructCastlingPiecesMovementTracker_241",null);
		values.put("constructCastlingPiecesMovementTracker_153",null);
		values.put("constructCastlingPiecesMovementTracker_113",null);
		values.put("constructCastlingPiecesMovementTracker_416",null);
		values.put("constructCastlingPiecesMovementTracker_437",null);
		values.put("constructCastlingPiecesMovementTracker_154",null);
		values.put("constructCastlingPiecesMovementTracker_260",null);
		values.put("constructCastlingPiecesMovementTracker_119",null);
		values.put("constructCastlingPiecesMovementTracker_139",null);
		values.put("constructCastlingPiecesMovementTracker_350",null);
		values.put("constructCastlingPiecesMovementTracker_507",null);
		values.put("constructCastlingPiecesMovementTracker_148",null);
		values.put("constructCastlingPiecesMovementTracker_465",null);
		values.put("constructCastlingPiecesMovementTracker_32",null);
		values.put("constructCastlingPiecesMovementTracker_287",null);
		values.put("constructCastlingPiecesMovementTracker_469",null);
		values.put("constructCastlingPiecesMovementTracker_150",null);
		values.put("constructCastlingPiecesMovementTracker_6",null);
		values.put("constructCastlingPiecesMovementTracker_292",null);
		values.put("constructCastlingPiecesMovementTracker_72",null);
		values.put("constructCastlingPiecesMovementTracker_456",null);
		values.put("constructCastlingPiecesMovementTracker_215",null);
		values.put("constructCastlingPiecesMovementTracker_46",null);
		values.put("constructCastlingPiecesMovementTracker_83",null);
		values.put("constructCastlingPiecesMovementTracker_454",null);
		values.put("constructCastlingPiecesMovementTracker_344",null);
		values.put("constructCastlingPiecesMovementTracker_94",null);
		values.put("constructCastlingPiecesMovementTracker_361",null);
		values.put("constructCastlingPiecesMovementTracker_453",null);
		values.put("constructCastlingPiecesMovementTracker_255",null);
		values.put("constructCastlingPiecesMovementTracker_281",null);
		values.put("constructCastlingPiecesMovementTracker_34",null);
		values.put("constructCastlingPiecesMovementTracker_151",null);
		values.put("constructCastlingPiecesMovementTracker_183",null);
		values.put("constructCastlingPiecesMovementTracker_209",null);
		values.put("constructCastlingPiecesMovementTracker_138",null);
		values.put("constructCastlingPiecesMovementTracker_84",null);
		values.put("constructCastlingPiecesMovementTracker_539",null);
		values.put("constructCastlingPiecesMovementTracker_412",null);
		values.put("constructCastlingPiecesMovementTracker_296",null);
		values.put("constructCastlingPiecesMovementTracker_502",null);
		values.put("constructCastlingPiecesMovementTracker_59",null);
		values.put("constructCastlingPiecesMovementTracker_160",null);
		values.put("constructCastlingPiecesMovementTracker_137",null);
		values.put("constructCastlingPiecesMovementTracker_479",null);
		values.put("constructCastlingPiecesMovementTracker_480",null);
		values.put("constructCastlingPiecesMovementTracker_54",null);
		values.put("constructCastlingPiecesMovementTracker_99",null);
		values.put("constructCastlingPiecesMovementTracker_482",null);
		values.put("constructCastlingPiecesMovementTracker_300",null);
		values.put("constructCastlingPiecesMovementTracker_312",null);
		values.put("constructCastlingPiecesMovementTracker_486",null);
		values.put("constructCastlingPiecesMovementTracker_259",null);
		values.put("constructCastlingPiecesMovementTracker_3",null);
		values.put("constructCastlingPiecesMovementTracker_286",null);
		values.put("constructCastlingPiecesMovementTracker_303",null);
		values.put("constructCastlingPiecesMovementTracker_441",null);
		values.put("constructCastlingPiecesMovementTracker_337",null);
		values.put("constructCastlingPiecesMovementTracker_434",null);
		values.put("constructCastlingPiecesMovementTracker_473",null);
		values.put("constructCastlingPiecesMovementTracker_169",null);
		values.put("constructCastlingPiecesMovementTracker_245",null);
		values.put("constructCastlingPiecesMovementTracker_417",null);
		values.put("constructCastlingPiecesMovementTracker_349",null);
		values.put("constructCastlingPiecesMovementTracker_200",null);
		values.put("constructCastlingPiecesMovementTracker_398",null);
		values.put("constructCastlingPiecesMovementTracker_37",null);
		values.put("constructCastlingPiecesMovementTracker_240",null);
		values.put("constructCastlingPiecesMovementTracker_132",null);
		values.put("constructCastlingPiecesMovementTracker_374",null);
		values.put("constructCastlingPiecesMovementTracker_440",null);
		values.put("constructCastlingPiecesMovementTracker_457",null);
		values.put("constructCastlingPiecesMovementTracker_31",null);
		values.put("constructCastlingPiecesMovementTracker_121",null);
		values.put("constructCastlingPiecesMovementTracker_90",null);
		values.put("constructCastlingPiecesMovementTracker_501",null);
		values.put("constructCastlingPiecesMovementTracker_372",null);
		values.put("constructCastlingPiecesMovementTracker_1",null);
		values.put("constructCastlingPiecesMovementTracker_50",null);
		values.put("constructCastlingPiecesMovementTracker_523",null);
		values.put("constructCastlingPiecesMovementTracker_110",null);
		values.put("constructCastlingPiecesMovementTracker_325",null);
		values.put("constructCastlingPiecesMovementTracker_341",null);
		values.put("constructCastlingPiecesMovementTracker_358",null);
		values.put("constructCastlingPiecesMovementTracker_64",null);
		values.put("constructCastlingPiecesMovementTracker_101",null);
		values.put("constructCastlingPiecesMovementTracker_324",null);
		values.put("constructCastlingPiecesMovementTracker_129",null);
		values.put("constructCastlingPiecesMovementTracker_495",null);
		values.put("constructCastlingPiecesMovementTracker_522",null);
		values.put("constructCastlingPiecesMovementTracker_265",null);
		values.put("constructCastlingPiecesMovementTracker_278",null);
		values.put("constructCastlingPiecesMovementTracker_504",null);
		values.put("constructCastlingPiecesMovementTracker_436",null);
		values.put("constructCastlingPiecesMovementTracker_404",null);
		values.put("constructCastlingPiecesMovementTracker_180",null);
		values.put("constructCastlingPiecesMovementTracker_526",null);
		values.put("constructCastlingPiecesMovementTracker_167",null);
		values.put("constructCastlingPiecesMovementTracker_236",null);
		values.put("constructCastlingPiecesMovementTracker_41",null);
		values.put("constructCastlingPiecesMovementTracker_0",null);
		values.put("constructCastlingPiecesMovementTracker_239",null);
		values.put("constructCastlingPiecesMovementTracker_400",null);
		values.put("constructCastlingPiecesMovementTracker_122",null);
		values.put("constructCastlingPiecesMovementTracker_55",null);
		values.put("constructCastlingPiecesMovementTracker_354",null);
		values.put("constructCastlingPiecesMovementTracker_535",null);
		values.put("constructCastlingPiecesMovementTracker_266",null);
		values.put("constructCastlingPiecesMovementTracker_363",null);
		values.put("constructCastlingPiecesMovementTracker_175",null);
		values.put("constructCastlingPiecesMovementTracker_166",null);
		values.put("constructCastlingPiecesMovementTracker_217",null);
		values.put("constructCastlingPiecesMovementTracker_244",null);
		values.put("constructCastlingPiecesMovementTracker_431",null);
		values.put("constructCastlingPiecesMovementTracker_35",null);
		values.put("constructCastlingPiecesMovementTracker_524",null);
		values.put("constructCastlingPiecesMovementTracker_366",null);
		values.put("constructCastlingPiecesMovementTracker_371",null);
		values.put("constructCastlingPiecesMovementTracker_194",null);
		values.put("constructCastlingPiecesMovementTracker_25",null);
		values.put("constructCastlingPiecesMovementTracker_56",null);
		values.put("constructCastlingPiecesMovementTracker_197",null);
		values.put("constructCastlingPiecesMovementTracker_468",null);
		values.put("constructCastlingPiecesMovementTracker_248",null);
		values.put("constructCastlingPiecesMovementTracker_208",null);
		values.put("constructCastlingPiecesMovementTracker_275",null);
		values.put("constructCastlingPiecesMovementTracker_375",null);
		values.put("constructCastlingPiecesMovementTracker_268",null);
		values.put("constructCastlingPiecesMovementTracker_158",null);
		values.put("constructCastlingPiecesMovementTracker_66",null);
		values.put("constructCastlingPiecesMovementTracker_79",null);
		values.put("constructCastlingPiecesMovementTracker_396",null);
		values.put("constructCastlingPiecesMovementTracker_471",null);
		values.put("constructCastlingPiecesMovementTracker_11",null);
		values.put("constructCastlingPiecesMovementTracker_135",null);
		values.put("constructCastlingPiecesMovementTracker_165",null);
		values.put("constructCastlingPiecesMovementTracker_427",null);
		values.put("constructCastlingPiecesMovementTracker_422",null);
		values.put("constructCastlingPiecesMovementTracker_503",null);
		values.put("constructCastlingPiecesMovementTracker_399",null);
		values.put("constructCastlingPiecesMovementTracker_36",null);
		values.put("constructCastlingPiecesMovementTracker_82",null);
		values.put("constructCastlingPiecesMovementTracker_210",null);
		values.put("constructCastlingPiecesMovementTracker_141",null);
		values.put("constructCastlingPiecesMovementTracker_403",null);
		values.put("constructCastlingPiecesMovementTracker_21",null);
		values.put("constructCastlingPiecesMovementTracker_98",null);
		values.put("constructCastlingPiecesMovementTracker_81",null);
		values.put("constructCastlingPiecesMovementTracker_309",null);
		values.put("constructCastlingPiecesMovementTracker_29",null);
		values.put("constructCastlingPiecesMovementTracker_421",null);
		values.put("constructCastlingPiecesMovementTracker_73",null);
		values.put("constructCastlingPiecesMovementTracker_329",null);
		values.put("constructCastlingPiecesMovementTracker_527",null);
		values.put("constructCastlingPiecesMovementTracker_368",null);
		values.put("constructCastlingPiecesMovementTracker_212",null);
		values.put("constructCastlingPiecesMovementTracker_93",null);
		values.put("constructCastlingPiecesMovementTracker_179",null);
		values.put("constructCastlingPiecesMovementTracker_461",null);
		values.put("constructCastlingPiecesMovementTracker_393",null);
		values.put("constructCastlingPiecesMovementTracker_47",null);
		values.put("constructCastlingPiecesMovementTracker_229",null);
		values.put("constructCastlingPiecesMovementTracker_282",null);
		values.put("constructCastlingPiecesMovementTracker_409",null);
		values.put("constructCastlingPiecesMovementTracker_470",null);
		values.put("constructCastlingPiecesMovementTracker_299",null);
		values.put("constructCastlingPiecesMovementTracker_418",null);
		values.put("constructCastlingPiecesMovementTracker_530",null);
		values.put("constructCastlingPiecesMovementTracker_216",null);
		values.put("constructCastlingPiecesMovementTracker_514",null);
		values.put("constructCastlingPiecesMovementTracker_7",null);
		values.put("constructCastlingPiecesMovementTracker_226",null);
		values.put("constructCastlingPiecesMovementTracker_174",null);
		values.put("constructCastlingPiecesMovementTracker_203",null);
		values.put("constructCastlingPiecesMovementTracker_283",null);
		values.put("constructCastlingPiecesMovementTracker_369",null);
		values.put("constructCastlingPiecesMovementTracker_294",null);
		values.put("constructCastlingPiecesMovementTracker_379",null);
		values.put("constructCastlingPiecesMovementTracker_155",null);
		values.put("constructCastlingPiecesMovementTracker_307",null);
		values.put("constructCastlingPiecesMovementTracker_489",null);
		values.put("constructCastlingPiecesMovementTracker_206",null);
		values.put("constructCastlingPiecesMovementTracker_317",null);
		values.put("constructCastlingPiecesMovementTracker_27",null);
		values.put("constructCastlingPiecesMovementTracker_24",null);
		values.put("constructCastlingPiecesMovementTracker_149",null);
		values.put("constructCastlingPiecesMovementTracker_534",null);
		values.put("constructCastlingPiecesMovementTracker_163",null);
		values.put("constructCastlingPiecesMovementTracker_338",null);
		values.put("constructCastlingPiecesMovementTracker_75",null);
		values.put("constructCastlingPiecesMovementTracker_100",null);
		values.put("constructCastlingPiecesMovementTracker_71",null);
		values.put("constructCastlingPiecesMovementTracker_335",null);
		values.put("constructCastlingPiecesMovementTracker_496",null);
		values.put("constructCastlingPiecesMovementTracker_413",null);
		values.put("constructCastlingPiecesMovementTracker_156",null);
		values.put("constructCastlingPiecesMovementTracker_205",null);
		values.put("constructCastlingPiecesMovementTracker_270",null);
		values.put("constructCastlingPiecesMovementTracker_92",null);
		values.put("constructCastlingPiecesMovementTracker_67",null);
		values.put("constructCastlingPiecesMovementTracker_406",null);
		values.put("constructCastlingPiecesMovementTracker_388",null);
		values.put("constructCastlingPiecesMovementTracker_424",null);
		values.put("constructCastlingPiecesMovementTracker_343",null);
		values.put("constructCastlingPiecesMovementTracker_395",null);
		values.put("constructCastlingPiecesMovementTracker_426",null);
		values.put("constructCastlingPiecesMovementTracker_161",null);
		values.put("constructCastlingPiecesMovementTracker_272",null);
		values.put("constructCastlingPiecesMovementTracker_193",null);
		values.put("constructCastlingPiecesMovementTracker_447",null);
		values.put("constructCastlingPiecesMovementTracker_304",null);
		values.put("constructCastlingPiecesMovementTracker_15",null);
		values.put("constructCastlingPiecesMovementTracker_134",null);
		values.put("constructCastlingPiecesMovementTracker_107",null);
		values.put("constructCastlingPiecesMovementTracker_348",null);
		values.put("constructCastlingPiecesMovementTracker_14",null);
		values.put("constructCastlingPiecesMovementTracker_497",null);
		values.put("constructCastlingPiecesMovementTracker_195",null);
		values.put("constructCastlingPiecesMovementTracker_95",null);
		values.put("constructCastlingPiecesMovementTracker_117",null);
		values.put("constructCastlingPiecesMovementTracker_251",null);
		values.put("constructCastlingPiecesMovementTracker_39",null);
		values.put("constructCastlingPiecesMovementTracker_103",null);
		values.put("constructCastlingPiecesMovementTracker_13",null);
		values.put("constructCastlingPiecesMovementTracker_201",null);
		values.put("constructCastlingPiecesMovementTracker_96",null);
		values.put("constructCastlingPiecesMovementTracker_18",null);
		values.put("constructCastlingPiecesMovementTracker_264",null);
		values.put("constructCastlingPiecesMovementTracker_493",null);
		values.put("constructCastlingPiecesMovementTracker_70",null);
		values.put("constructCastlingPiecesMovementTracker_498",null);
		values.put("constructCastlingPiecesMovementTracker_428",null);
		values.put("constructCastlingPiecesMovementTracker_204",null);
		values.put("constructCastlingPiecesMovementTracker_401",null);
		values.put("constructCastlingPiecesMovementTracker_518",null);
		values.put("constructCastlingPiecesMovementTracker_214",null);
		values.put("constructCastlingPiecesMovementTracker_267",null);
		values.put("cullIllegalMoves_11",null);
		values.put("cullIllegalMoves_21",null);
		values.put("cullIllegalMoves_12",null);
		values.put("cullIllegalMoves_6",null);
		values.put("cullIllegalMoves_17",null);
		values.put("cullIllegalMoves_18",null);
		values.put("cullIllegalMoves_23",null);
		values.put("cullIllegalMoves_1",null);
		values.put("cullIllegalMoves_4",null);
		values.put("cullIllegalMoves_14",null);
		values.put("cullIllegalMoves_15",null);
		values.put("cullIllegalMoves_0",null);
		values.put("cullIllegalMoves_24",null);
		values.put("cullIllegalMoves_7",null);
		values.put("cullIllegalMoves_13",null);
		values.put("cullIllegalMoves_20",null);
		values.put("cullIllegalMoves_2",null);
		values.put("cullIllegalMoves_8",null);
		values.put("cullIllegalMoves_16",null);
		values.put("cullIllegalMoves_3",null);
		values.put("cullIllegalMoves_10",null);
		values.put("cullIllegalMoves_22",null);
		values.put("cullIllegalMoves_19",null);
		values.put("cullIllegalMoves_9",null);
		values.put("cullIllegalMoves_27",null);
		values.put("cullIllegalMoves_25",null);
		values.put("cullIllegalMoves_26",null);
		values.put("cullIllegalMoves_5",null);
		values.put("cullSpecialCases_5",null);
		values.put("cullSpecialCases_4",null);
		values.put("cullSpecialCases_3",null);
		values.put("cullSpecialCases_2",null);
		values.put("cullSpecialCases_1",null);
		values.put("cullSpecialCases_0",null);
		values.put("determineIfCurrentPlayerIsInCheck_16",null);
		values.put("determineIfCurrentPlayerIsInCheck_3",null);
		values.put("determineIfCurrentPlayerIsInCheck_27",null);
		values.put("determineIfCurrentPlayerIsInCheck_28",null);
		values.put("determineIfCurrentPlayerIsInCheck_6",null);
		values.put("determineIfCurrentPlayerIsInCheck_14",null);
		values.put("determineIfCurrentPlayerIsInCheck_4",null);
		values.put("determineIfCurrentPlayerIsInCheck_35",null);
		values.put("determineIfCurrentPlayerIsInCheck_15",null);
		values.put("determineIfCurrentPlayerIsInCheck_36",null);
		values.put("determineIfCurrentPlayerIsInCheck_46",null);
		values.put("determineIfCurrentPlayerIsInCheck_7",null);
		values.put("determineIfCurrentPlayerIsInCheck_25",null);
		values.put("determineIfCurrentPlayerIsInCheck_37",null);
		values.put("determineIfCurrentPlayerIsInCheck_11",null);
		values.put("determineIfCurrentPlayerIsInCheck_38",null);
		values.put("determineIfCurrentPlayerIsInCheck_18",null);
		values.put("determineIfCurrentPlayerIsInCheck_21",null);
		values.put("determineIfCurrentPlayerIsInCheck_22",null);
		values.put("determineIfCurrentPlayerIsInCheck_32",null);
		values.put("determineIfCurrentPlayerIsInCheck_33",null);
		values.put("determineIfCurrentPlayerIsInCheck_20",null);
		values.put("determineIfCurrentPlayerIsInCheck_0",null);
		values.put("determineIfCurrentPlayerIsInCheck_44",null);
		values.put("determineIfCurrentPlayerIsInCheck_5",null);
		values.put("determineIfCurrentPlayerIsInCheck_12",null);
		values.put("determineIfCurrentPlayerIsInCheck_29",null);
		values.put("determineIfCurrentPlayerIsInCheck_45",null);
		values.put("determineIfCurrentPlayerIsInCheck_42",null);
		values.put("determineIfCurrentPlayerIsInCheck_8",null);
		values.put("determineIfCurrentPlayerIsInCheck_13",null);
		values.put("determineIfCurrentPlayerIsInCheck_34",null);
		values.put("determineIfCurrentPlayerIsInCheck_9",null);
		values.put("determineIfCurrentPlayerIsInCheck_26",null);
		values.put("determineIfCurrentPlayerIsInCheck_41",null);
		values.put("determineIfCurrentPlayerIsInCheck_40",null);
		values.put("determineIfCurrentPlayerIsInCheck_10",null);
		values.put("determineIfCurrentPlayerIsInCheck_1",null);
		values.put("determineIfCurrentPlayerIsInCheck_30",null);
		values.put("determineIfCurrentPlayerIsInCheck_23",null);
		values.put("determineIfCurrentPlayerIsInCheck_17",null);
		values.put("determineIfCurrentPlayerIsInCheck_31",null);
		values.put("determineIfCurrentPlayerIsInCheck_43",null);
		values.put("determineIfCurrentPlayerIsInCheck_24",null);
		values.put("determineIfCurrentPlayerIsInCheck_19",null);
		values.put("determineIfCurrentPlayerIsInCheck_2",null);
		values.put("determineIfCurrentPlayerIsInCheck_39",null);
		values.put("duplicateArrayList_2",null);
		values.put("duplicateArrayList_4",null);
		values.put("duplicateArrayList_3",null);
		values.put("duplicateArrayList_5",null);
		values.put("duplicateArrayList_1",null);
		values.put("duplicateArrayList_0",null);
		values.put("getCheckedLine_2",null);
		values.put("getCheckedLine_23",null);
		values.put("getCheckedLine_24",null);
		values.put("getCheckedLine_5",null);
		values.put("getCheckedLine_11",null);
		values.put("getCheckedLine_3",null);
		values.put("getCheckedLine_30",null);
		values.put("getCheckedLine_12",null);
		values.put("getCheckedLine_20",null);
		values.put("getCheckedLine_31",null);
		values.put("getCheckedLine_21",null);
		values.put("getCheckedLine_32",null);
		values.put("getCheckedLine_14",null);
		values.put("getCheckedLine_16",null);
		values.put("getCheckedLine_17",null);
		values.put("getCheckedLine_27",null);
		values.put("getCheckedLine_28",null);
		values.put("getCheckedLine_15",null);
		values.put("getCheckedLine_0",null);
		values.put("getCheckedLine_4",null);
		values.put("getCheckedLine_9",null);
		values.put("getCheckedLine_25",null);
		values.put("getCheckedLine_6",null);
		values.put("getCheckedLine_10",null);
		values.put("getCheckedLine_29",null);
		values.put("getCheckedLine_7",null);
		values.put("getCheckedLine_22",null);
		values.put("getCheckedLine_8",null);
		values.put("getCheckedLine_1",null);
		values.put("getCheckedLine_26",null);
		values.put("getCheckedLine_18",null);
		values.put("getCheckedLine_13",null);
		values.put("getCheckedLine_19",null);
		values.put("getCheckedLine_33",null);
		values.put("getThreateningLines_0",null);
		values.put("isCheckmate_16",null);
		values.put("isCheckmate_3",null);
		values.put("isCheckmate_27",null);
		values.put("isCheckmate_28",null);
		values.put("isCheckmate_6",null);
		values.put("isCheckmate_14",null);
		values.put("isCheckmate_4",null);
		values.put("isCheckmate_35",null);
		values.put("isCheckmate_15",null);
		values.put("isCheckmate_36",null);
		values.put("isCheckmate_46",null);
		values.put("isCheckmate_7",null);
		values.put("isCheckmate_25",null);
		values.put("isCheckmate_37",null);
		values.put("isCheckmate_11",null);
		values.put("isCheckmate_38",null);
		values.put("isCheckmate_18",null);
		values.put("isCheckmate_21",null);
		values.put("isCheckmate_22",null);
		values.put("isCheckmate_32",null);
		values.put("isCheckmate_33",null);
		values.put("isCheckmate_20",null);
		values.put("isCheckmate_0",null);
		values.put("isCheckmate_44",null);
		values.put("isCheckmate_5",null);
		values.put("isCheckmate_12",null);
		values.put("isCheckmate_29",null);
		values.put("isCheckmate_45",null);
		values.put("isCheckmate_42",null);
		values.put("isCheckmate_8",null);
		values.put("isCheckmate_13",null);
		values.put("isCheckmate_34",null);
		values.put("isCheckmate_9",null);
		values.put("isCheckmate_26",null);
		values.put("isCheckmate_41",null);
		values.put("isCheckmate_40",null);
		values.put("isCheckmate_10",null);
		values.put("isCheckmate_1",null);
		values.put("isCheckmate_30",null);
		values.put("isCheckmate_23",null);
		values.put("isCheckmate_17",null);
		values.put("isCheckmate_31",null);
		values.put("isCheckmate_43",null);
		values.put("isCheckmate_24",null);
		values.put("isCheckmate_19",null);
		values.put("isCheckmate_2",null);
		values.put("isCheckmate_39",null);
		values.put("moveCurrentlyHeldPiece_0",null);
		values.put("moveCurrentlyHeldPiece_6",null);
		values.put("moveCurrentlyHeldPiece_7",null);
		values.put("moveCurrentlyHeldPiece_9",null);
		values.put("moveCurrentlyHeldPiece_10",null);
		values.put("moveCurrentlyHeldPiece_8",null);
		values.put("moveCurrentlyHeldPiece_1",null);
		values.put("moveCurrentlyHeldPiece_2",null);
		values.put("moveCurrentlyHeldPiece_4",null);
		values.put("moveCurrentlyHeldPiece_11",null);
		values.put("moveCurrentlyHeldPiece_3",null);
		values.put("moveCurrentlyHeldPiece_5",null);
		values.put("performCastling_6",null);
		values.put("performCastling_16",null);
		values.put("performCastling_8",null);
		values.put("performCastling_10",null);
		values.put("performCastling_9",null);
		values.put("performCastling_18",null);
		values.put("performCastling_11",null);
		values.put("performCastling_7",null);
		values.put("performCastling_15",null);
		values.put("performCastling_14",null);
		values.put("performCastling_13",null);
		values.put("performCastling_2",null);
		values.put("performCastling_12",null);
		values.put("performCastling_1",null);
		values.put("performCastling_5",null);
		values.put("performCastling_17",null);
		values.put("performCastling_3",null);
		values.put("performCastling_0",null);
		values.put("performCastling_4",null);
		values.put("redo_20",null);
		values.put("redo_38",null);
		values.put("redo_47",null);
		values.put("redo_27",null);
		values.put("redo_15",null);
		values.put("redo_51",null);
		values.put("redo_6",null);
		values.put("redo_9",null);
		values.put("redo_31",null);
		values.put("redo_24",null);
		values.put("redo_7",null);
		values.put("redo_30",null);
		values.put("redo_43",null);
		values.put("redo_18",null);
		values.put("redo_4",null);
		values.put("redo_11",null);
		values.put("redo_25",null);
		values.put("redo_26",null);
		values.put("redo_29",null);
		values.put("redo_48",null);
		values.put("redo_0",null);
		values.put("redo_49",null);
		values.put("redo_41",null);
		values.put("redo_23",null);
		values.put("redo_21",null);
		values.put("redo_16",null);
		values.put("redo_35",null);
		values.put("redo_42",null);
		values.put("redo_36",null);
		values.put("redo_17",null);
		values.put("redo_8",null);
		values.put("redo_22",null);
		values.put("redo_32",null);
		values.put("redo_46",null);
		values.put("redo_52",null);
		values.put("redo_3",null);
		values.put("redo_39",null);
		values.put("redo_1",null);
		values.put("redo_33",null);
		values.put("redo_13",null);
		values.put("redo_10",null);
		values.put("redo_2",null);
		values.put("redo_19",null);
		values.put("redo_14",null);
		values.put("redo_45",null);
		values.put("redo_5",null);
		values.put("redo_12",null);
		values.put("redo_44",null);
		values.put("redo_37",null);
		values.put("redo_28",null);
		values.put("redo_40",null);
		values.put("redo_34",null);
		values.put("redo_50",null);
		values.put("replacePiece_0",null);
		values.put("replacePiece_3",null);
		values.put("replacePiece_5",null);
		values.put("replacePiece_6",null);
		values.put("replacePiece_4",null);
		values.put("replacePiece_2",null);
		values.put("replacePiece_7",null);
		values.put("replacePiece_1",null);
		values.put("resetColoursAfterMove_0",null);
		values.put("resetColoursAfterMove_3",null);
		values.put("resetColoursAfterMove_5",null);
		values.put("resetColoursAfterMove_6",null);
		values.put("resetColoursAfterMove_4",null);
		values.put("resetColoursAfterMove_2",null);
		values.put("resetColoursAfterMove_7",null);
		values.put("resetColoursAfterMove_1",null);
		values.put("squareClicked_11",null);
		values.put("squareClicked_7",null);
		values.put("squareClicked_10",null);
		values.put("squareClicked_3",null);
		values.put("squareClicked_16",null);
		values.put("squareClicked_15",null);
		values.put("squareClicked_1",null);
		values.put("squareClicked_0",null);
		values.put("squareClicked_4",null);
		values.put("squareClicked_8",null);
		values.put("squareClicked_9",null);
		values.put("squareClicked_2",null);
		values.put("squareClicked_14",null);
		values.put("squareClicked_5",null);
		values.put("squareClicked_12",null);
		values.put("squareClicked_6",null);
		values.put("squareClicked_13",null);
		values.put("undo_20",null);
		values.put("undo_10",null);
		values.put("undo_52",null);
		values.put("undo_38",null);
		values.put("undo_27",null);
		values.put("undo_51",null);
		values.put("undo_15",null);
		values.put("undo_12",null);
		values.put("undo_49",null);
		values.put("undo_31",null);
		values.put("undo_24",null);
		values.put("undo_30",null);
		values.put("undo_43",null);
		values.put("undo_18",null);
		values.put("undo_50",null);
		values.put("undo_4",null);
		values.put("undo_25",null);
		values.put("undo_26",null);
		values.put("undo_29",null);
		values.put("undo_0",null);
		values.put("undo_8",null);
		values.put("undo_47",null);
		values.put("undo_41",null);
		values.put("undo_9",null);
		values.put("undo_23",null);
		values.put("undo_21",null);
		values.put("undo_16",null);
		values.put("undo_35",null);
		values.put("undo_42",null);
		values.put("undo_36",null);
		values.put("undo_17",null);
		values.put("undo_22",null);
		values.put("undo_48",null);
		values.put("undo_14",null);
		values.put("undo_7",null);
		values.put("undo_32",null);
		values.put("undo_46",null);
		values.put("undo_3",null);
		values.put("undo_39",null);
		values.put("undo_1",null);
		values.put("undo_33",null);
		values.put("undo_13",null);
		values.put("undo_2",null);
		values.put("undo_19",null);
		values.put("undo_45",null);
		values.put("undo_5",null);
		values.put("undo_6",null);
		values.put("undo_44",null);
		values.put("undo_11",null);
		values.put("undo_37",null);
		values.put("undo_28",null);
		values.put("undo_40",null);
		values.put("undo_34",null);
    }

	private void addQueuedObject(String clsName, WeakReference<Object> object) {
		Set<WeakReference<Object>> objectsSet = queuedObjects.get(clsName);
		if (objectsSet == null) {
			objectsSet = new HashSet<>();
			objectsSet.add(object);
			queuedObjects.put(clsName, objectsSet);
		} else if (!objectsSet.contains(object)) {
			objectsSet.add(object);
		}
	}

	@Override
	public void clearQueue() {
		queuedObjects.clear();
	}

	@Override
	public HashMap<String, Set<WeakReference<Object>>> getQueuedObjects() {
		return queuedObjects;
	}

	@Override
	public int sizeQueuedObjects() {
		return queuedObjects.size();
	}

	@Override
	public HashMap<String, Integer> monitorValues( ConcurrentHashMap<String,List<WeakReference<Object>>> map) {

		this.map = map;
		initValues();
		try { 
			initGameController();
			addPositionsOnCheckedLineGameController();
			addSpecialCasesGameController();
			attemptPiecePlacementGameController();
			attemptToCaptureSquareGameController();
			attemptToPickUpPieceGameController();
			canCastleBetweenPositionsGameController();
			captureCurrentMomentGameController();
			checkForStalemateGameController();
			cloneGameControllerStateInfo();
			constructCastlingOpportunitiesGameController();
			constructCastlingPiecesMovementTrackerGameController();
			cullIllegalMovesGameController();
			cullSpecialCasesGameController();
			determineIfCurrentPlayerIsInCheckGameController();
			duplicateArrayListGameController();
			getCheckedLineGameController();
			getThreateningLinesGameController();
			isCheckmateGameController();
			moveCurrentlyHeldPieceGameController();
			performCastlingGameController();
			redoGameController();
			replacePieceGameController();
			resetColoursAfterMoveGameController();
			squareClickedGameController();
			undoGameController();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		return values;
	}
	
	private void initGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
					Integer init_2 = 0;
					Integer init_1 = 0;
					Integer init_0 = 0;
					Integer init_3 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

					String sV2 = expression("[java.awt.GraphicsEnvironment.headless.value","boolean");
					Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
					String sV1 = expression("[sun.awt.AppContext.numAppContexts","int");
					Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;

					init_2(init_2, V1);
					init_1(init_1, V1, V2);
					init_0(init_0, V1, V2);
					init_3(init_3, V1);
				} 
			}
		currentObject = null;
	}

	private void init_2(Integer count, Integer V1) {

		String pathCondition = "init_2";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void init_1(Integer count, Integer V1, Integer V2) {

		String pathCondition = "init_1";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 1 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void init_0(Integer count, Integer V1, Integer V2) {

		String pathCondition = "init_0";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 1 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void init_3(Integer count, Integer V1) {

		String pathCondition = "init_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void addPositionsOnCheckedLineGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer addPositionsOnCheckedLine_2 = 0;
		Integer addPositionsOnCheckedLine_4 = 0;
		Integer addPositionsOnCheckedLine_3 = 0;
		Integer addPositionsOnCheckedLine_5 = 0;
		Integer addPositionsOnCheckedLine_1 = 0;
		Integer addPositionsOnCheckedLine_0 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV1 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV2 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV3 = expression("[java.lang.AbstractStringBuilder.sizeTable[1]","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;

		addPositionsOnCheckedLine_2(addPositionsOnCheckedLine_2, V1, V2);
//		addPositionsOnCheckedLine_4(addPositionsOnCheckedLine_4, );
		addPositionsOnCheckedLine_3(addPositionsOnCheckedLine_3, V1);
		addPositionsOnCheckedLine_5(addPositionsOnCheckedLine_5, V1, V2, V3);
		addPositionsOnCheckedLine_1(addPositionsOnCheckedLine_1, V1, V2, V3);
		addPositionsOnCheckedLine_0(addPositionsOnCheckedLine_0, V1, V2);
				} 
			}
		currentObject = null;
	}

	private void addPositionsOnCheckedLine_2(Integer count, Integer V1, Integer V2) {

		String pathCondition = "addPositionsOnCheckedLine_2";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 < 0 && 1 >= V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void addPositionsOnCheckedLine_4(Integer count ) {

//		String pathCondition = "addPositionsOnCheckedLine_4";
//
//		if(){
//			if (count == null)
//				values.put(pathCondition, 0);
//		} else if (true){
//			if (count == null)
//				values.put(pathCondition, 1);
//			else
//				values.put(pathCondition, count + 1);
//		} else {
//			if (count == null)
//				values.put(pathCondition, 0);
//		}
	}


	private void addPositionsOnCheckedLine_3(Integer count, Integer V1) {

		String pathCondition = "addPositionsOnCheckedLine_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void addPositionsOnCheckedLine_5(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "addPositionsOnCheckedLine_5";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 < 0 && 1 < V1 && V3 < 0 && 2 >= V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void addPositionsOnCheckedLine_1(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "addPositionsOnCheckedLine_1";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 < 0 && 1 < V1 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void addPositionsOnCheckedLine_0(Integer count, Integer V1, Integer V2) {

		String pathCondition = "addPositionsOnCheckedLine_0";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void addSpecialCasesGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer addSpecialCases_1 = 0;
		Integer addSpecialCases_0 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV1 = expression("gcState.currentPlayerIsInCheck","boolean");
		Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;

		addSpecialCases_1(addSpecialCases_1, V1);
		addSpecialCases_0(addSpecialCases_0, V1);
				} 
			}
		currentObject = null;
	}

	private void addSpecialCases_1(Integer count, Integer V1) {

		String pathCondition = "addSpecialCases_1";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void addSpecialCases_0(Integer count, Integer V1) {

		String pathCondition = "addSpecialCases_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void attemptPiecePlacementGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer attemptPiecePlacement_2 = 0;
		Integer attemptPiecePlacement_71 = 0;
		Integer attemptPiecePlacement_9 = 0;
		Integer attemptPiecePlacement_3 = 0;
		Integer attemptPiecePlacement_47 = 0;
		Integer attemptPiecePlacement_31 = 0;
		Integer attemptPiecePlacement_43 = 0;
		Integer attemptPiecePlacement_13 = 0;
		Integer attemptPiecePlacement_6 = 0;
		Integer attemptPiecePlacement_37 = 0;
		Integer attemptPiecePlacement_12 = 0;
		Integer attemptPiecePlacement_86 = 0;
		Integer attemptPiecePlacement_55 = 0;
		Integer attemptPiecePlacement_45 = 0;
		Integer attemptPiecePlacement_62 = 0;
		Integer attemptPiecePlacement_66 = 0;
		Integer attemptPiecePlacement_34 = 0;
		Integer attemptPiecePlacement_17 = 0;
		Integer attemptPiecePlacement_23 = 0;
		Integer attemptPiecePlacement_5 = 0;
		Integer attemptPiecePlacement_7 = 0;
		Integer attemptPiecePlacement_44 = 0;
		Integer attemptPiecePlacement_14 = 0;
		Integer attemptPiecePlacement_64 = 0;
		Integer attemptPiecePlacement_19 = 0;
		Integer attemptPiecePlacement_21 = 0;
		Integer attemptPiecePlacement_69 = 0;
		Integer attemptPiecePlacement_59 = 0;
		Integer attemptPiecePlacement_78 = 0;
		Integer attemptPiecePlacement_35 = 0;
		Integer attemptPiecePlacement_22 = 0;
		Integer attemptPiecePlacement_10 = 0;
		Integer attemptPiecePlacement_70 = 0;
		Integer attemptPiecePlacement_30 = 0;
		Integer attemptPiecePlacement_74 = 0;
		Integer attemptPiecePlacement_1 = 0;
		Integer attemptPiecePlacement_28 = 0;
		Integer attemptPiecePlacement_79 = 0;
		Integer attemptPiecePlacement_26 = 0;
		Integer attemptPiecePlacement_4 = 0;
		Integer attemptPiecePlacement_36 = 0;
		Integer attemptPiecePlacement_75 = 0;
		Integer attemptPiecePlacement_46 = 0;
		Integer attemptPiecePlacement_65 = 0;
		Integer attemptPiecePlacement_24 = 0;
		Integer attemptPiecePlacement_39 = 0;
		Integer attemptPiecePlacement_41 = 0;
		Integer attemptPiecePlacement_42 = 0;
		Integer attemptPiecePlacement_63 = 0;
		Integer attemptPiecePlacement_67 = 0;
		Integer attemptPiecePlacement_8 = 0;
		Integer attemptPiecePlacement_33 = 0;
		Integer attemptPiecePlacement_73 = 0;
		Integer attemptPiecePlacement_80 = 0;
		Integer attemptPiecePlacement_49 = 0;
		Integer attemptPiecePlacement_60 = 0;
		Integer attemptPiecePlacement_84 = 0;
		Integer attemptPiecePlacement_53 = 0;
		Integer attemptPiecePlacement_51 = 0;
		Integer attemptPiecePlacement_57 = 0;
		Integer attemptPiecePlacement_68 = 0;
		Integer attemptPiecePlacement_20 = 0;
		Integer attemptPiecePlacement_11 = 0;
		Integer attemptPiecePlacement_58 = 0;
		Integer attemptPiecePlacement_29 = 0;
		Integer attemptPiecePlacement_50 = 0;
		Integer attemptPiecePlacement_77 = 0;
		Integer attemptPiecePlacement_82 = 0;
		Integer attemptPiecePlacement_54 = 0;
		Integer attemptPiecePlacement_76 = 0;
		Integer attemptPiecePlacement_16 = 0;
		Integer attemptPiecePlacement_27 = 0;
		Integer attemptPiecePlacement_48 = 0;
		Integer attemptPiecePlacement_61 = 0;
		Integer attemptPiecePlacement_81 = 0;
		Integer attemptPiecePlacement_38 = 0;
		Integer attemptPiecePlacement_0 = 0;
		Integer attemptPiecePlacement_25 = 0;
		Integer attemptPiecePlacement_52 = 0;
		Integer attemptPiecePlacement_72 = 0;
		Integer attemptPiecePlacement_83 = 0;
		Integer attemptPiecePlacement_32 = 0;
		Integer attemptPiecePlacement_40 = 0;
		Integer attemptPiecePlacement_85 = 0;
		Integer attemptPiecePlacement_15 = 0;
		Integer attemptPiecePlacement_18 = 0;
		Integer attemptPiecePlacement_56 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV11 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV12 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V12 = !sV12.isEmpty() ? Integer.parseInt(sV12) : null;
		String sV1 = expression("[control.GameController.$assertionsDisabled","boolean");
		Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;
		String sV3 = expression("possibleMoves.elementData.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV14 = expression("possibleMoves.l.expectedModCount","int");
		Integer V14 = !sV14.isEmpty() ? Integer.parseInt(sV14) : null;
		String sV5 = expression("possibleMoves.expectedModCount","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV16 = expression("possibleMoves.l.elementCount","int");
		Integer V16 = !sV16.isEmpty() ? Integer.parseInt(sV16) : null;
		String sV8 = expression("possibleMoves.elementCount","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV13 = expression("possibleMoves.l.l.modCount","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV4 = expression("possibleMoves.l.modCount","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV7 = expression("possibleMoves.a.length","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV6 = expression("possibleMoves.modCount","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV15 = expression("possibleMoves.l.size","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV10 = expression("possibleMoves.offset","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV9 = expression("gcState.moveNumber","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV2 = expression("possibleMoves.size","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;

		attemptPiecePlacement_2(attemptPiecePlacement_2, V1, V2, V3);
		attemptPiecePlacement_71(attemptPiecePlacement_71, V1, V2, V4, V5);
		attemptPiecePlacement_9(attemptPiecePlacement_9, V1, V2, V3);
		attemptPiecePlacement_3(attemptPiecePlacement_3, V1, V2, V3);
		attemptPiecePlacement_47(attemptPiecePlacement_47, V1, V2, V3);
		attemptPiecePlacement_31(attemptPiecePlacement_31, V6, V1, V2, V5);
		attemptPiecePlacement_43(attemptPiecePlacement_43, V1, V2, V3);
		attemptPiecePlacement_13(attemptPiecePlacement_13, V7, V1);
		attemptPiecePlacement_6(attemptPiecePlacement_6, V1, V2, V3);
		attemptPiecePlacement_37(attemptPiecePlacement_37, V8, V1, V3);
		attemptPiecePlacement_12(attemptPiecePlacement_12, V7, V1);
		attemptPiecePlacement_86(attemptPiecePlacement_86, V8, V9, V1, V3);
		attemptPiecePlacement_55(attemptPiecePlacement_55, V7, V1);
		attemptPiecePlacement_45(attemptPiecePlacement_45, V1, V2, V3);
		attemptPiecePlacement_62(attemptPiecePlacement_62, V1, V4, V5);
		attemptPiecePlacement_66(attemptPiecePlacement_66, V10, V1, V2, V4, V5);
		attemptPiecePlacement_34(attemptPiecePlacement_34, V8, V1, V3);
		attemptPiecePlacement_17(attemptPiecePlacement_17, V12, V11, V1, V2, V4, V5);
		attemptPiecePlacement_23(attemptPiecePlacement_23, V14, V13, V1, V2, V4, V5);
		attemptPiecePlacement_5(attemptPiecePlacement_5, V1, V2, V3);
		attemptPiecePlacement_7(attemptPiecePlacement_7, V1, V2);
		attemptPiecePlacement_44(attemptPiecePlacement_44, V1, V2, V3);
		attemptPiecePlacement_14(attemptPiecePlacement_14, V7, V1);
		attemptPiecePlacement_64(attemptPiecePlacement_64, V11, V1, V2, V4, V5);
		attemptPiecePlacement_19(attemptPiecePlacement_19, V1, V2, V4, V5);
		attemptPiecePlacement_21(attemptPiecePlacement_21, V10, V1, V2, V4, V5);
		attemptPiecePlacement_69(attemptPiecePlacement_69, V6, V14, V1, V2, V4, V5);
		attemptPiecePlacement_59(attemptPiecePlacement_59, V7, V9, V1);
		attemptPiecePlacement_78(attemptPiecePlacement_78, V8, V1, V3);
		attemptPiecePlacement_35(attemptPiecePlacement_35, V8, V1, V3);
		attemptPiecePlacement_22(attemptPiecePlacement_22, V10, V1, V15, V2, V4, V5);
		attemptPiecePlacement_10(attemptPiecePlacement_10, V1, V2);
		attemptPiecePlacement_70(attemptPiecePlacement_70, V14, V1, V2, V4, V5);
		attemptPiecePlacement_30(attemptPiecePlacement_30, V6, V11, V1, V2, V5);
		attemptPiecePlacement_74(attemptPiecePlacement_74, V6, V12, V11, V1, V2, V5);
		attemptPiecePlacement_1(attemptPiecePlacement_1, V1, V2, V3);
		attemptPiecePlacement_28(attemptPiecePlacement_28, V6, V12, V11, V1, V2, V5);
		attemptPiecePlacement_79(attemptPiecePlacement_79, V8, V1, V3);
		attemptPiecePlacement_26(attemptPiecePlacement_26, V1, V2, V4, V5);
		attemptPiecePlacement_4(attemptPiecePlacement_4, V1, V2, V3);
		attemptPiecePlacement_36(attemptPiecePlacement_36, V8, V1, V3);
		attemptPiecePlacement_75(attemptPiecePlacement_75, V6, V11, V1, V2, V5);
		attemptPiecePlacement_46(attemptPiecePlacement_46, V1, V2, V3);
		attemptPiecePlacement_65(attemptPiecePlacement_65, V1, V2, V4, V5);
		attemptPiecePlacement_24(attemptPiecePlacement_24, V6, V14, V1, V2, V4, V5);
		attemptPiecePlacement_39(attemptPiecePlacement_39, V8, V1, V3);
		attemptPiecePlacement_41(attemptPiecePlacement_41, V8, V1);
		attemptPiecePlacement_42(attemptPiecePlacement_42, V1);
		attemptPiecePlacement_63(attemptPiecePlacement_63, V12, V11, V1, V2, V4, V5);
		attemptPiecePlacement_67(attemptPiecePlacement_67, V10, V1, V15, V2, V4, V5);
		attemptPiecePlacement_8(attemptPiecePlacement_8, V1, V2, V3);
		attemptPiecePlacement_33(attemptPiecePlacement_33, V8, V1, V3);
		attemptPiecePlacement_73(attemptPiecePlacement_73, V6, V1, V5);
		attemptPiecePlacement_80(attemptPiecePlacement_80, V8, V1, V3);
		attemptPiecePlacement_49(attemptPiecePlacement_49, V1, V2);
		attemptPiecePlacement_60(attemptPiecePlacement_60, V9, V1);
		attemptPiecePlacement_84(attemptPiecePlacement_84, V8, V1, V3);
		attemptPiecePlacement_53(attemptPiecePlacement_53, V7, V1);
		attemptPiecePlacement_51(attemptPiecePlacement_51, V9, V1, V2, V3);
		attemptPiecePlacement_57(attemptPiecePlacement_57, V7, V1);
		attemptPiecePlacement_68(attemptPiecePlacement_68, V14, V13, V1, V2, V4, V5);
		attemptPiecePlacement_20(attemptPiecePlacement_20, V10, V1, V2, V4, V5);
		attemptPiecePlacement_11(attemptPiecePlacement_11, V7, V1);
		attemptPiecePlacement_58(attemptPiecePlacement_58, V7, V9, V1);
		attemptPiecePlacement_29(attemptPiecePlacement_29, V6, V12, V11, V1, V2, V5);
		attemptPiecePlacement_50(attemptPiecePlacement_50, V1, V2, V3);
		attemptPiecePlacement_77(attemptPiecePlacement_77, V8, V1, V3);
		attemptPiecePlacement_82(attemptPiecePlacement_82, V8, V1);
		attemptPiecePlacement_54(attemptPiecePlacement_54, V7, V1);
		attemptPiecePlacement_76(attemptPiecePlacement_76, V6, V1, V2, V5);
		attemptPiecePlacement_16(attemptPiecePlacement_16, V12, V11, V1, V2, V4, V5);
		attemptPiecePlacement_27(attemptPiecePlacement_27, V6, V1, V5);
		attemptPiecePlacement_48(attemptPiecePlacement_48, V1, V2);
		attemptPiecePlacement_61(attemptPiecePlacement_61, V9, V1);
		attemptPiecePlacement_81(attemptPiecePlacement_81, V8, V1, V3);
		attemptPiecePlacement_38(attemptPiecePlacement_38, V8, V1);
		attemptPiecePlacement_0(attemptPiecePlacement_0, V1);
		attemptPiecePlacement_25(attemptPiecePlacement_25, V14, V1, V2, V4, V5);
		attemptPiecePlacement_52(attemptPiecePlacement_52, V9, V1, V2, V3);
		attemptPiecePlacement_72(attemptPiecePlacement_72, V10, V16, V1, V2, V4, V5);
		attemptPiecePlacement_83(attemptPiecePlacement_83, V8, V1);
		attemptPiecePlacement_32(attemptPiecePlacement_32, V8, V1, V3);
		attemptPiecePlacement_40(attemptPiecePlacement_40, V8, V1, V3);
		attemptPiecePlacement_85(attemptPiecePlacement_85, V8, V9, V1, V3);
		attemptPiecePlacement_15(attemptPiecePlacement_15, V1, V4, V5);
		attemptPiecePlacement_18(attemptPiecePlacement_18, V11, V1, V2, V4, V5);
		attemptPiecePlacement_56(attemptPiecePlacement_56, V7, V1);
				} 
			}
		currentObject = null;
	}

	private void attemptPiecePlacement_2(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_2";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 < V3 && 2 < V2 && 2 >= V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_71(Integer count, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_71";

		if(V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_9(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_9";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 <= 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_3(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_3";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_47(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_47";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_31(Integer count, Integer V6, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_31";

		if(V6 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 == V5 && V2 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_43(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_43";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 < V3 && 2 >= V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_13(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_13";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 >= 0 && V7 > 0 && true){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_6(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_6";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_37(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_37";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_12(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_12";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 >= 0 && V7 > 0 && true && 1 < V7 && 1 < V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_86(Integer count, Integer V8, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_86";

		if(V8 == null || V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0 && V9 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_55(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_55";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 > 0 && true){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_45(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_45";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 >= V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_62(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_62";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_66(Integer count, Integer V10, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_66";

		if(V10 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0 && V10 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_34(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_34";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_17(Integer count, Integer V12, Integer V11, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_17";

		if(V12 == null || V11 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_23(Integer count, Integer V14, Integer V13, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_23";

		if(V14 == null || V13 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0 && V13 != V14){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_5(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_5";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_7(Integer count, Integer V1, Integer V2) {

		String pathCondition = "attemptPiecePlacement_7";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_44(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_44";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 >= V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_14(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_14";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 >= 0 && V7 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_64(Integer count, Integer V11, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_64";

		if(V11 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_19(Integer count, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_19";

		if(V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_21(Integer count, Integer V10, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_21";

		if(V10 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0 && V10 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_69(Integer count, Integer V6, Integer V14, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_69";

		if(V6 == null || V14 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0 && V6 != V14){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_59(Integer count, Integer V7, Integer V9, Integer V1) {

		String pathCondition = "attemptPiecePlacement_59";

		if(V7 == null || V9 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 > 0 && true && V9 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_78(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_78";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 >= V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_35(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_35";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 >= V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_22(Integer count, Integer V10, Integer V1, Integer V15, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_22";

		if(V10 == null || V1 == null || V15 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0 && V10 >= 0 && V10 <= V15 && V10 < V15 >> 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_10(Integer count, Integer V1, Integer V2) {

		String pathCondition = "attemptPiecePlacement_10";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_70(Integer count, Integer V14, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_70";

		if(V14 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0 && V4 != V14){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_30(Integer count, Integer V6, Integer V11, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_30";

		if(V6 == null || V11 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 == V5 && V2 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_74(Integer count, Integer V6, Integer V12, Integer V11, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_74";

		if(V6 == null || V12 == null || V11 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V6 == V5 && V2 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_1(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_1";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 < V3 && 2 < V2 && 2 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_28(Integer count, Integer V6, Integer V12, Integer V11, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_28";

		if(V6 == null || V12 == null || V11 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 == V5 && V2 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_79(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_79";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 >= V8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_26(Integer count, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_26";

		if(V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_4(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_4";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 >= V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_36(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_36";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_75(Integer count, Integer V6, Integer V11, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_75";

		if(V6 == null || V11 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V6 == V5 && V2 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_46(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_46";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_65(Integer count, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_65";

		if(V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_24(Integer count, Integer V6, Integer V14, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_24";

		if(V6 == null || V14 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0 && V6 != V14){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_39(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_39";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 <= 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_41(Integer count, Integer V8, Integer V1) {

		String pathCondition = "attemptPiecePlacement_41";

		if(V8 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_42(Integer count, Integer V1) {

		String pathCondition = "attemptPiecePlacement_42";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_63(Integer count, Integer V12, Integer V11, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_63";

		if(V12 == null || V11 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_67(Integer count, Integer V10, Integer V1, Integer V15, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_67";

		if(V10 == null || V1 == null || V15 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0 && V10 >= 0 && V10 <= V15 && V10 - V10 >= V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_8(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_8";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 <= 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_33(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_33";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 < V3 && 2 < V8 && 2 >= V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_73(Integer count, Integer V6, Integer V1, Integer V5) {

		String pathCondition = "attemptPiecePlacement_73";

		if(V6 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V6 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_80(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_80";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_49(Integer count, Integer V1, Integer V2) {

		String pathCondition = "attemptPiecePlacement_49";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_60(Integer count, Integer V9, Integer V1) {

		String pathCondition = "attemptPiecePlacement_60";

		if(V9 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V9 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_84(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_84";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_53(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_53";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 > 0 && true && 1 < V7 && 1 < V7 && 2 >= V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_51(Integer count, Integer V9, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_51";

		if(V9 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0 && V9 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_57(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_57";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 > 0 && true && 1 < V7 && 1 < V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_68(Integer count, Integer V14, Integer V13, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_68";

		if(V14 == null || V13 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0 && V13 != V14){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_20(Integer count, Integer V10, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_20";

		if(V10 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0 && V10 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_11(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_11";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 >= 0 && V7 > 0 && true && 1 < V7 && 1 < V7 && 2 < V7 && 2 < V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_58(Integer count, Integer V7, Integer V9, Integer V1) {

		String pathCondition = "attemptPiecePlacement_58";

		if(V7 == null || V9 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 > 0 && true && V9 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_29(Integer count, Integer V6, Integer V12, Integer V11, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_29";

		if(V6 == null || V12 == null || V11 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 == V5 && V2 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_50(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_50";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0 && 1 < V2 && 1 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_77(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_77";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 < V3 && 2 >= V8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_82(Integer count, Integer V8, Integer V1) {

		String pathCondition = "attemptPiecePlacement_82";

		if(V8 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_54(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_54";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 > 0 && true && 1 >= V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_76(Integer count, Integer V6, Integer V1, Integer V2, Integer V5) {

		String pathCondition = "attemptPiecePlacement_76";

		if(V6 == null || V1 == null || V2 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V6 == V5 && V2 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_16(Integer count, Integer V12, Integer V11, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_16";

		if(V12 == null || V11 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_27(Integer count, Integer V6, Integer V1, Integer V5) {

		String pathCondition = "attemptPiecePlacement_27";

		if(V6 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_48(Integer count, Integer V1, Integer V2) {

		String pathCondition = "attemptPiecePlacement_48";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_61(Integer count, Integer V9, Integer V1) {

		String pathCondition = "attemptPiecePlacement_61";

		if(V9 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V9 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_81(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_81";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_38(Integer count, Integer V8, Integer V1) {

		String pathCondition = "attemptPiecePlacement_38";

		if(V8 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_0(Integer count, Integer V1) {

		String pathCondition = "attemptPiecePlacement_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_25(Integer count, Integer V14, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_25";

		if(V14 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 >= 0 && V4 != V14){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_52(Integer count, Integer V9, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "attemptPiecePlacement_52";

		if(V9 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 > 0 && V3 >= 0 && V3 > 0 && V9 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_72(Integer count, Integer V10, Integer V16, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_72";

		if(V10 == null || V16 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V4 == V5 && V2 >= 0 && V10 >= 0 && V10 <= V16 && V10 - V10 >= V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_83(Integer count, Integer V8, Integer V1) {

		String pathCondition = "attemptPiecePlacement_83";

		if(V8 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_32(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_32";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 > 0 && V3 >= 0 && V3 > 0 && 1 < V8 && 1 < V3 && 2 < V8 && 2 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_40(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_40";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V8 <= 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_85(Integer count, Integer V8, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "attemptPiecePlacement_85";

		if(V8 == null || V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V8 > 0 && V3 >= 0 && V3 > 0 && V9 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_15(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_15";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_18(Integer count, Integer V11, Integer V1, Integer V2, Integer V4, Integer V5) {

		String pathCondition = "attemptPiecePlacement_18";

		if(V11 == null || V1 == null || V2 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == V5 && V2 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptPiecePlacement_56(Integer count, Integer V7, Integer V1) {

		String pathCondition = "attemptPiecePlacement_56";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V7 >= 0 && V7 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void attemptToCaptureSquareGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer attemptToCaptureSquare_6 = 0;
		Integer attemptToCaptureSquare_5 = 0;
		Integer attemptToCaptureSquare_1 = 0;
		Integer attemptToCaptureSquare_2 = 0;
		Integer attemptToCaptureSquare_0 = 0;
		Integer attemptToCaptureSquare_3 = 0;
		Integer attemptToCaptureSquare_4 = 0;
		Integer attemptToCaptureSquare_7 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV4 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))].length","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV7 = expression("chessBoard.chessPieces.table.length","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV3 = expression("chessBoard.chessSquareArray.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV6 = expression("pieceCurrentlyHeld.position.xCoord","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV5 = expression("pieceCurrentlyHeld.position.yCoord","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV1 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;
		String sV2 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;

		attemptToCaptureSquare_6(attemptToCaptureSquare_6, V1, V2);
		attemptToCaptureSquare_5(attemptToCaptureSquare_5, V1);
		attemptToCaptureSquare_1(attemptToCaptureSquare_1, V3, V4, V5);
		attemptToCaptureSquare_2(attemptToCaptureSquare_2, V3, V5);
		attemptToCaptureSquare_0(attemptToCaptureSquare_0, V6, V3, V4, V5);
		attemptToCaptureSquare_3(attemptToCaptureSquare_3, V3);
		attemptToCaptureSquare_4(attemptToCaptureSquare_4, V7);
		attemptToCaptureSquare_7(attemptToCaptureSquare_7, V1, V2);
				} 
			}
		currentObject = null;
	}

	private void attemptToCaptureSquare_6(Integer count, Integer V1, Integer V2) {

		String pathCondition = "attemptToCaptureSquare_6";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_5(Integer count, Integer V1) {

		String pathCondition = "attemptToCaptureSquare_5";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_1(Integer count, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "attemptToCaptureSquare_1";

		if(V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_2(Integer count, Integer V3, Integer V5) {

		String pathCondition = "attemptToCaptureSquare_2";

		if(V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_0(Integer count, Integer V6, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "attemptToCaptureSquare_0";

		if(V6 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3 && V6 + -1 >= 0 && V6 + -1 < V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_3(Integer count, Integer V3) {

		String pathCondition = "attemptToCaptureSquare_3";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_4(Integer count, Integer V7) {

		String pathCondition = "attemptToCaptureSquare_4";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void attemptToCaptureSquare_7(Integer count, Integer V1, Integer V2) {

		String pathCondition = "attemptToCaptureSquare_7";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void attemptToPickUpPieceGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer attemptToPickUpPiece_0 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV1 = expression("chessBoard.chessSquareArray.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;

		attemptToPickUpPiece_0(attemptToPickUpPiece_0, V1);
				} 
			}
		currentObject = null;
	}

	private void attemptToPickUpPiece_0(Integer count, Integer V1) {

		String pathCondition = "attemptToPickUpPiece_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void canCastleBetweenPositionsGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer canCastleBetweenPositions_16 = 0;
		Integer canCastleBetweenPositions_4 = 0;
		Integer canCastleBetweenPositions_11 = 0;
		Integer canCastleBetweenPositions_12 = 0;
		Integer canCastleBetweenPositions_7 = 0;
		Integer canCastleBetweenPositions_10 = 0;
		Integer canCastleBetweenPositions_19 = 0;
		Integer canCastleBetweenPositions_13 = 0;
		Integer canCastleBetweenPositions_2 = 0;
		Integer canCastleBetweenPositions_3 = 0;
		Integer canCastleBetweenPositions_21 = 0;
		Integer canCastleBetweenPositions_1 = 0;
		Integer canCastleBetweenPositions_5 = 0;
		Integer canCastleBetweenPositions_23 = 0;
		Integer canCastleBetweenPositions_15 = 0;
		Integer canCastleBetweenPositions_20 = 0;
		Integer canCastleBetweenPositions_6 = 0;
		Integer canCastleBetweenPositions_8 = 0;
		Integer canCastleBetweenPositions_17 = 0;
		Integer canCastleBetweenPositions_0 = 0;
		Integer canCastleBetweenPositions_14 = 0;
		Integer canCastleBetweenPositions_18 = 0;
		Integer canCastleBetweenPositions_9 = 0;
		Integer canCastleBetweenPositions_22 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV9 = expression("chessBoard.chessPieces.table[(0) & ((chessBoard.chessPieces.table.length) - (1))].next.hash","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV5 = expression("chessBoard.chessPieces.this$0.runAttributes[chessBoard.chessPieces.runIndex].elementCount","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV2 = expression("chessBoard.chessPieces.table[(0) & ((chessBoard.chessPieces.table.length) - (1))].hash","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV6 = expression("chessBoard.chessPieces.this$0.runAttributeValues.length","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV3 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV1 = expression("chessBoard.chessPieces.table.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV7 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V7 = !sV7.isEmpty() ? parseBoolean(sV7) : null;
		String sV4 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV8 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V8 = !sV8.isEmpty() ? parseBoolean(sV8) : null;

		canCastleBetweenPositions_16(canCastleBetweenPositions_16, V1);
		canCastleBetweenPositions_4(canCastleBetweenPositions_4, V1, V2);
		canCastleBetweenPositions_11(canCastleBetweenPositions_11, V3, V4, V5);
		canCastleBetweenPositions_12(canCastleBetweenPositions_12, V3, V4);
		canCastleBetweenPositions_7(canCastleBetweenPositions_7, V1, V2);
		canCastleBetweenPositions_10(canCastleBetweenPositions_10, V6, V3, V4);
		canCastleBetweenPositions_19(canCastleBetweenPositions_19, V1);
		canCastleBetweenPositions_13(canCastleBetweenPositions_13, V6, V3, V4);
		canCastleBetweenPositions_2(canCastleBetweenPositions_2, V7, V8);
		canCastleBetweenPositions_3(canCastleBetweenPositions_3, V7, V8);
		canCastleBetweenPositions_21(canCastleBetweenPositions_21, V1);
		canCastleBetweenPositions_1(canCastleBetweenPositions_1, V7);
		canCastleBetweenPositions_5(canCastleBetweenPositions_5, V9, V1, V2);
		canCastleBetweenPositions_23(canCastleBetweenPositions_23, V1);
		canCastleBetweenPositions_15(canCastleBetweenPositions_15, V1);
		canCastleBetweenPositions_20(canCastleBetweenPositions_20, V1);
		canCastleBetweenPositions_6(canCastleBetweenPositions_6, V9, V1, V2);
		canCastleBetweenPositions_8(canCastleBetweenPositions_8, V1);
		canCastleBetweenPositions_17(canCastleBetweenPositions_17, V1);
		canCastleBetweenPositions_0(canCastleBetweenPositions_0, V1);
		canCastleBetweenPositions_14(canCastleBetweenPositions_14, V3);
		canCastleBetweenPositions_18(canCastleBetweenPositions_18, V1);
		canCastleBetweenPositions_9(canCastleBetweenPositions_9, V6, V3, V4, V5);
		canCastleBetweenPositions_22(canCastleBetweenPositions_22, V1);
				} 
			}
		currentObject = null;
	}

	private void canCastleBetweenPositions_16(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_16";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_4(Integer count, Integer V1, Integer V2) {

		String pathCondition = "canCastleBetweenPositions_4";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_11(Integer count, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "canCastleBetweenPositions_11";

		if(V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3 && V5 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_12(Integer count, Integer V3, Integer V4) {

		String pathCondition = "canCastleBetweenPositions_12";

		if(V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_7(Integer count, Integer V1, Integer V2) {

		String pathCondition = "canCastleBetweenPositions_7";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_10(Integer count, Integer V6, Integer V3, Integer V4) {

		String pathCondition = "canCastleBetweenPositions_10";

		if(V6 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3 && V6 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_19(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_19";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1 && (-510138852 & V1 - 1) + 2 < V1 && (-510138852 & V1 - 1) + 2 >= 0 && (-510138852 & V1 - 1) + 2 < V1 && (-510138852 & V1 - 1) + 2 != (-510138852 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_13(Integer count, Integer V6, Integer V3, Integer V4) {

		String pathCondition = "canCastleBetweenPositions_13";

		if(V6 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3 && V6 >= 0 && V4 >= 0 && V4 < V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_2(Integer count, Integer V7, Integer V8) {

		String pathCondition = "canCastleBetweenPositions_2";

		if(V7 == null || V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 != 0 && V8 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_3(Integer count, Integer V7, Integer V8) {

		String pathCondition = "canCastleBetweenPositions_3";

		if(V7 == null || V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 != 0 && V8 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_21(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_21";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1 && (-510138852 & V1 - 1) + 2 >= V1 && V1 > 0 && (-510138852 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_1(Integer count, Integer V7) {

		String pathCondition = "canCastleBetweenPositions_1";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_5(Integer count, Integer V9, Integer V1, Integer V2) {

		String pathCondition = "canCastleBetweenPositions_5";

		if(V9 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1 && V2 != 0 && V9 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_23(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_23";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_15(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_15";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_20(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_20";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1 && (-510138852 & V1 - 1) + 2 >= V1 && V1 > 0 && (-510138852 & V1 - 1) != 0 && 2 < V1 && 2 != (-510138852 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_6(Integer count, Integer V9, Integer V1, Integer V2) {

		String pathCondition = "canCastleBetweenPositions_6";

		if(V9 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1 && V2 != 0 && V9 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_8(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_8";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_17(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_17";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1 && (-510138852 & V1 - 1) + 2 < V1 && (-510138852 & V1 - 1) + 2 >= 0 && (-510138852 & V1 - 1) + 2 < V1 && (-510138852 & V1 - 1) + 2 != (-510138852 & V1 - 1) && (-510138852 & V1 - 1) + 2 + 2 < V1 && (-510138852 & V1 - 1) + 2 + 2 >= 0 && (-510138852 & V1 - 1) + 2 + 2 < V1 && (-510138852 & V1 - 1) + 2 + 2 != (-510138852 & V1 - 1) && (-510138852 & V1 - 1) + 2 + 2 != (-510138852 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_0(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_14(Integer count, Integer V3) {

		String pathCondition = "canCastleBetweenPositions_14";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_18(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_18";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1 && (-510138852 & V1 - 1) + 2 < V1 && (-510138852 & V1 - 1) + 2 >= 0 && (-510138852 & V1 - 1) + 2 < V1 && (-510138852 & V1 - 1) + 2 != (-510138852 & V1 - 1) && (-510138852 & V1 - 1) + 2 + 2 >= V1 && V1 > 0 && (-510138852 & V1 - 1) != 0 && (-510138852 & V1 - 1) + 2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_9(Integer count, Integer V6, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "canCastleBetweenPositions_9";

		if(V6 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3 && V6 >= 0 && V4 >= 0 && V4 < V6 && V5 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void canCastleBetweenPositions_22(Integer count, Integer V1) {

		String pathCondition = "canCastleBetweenPositions_22";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-510138852 & V1 - 1) >= 0 && (-510138852 & V1 - 1) < V1 && (-510138852 & V1 - 1) + 2 >= V1 && V1 > 0 && (-510138852 & V1 - 1) == 0 && 2 < V1 && 2 != (-510138852 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void captureCurrentMomentGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer captureCurrentMoment_41 = 0;
		Integer captureCurrentMoment_12 = 0;
		Integer captureCurrentMoment_23 = 0;
		Integer captureCurrentMoment_42 = 0;
		Integer captureCurrentMoment_9 = 0;
		Integer captureCurrentMoment_3 = 0;
		Integer captureCurrentMoment_48 = 0;
		Integer captureCurrentMoment_28 = 0;
		Integer captureCurrentMoment_18 = 0;
		Integer captureCurrentMoment_32 = 0;
		Integer captureCurrentMoment_37 = 0;
		Integer captureCurrentMoment_34 = 0;
		Integer captureCurrentMoment_17 = 0;
		Integer captureCurrentMoment_35 = 0;
		Integer captureCurrentMoment_26 = 0;
		Integer captureCurrentMoment_13 = 0;
		Integer captureCurrentMoment_30 = 0;
		Integer captureCurrentMoment_22 = 0;
		Integer captureCurrentMoment_47 = 0;
		Integer captureCurrentMoment_14 = 0;
		Integer captureCurrentMoment_15 = 0;
		Integer captureCurrentMoment_19 = 0;
		Integer captureCurrentMoment_0 = 0;
		Integer captureCurrentMoment_16 = 0;
		Integer captureCurrentMoment_46 = 0;
		Integer captureCurrentMoment_49 = 0;
		Integer captureCurrentMoment_55 = 0;
		Integer captureCurrentMoment_33 = 0;
		Integer captureCurrentMoment_24 = 0;
		Integer captureCurrentMoment_10 = 0;
		Integer captureCurrentMoment_2 = 0;
		Integer captureCurrentMoment_25 = 0;
		Integer captureCurrentMoment_43 = 0;
		Integer captureCurrentMoment_40 = 0;
		Integer captureCurrentMoment_21 = 0;
		Integer captureCurrentMoment_50 = 0;
		Integer captureCurrentMoment_36 = 0;
		Integer captureCurrentMoment_45 = 0;
		Integer captureCurrentMoment_27 = 0;
		Integer captureCurrentMoment_38 = 0;
		Integer captureCurrentMoment_39 = 0;
		Integer captureCurrentMoment_6 = 0;
		Integer captureCurrentMoment_8 = 0;
		Integer captureCurrentMoment_29 = 0;
		Integer captureCurrentMoment_4 = 0;
		Integer captureCurrentMoment_7 = 0;
		Integer captureCurrentMoment_1 = 0;
		Integer captureCurrentMoment_51 = 0;
		Integer captureCurrentMoment_31 = 0;
		Integer captureCurrentMoment_52 = 0;
		Integer captureCurrentMoment_54 = 0;
		Integer captureCurrentMoment_5 = 0;
		Integer captureCurrentMoment_53 = 0;
		Integer captureCurrentMoment_44 = 0;
		Integer captureCurrentMoment_11 = 0;
		Integer captureCurrentMoment_20 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV6 = expression("chessBoard.chessPieces.keySet.this$0.this$0.runAttributes[chessBoard.chessPieces.keySet.this$0.runIndex].elementCount","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV9 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.this$0.runAttributes.length","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV24 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.entrySet.elements.length","int");
		Integer V24 = !sV24.isEmpty() ? Integer.parseInt(sV24) : null;
		String sV3 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.map.keySet.elements.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV35 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.entrySet.elements","long");
		Long V35 = !sV35.isEmpty() ? Long.parseLong(sV35) : null;
		String sV32 = expression("chessBoard.chessPieces.entrySet.this$0.this$0.runAttributes.length","int");
		Integer V32 = !sV32.isEmpty() ? Integer.parseInt(sV32) : null;
		String sV16 = expression("chessBoard.chessPieces.keySet.this$0.entrySetView.this$0.fromStart","boolean");
		Integer V16 = !sV16.isEmpty() ? parseBoolean(sV16) : null;
		String sV19 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.map.keySet.elements","long");
		Long V19 = !sV19.isEmpty() ? Long.parseLong(sV19) : null;
		String sV4 = expression("chessBoard.chessPieces.keySet.this$0.this$0.runAttributes.length","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV7 = expression("chessBoard.chessPieces.entrySet.this$0.entrySet.elements.length","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV34 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.fromStart","boolean");
		Integer V34 = !sV34.isEmpty() ? parseBoolean(sV34) : null;
		String sV31 = expression("chessBoard.chessPieces.keySet.this$0.entrySetView.this$0.toEnd","boolean");
		Integer V31 = !sV31.isEmpty() ? parseBoolean(sV31) : null;
		String sV12 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements.length","int");
		Integer V12 = !sV12.isEmpty() ? Integer.parseInt(sV12) : null;
		String sV27 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.runIndex","int");
		Integer V27 = !sV27.isEmpty() ? Integer.parseInt(sV27) : null;
		String sV21 = expression("chessBoard.chessPieces.keySet.this$0.keySet.elements.length","int");
		Integer V21 = !sV21.isEmpty() ? Integer.parseInt(sV21) : null;
		String sV37 = expression("chessBoard.chessPieces.entrySet.map.keySet.elements.length","int");
		Integer V37 = !sV37.isEmpty() ? Integer.parseInt(sV37) : null;
		String sV17 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.count","int");
		Integer V17 = !sV17.isEmpty() ? Integer.parseInt(sV17) : null;
		String sV8 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.toEnd","boolean");
		Integer V8 = !sV8.isEmpty() ? parseBoolean(sV8) : null;
		String sV29 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.m.fromStart","boolean");
		Integer V29 = !sV29.isEmpty() ? parseBoolean(sV29) : null;
		String sV33 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.this$0.size","int");
		Integer V33 = !sV33.isEmpty() ? Integer.parseInt(sV33) : null;
		String sV28 = expression("chessBoard.chessPieces.entrySet.this$0.entrySet.elements","long");
		Long V28 = !sV28.isEmpty() ? Long.parseLong(sV28) : null;
		String sV23 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements","long");
		Long V23 = !sV23.isEmpty() ? Long.parseLong(sV23) : null;
		String sV20 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.m.toEnd","boolean");
		Integer V20 = !sV20.isEmpty() ? parseBoolean(sV20) : null;
		String sV22 = expression("chessBoard.chessPieces.keySet.this$0.keySet.elements","long");
		Long V22 = !sV22.isEmpty() ? Long.parseLong(sV22) : null;
		String sV38 = expression("chessBoard.chessPieces.entrySet.map.keySet.elements","long");
		Long V38 = !sV38.isEmpty() ? Long.parseLong(sV38) : null;
		String sV13 = expression("chessBoard.chessPieces.keySet.this$0.table.length","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV30 = expression("chessBoard.chessPieces.entrySet.this$0.fromStart","boolean");
		Integer V30 = !sV30.isEmpty() ? parseBoolean(sV30) : null;
		String sV2 = expression("chessBoard.chessPieces.keySet.this$0.hiInclusive","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
		String sV15 = expression("chessBoard.chessPieces.keySet.this$0.loInclusive","boolean");
		Integer V15 = !sV15.isEmpty() ? parseBoolean(sV15) : null;
		String sV18 = expression("chessBoard.chessPieces.keySet.this$0.vals.length","int");
		Integer V18 = !sV18.isEmpty() ? Integer.parseInt(sV18) : null;
		String sV26 = expression("chessBoard.chessPieces.entrySet.elements.length","int");
		Integer V26 = !sV26.isEmpty() ? Integer.parseInt(sV26) : null;
		String sV39 = expression("chessBoard.chessPieces.entrySet.this$0.runIndex","int");
		Integer V39 = !sV39.isEmpty() ? Integer.parseInt(sV39) : null;
		String sV14 = expression("chessBoard.chessPieces.keySet.this$0.fromStart","boolean");
		Integer V14 = !sV14.isEmpty() ? parseBoolean(sV14) : null;
		String sV5 = expression("chessBoard.chessPieces.keySet.this$0.runIndex","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV25 = expression("chessBoard.chessPieces.entrySet.this$0.count","int");
		Integer V25 = !sV25.isEmpty() ? Integer.parseInt(sV25) : null;
		String sV36 = expression("chessBoard.chessPieces.entrySet.this$0.toEnd","boolean");
		Integer V36 = !sV36.isEmpty() ? parseBoolean(sV36) : null;
		String sV10 = expression("chessBoard.chessPieces.entrySet.this$0.size","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV1 = expression("chessBoard.chessPieces.keySet.this$0.toEnd","boolean");
		Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;
		String sV11 = expression("chessBoard.chessPieces.keySet.this$0.size","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV40 = expression("chessBoard.chessPieces.entrySet.elements","long");
		Long V40 = !sV40.isEmpty() ? Long.parseLong(sV40) : null;

		captureCurrentMoment_41(captureCurrentMoment_41, V1, V2);
		captureCurrentMoment_12(captureCurrentMoment_12, V3);
		captureCurrentMoment_23(captureCurrentMoment_23, V6, V4, V5);
		captureCurrentMoment_42(captureCurrentMoment_42, V7);
		captureCurrentMoment_9(captureCurrentMoment_9, V8);
		captureCurrentMoment_3(captureCurrentMoment_3, V9);
		captureCurrentMoment_48(captureCurrentMoment_48, V10);
		captureCurrentMoment_28(captureCurrentMoment_28, V11);
		captureCurrentMoment_18(captureCurrentMoment_18, V12);
		captureCurrentMoment_32(captureCurrentMoment_32, V11, V13);
		captureCurrentMoment_37(captureCurrentMoment_37, V14, V15);
		captureCurrentMoment_34(captureCurrentMoment_34, V16);
		captureCurrentMoment_17(captureCurrentMoment_17, V17);
		captureCurrentMoment_35(captureCurrentMoment_35, V14);
		captureCurrentMoment_26(captureCurrentMoment_26, V18);
		captureCurrentMoment_13(captureCurrentMoment_13, V19);
		captureCurrentMoment_30(captureCurrentMoment_30, V11);
		captureCurrentMoment_22(captureCurrentMoment_22, V20);
		captureCurrentMoment_47(captureCurrentMoment_47, V10);
		captureCurrentMoment_14(captureCurrentMoment_14, V21);
		captureCurrentMoment_15(captureCurrentMoment_15, V22);
		captureCurrentMoment_19(captureCurrentMoment_19, V23);
		captureCurrentMoment_0(captureCurrentMoment_0, V24);
		captureCurrentMoment_16(captureCurrentMoment_16, V17);
		captureCurrentMoment_46(captureCurrentMoment_46, V10);
		captureCurrentMoment_49(captureCurrentMoment_49, V10);
		captureCurrentMoment_55(captureCurrentMoment_55, V25);
		captureCurrentMoment_33(captureCurrentMoment_33, V11, V13);
		captureCurrentMoment_24(captureCurrentMoment_24, V4, V5);
		captureCurrentMoment_10(captureCurrentMoment_10, V26);
		captureCurrentMoment_2(captureCurrentMoment_2, V9, V27);
		captureCurrentMoment_25(captureCurrentMoment_25, V4);
		captureCurrentMoment_43(captureCurrentMoment_43, V28);
		captureCurrentMoment_40(captureCurrentMoment_40, V1, V2);
		captureCurrentMoment_21(captureCurrentMoment_21, V29);
		captureCurrentMoment_50(captureCurrentMoment_50, V30);
		captureCurrentMoment_36(captureCurrentMoment_36, V31);
		captureCurrentMoment_45(captureCurrentMoment_45, V32);
		captureCurrentMoment_27(captureCurrentMoment_27, V11);
		captureCurrentMoment_38(captureCurrentMoment_38, V14, V15);
		captureCurrentMoment_39(captureCurrentMoment_39, V1);
		captureCurrentMoment_6(captureCurrentMoment_6, V33);
		captureCurrentMoment_8(captureCurrentMoment_8, V34);
		captureCurrentMoment_29(captureCurrentMoment_29, V11, V13);
		captureCurrentMoment_4(captureCurrentMoment_4, V33);
		captureCurrentMoment_7(captureCurrentMoment_7, V33);
		captureCurrentMoment_1(captureCurrentMoment_1, V35);
		captureCurrentMoment_51(captureCurrentMoment_51, V36);
		captureCurrentMoment_31(captureCurrentMoment_31, V11);
		captureCurrentMoment_52(captureCurrentMoment_52, V37);
		captureCurrentMoment_54(captureCurrentMoment_54, V25);
		captureCurrentMoment_5(captureCurrentMoment_5, V33);
		captureCurrentMoment_53(captureCurrentMoment_53, V38);
		captureCurrentMoment_44(captureCurrentMoment_44, V32, V39);
		captureCurrentMoment_11(captureCurrentMoment_11, V40);
		captureCurrentMoment_20(captureCurrentMoment_20, V23);
				} 
			}
		currentObject = null;
	}

	private void captureCurrentMoment_41(Integer count, Integer V1, Integer V2) {

		String pathCondition = "captureCurrentMoment_41";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_12(Integer count, Integer V3) {

		String pathCondition = "captureCurrentMoment_12";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_23(Integer count, Integer V6, Integer V4, Integer V5) {

		String pathCondition = "captureCurrentMoment_23";

		if(V6 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 >= 0 && V5 >= 0 && V5 < V4 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_42(Integer count, Integer V7) {

		String pathCondition = "captureCurrentMoment_42";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 >= 0 && V7 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_9(Integer count, Integer V8) {

		String pathCondition = "captureCurrentMoment_9";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_3(Integer count, Integer V9) {

		String pathCondition = "captureCurrentMoment_3";

		if(V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_48(Integer count, Integer V10) {

		String pathCondition = "captureCurrentMoment_48";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_28(Integer count, Integer V11) {

		String pathCondition = "captureCurrentMoment_28";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_18(Integer count, Integer V12) {

		String pathCondition = "captureCurrentMoment_18";

		if(V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 >= 0 && V12 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_32(Integer count, Integer V11, Integer V13) {

		String pathCondition = "captureCurrentMoment_32";

		if(V11 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 != 0 && V13 >= 0 && V13 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_37(Integer count, Integer V14, Integer V15) {

		String pathCondition = "captureCurrentMoment_37";

		if(V14 == null || V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V15 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_34(Integer count, Integer V16) {

		String pathCondition = "captureCurrentMoment_34";

		if(V16 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V16 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_17(Integer count, Integer V17) {

		String pathCondition = "captureCurrentMoment_17";

		if(V17 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V17 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_35(Integer count, Integer V14) {

		String pathCondition = "captureCurrentMoment_35";

		if(V14 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_26(Integer count, Integer V18) {

		String pathCondition = "captureCurrentMoment_26";

		if(V18 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V18 >= 0 && V18 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_13(Integer count, Long V19) {

		String pathCondition = "captureCurrentMoment_13";

		if(V19 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V19 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_30(Integer count, Integer V11) {

		String pathCondition = "captureCurrentMoment_30";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_22(Integer count, Integer V20) {

		String pathCondition = "captureCurrentMoment_22";

		if(V20 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V20 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_47(Integer count, Integer V10) {

		String pathCondition = "captureCurrentMoment_47";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_14(Integer count, Integer V21) {

		String pathCondition = "captureCurrentMoment_14";

		if(V21 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V21 >= 0 && V21 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_15(Integer count, Long V22) {

		String pathCondition = "captureCurrentMoment_15";

		if(V22 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V22 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_19(Integer count, Long V23) {

		String pathCondition = "captureCurrentMoment_19";

		if(V23 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V23 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_0(Integer count, Integer V24) {

		String pathCondition = "captureCurrentMoment_0";

		if(V24 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V24 >= 0 && V24 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_16(Integer count, Integer V17) {

		String pathCondition = "captureCurrentMoment_16";

		if(V17 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V17 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_46(Integer count, Integer V10) {

		String pathCondition = "captureCurrentMoment_46";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_49(Integer count, Integer V10) {

		String pathCondition = "captureCurrentMoment_49";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_55(Integer count, Integer V25) {

		String pathCondition = "captureCurrentMoment_55";

		if(V25 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V25 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_33(Integer count, Integer V11, Integer V13) {

		String pathCondition = "captureCurrentMoment_33";

		if(V11 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 == 0 && V13 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_24(Integer count, Integer V4, Integer V5) {

		String pathCondition = "captureCurrentMoment_24";

		if(V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 >= 0 && V5 >= 0 && V5 < V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_10(Integer count, Integer V26) {

		String pathCondition = "captureCurrentMoment_10";

		if(V26 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V26 >= 0 && V26 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_2(Integer count, Integer V9, Integer V27) {

		String pathCondition = "captureCurrentMoment_2";

		if(V9 == null || V27 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 >= 0 && V27 >= 0 && V27 < V9){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_25(Integer count, Integer V4) {

		String pathCondition = "captureCurrentMoment_25";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_43(Integer count, Long V28) {

		String pathCondition = "captureCurrentMoment_43";

		if(V28 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V28 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_40(Integer count, Integer V1, Integer V2) {

		String pathCondition = "captureCurrentMoment_40";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_21(Integer count, Integer V29) {

		String pathCondition = "captureCurrentMoment_21";

		if(V29 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V29 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_50(Integer count, Integer V30) {

		String pathCondition = "captureCurrentMoment_50";

		if(V30 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V30 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_36(Integer count, Integer V31) {

		String pathCondition = "captureCurrentMoment_36";

		if(V31 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V31 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_45(Integer count, Integer V32) {

		String pathCondition = "captureCurrentMoment_45";

		if(V32 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V32 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_27(Integer count, Integer V11) {

		String pathCondition = "captureCurrentMoment_27";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_38(Integer count, Integer V14, Integer V15) {

		String pathCondition = "captureCurrentMoment_38";

		if(V14 == null || V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V15 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_39(Integer count, Integer V1) {

		String pathCondition = "captureCurrentMoment_39";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_6(Integer count, Integer V33) {

		String pathCondition = "captureCurrentMoment_6";

		if(V33 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V33 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_8(Integer count, Integer V34) {

		String pathCondition = "captureCurrentMoment_8";

		if(V34 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V34 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_29(Integer count, Integer V11, Integer V13) {

		String pathCondition = "captureCurrentMoment_29";

		if(V11 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 > 0 && V13 >= 0 && V13 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_4(Integer count, Integer V33) {

		String pathCondition = "captureCurrentMoment_4";

		if(V33 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V33 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_7(Integer count, Integer V33) {

		String pathCondition = "captureCurrentMoment_7";

		if(V33 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V33 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_1(Integer count, Long V35) {

		String pathCondition = "captureCurrentMoment_1";

		if(V35 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V35 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_51(Integer count, Integer V36) {

		String pathCondition = "captureCurrentMoment_51";

		if(V36 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V36 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_31(Integer count, Integer V11) {

		String pathCondition = "captureCurrentMoment_31";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_52(Integer count, Integer V37) {

		String pathCondition = "captureCurrentMoment_52";

		if(V37 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V37 >= 0 && V37 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_54(Integer count, Integer V25) {

		String pathCondition = "captureCurrentMoment_54";

		if(V25 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V25 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_5(Integer count, Integer V33) {

		String pathCondition = "captureCurrentMoment_5";

		if(V33 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V33 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_53(Integer count, Long V38) {

		String pathCondition = "captureCurrentMoment_53";

		if(V38 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V38 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_44(Integer count, Integer V32, Integer V39) {

		String pathCondition = "captureCurrentMoment_44";

		if(V32 == null || V39 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V32 >= 0 && V39 >= 0 && V39 < V32){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_11(Integer count, Long V40) {

		String pathCondition = "captureCurrentMoment_11";

		if(V40 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V40 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void captureCurrentMoment_20(Integer count, Long V23) {

		String pathCondition = "captureCurrentMoment_20";

		if(V23 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V23 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void checkForStalemateGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer checkForStalemate_3 = 0;
		Integer checkForStalemate_2 = 0;
		Integer checkForStalemate_5 = 0;
		Integer checkForStalemate_9 = 0;
		Integer checkForStalemate_11 = 0;
		Integer checkForStalemate_1 = 0;
		Integer checkForStalemate_7 = 0;
		Integer checkForStalemate_14 = 0;
		Integer checkForStalemate_17 = 0;
		Integer checkForStalemate_12 = 0;
		Integer checkForStalemate_13 = 0;
		Integer checkForStalemate_4 = 0;
		Integer checkForStalemate_8 = 0;
		Integer checkForStalemate_10 = 0;
		Integer checkForStalemate_6 = 0;
		Integer checkForStalemate_16 = 0;
		Integer checkForStalemate_0 = 0;
		Integer checkForStalemate_15 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV11 = expression("stalemateChecker.gc.chessBoard.chessPieces.keySet.elements.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV9 = expression("stalemateChecker.gc.chessBoard.chessPieces.fromStart","boolean");
		Integer V9 = !sV9.isEmpty() ? parseBoolean(sV9) : null;
		String sV1 = expression("stalemateChecker.gc.chessBoard.chessPieces.count","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV5 = expression("stalemateChecker.gc.chessBoard.chessPieces.toEnd","boolean");
		Integer V5 = !sV5.isEmpty() ? parseBoolean(sV5) : null;
		String sV2 = expression("stalemateChecker.gc.chessBoard.chessPieces.size","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV8 = expression("chessBoard.chessPieces.keySet.elements.length","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV3 = expression("chessBoard.chessPieces.keySet.elements","long");
		Long V3 = !sV3.isEmpty() ? Long.parseLong(sV3) : null;
		String sV10 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V10 = !sV10.isEmpty() ? parseBoolean(sV10) : null;
		String sV7 = expression("chessBoard.chessPieces.count","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV6 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V6 = !sV6.isEmpty() ? parseBoolean(sV6) : null;
		String sV4 = expression("chessBoard.chessPieces.size","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;

		checkForStalemate_3(checkForStalemate_3, V1);
		checkForStalemate_2(checkForStalemate_2, V1);
		checkForStalemate_5(checkForStalemate_5, V2);
		checkForStalemate_9(checkForStalemate_9, V3);
		checkForStalemate_11(checkForStalemate_11, V4);
		checkForStalemate_1(checkForStalemate_1, V2);
		checkForStalemate_7(checkForStalemate_7, V5);
		checkForStalemate_14(checkForStalemate_14, V4);
		checkForStalemate_17(checkForStalemate_17, V6);
		checkForStalemate_12(checkForStalemate_12, V7);
		checkForStalemate_13(checkForStalemate_13, V7);
		checkForStalemate_4(checkForStalemate_4, V2);
		checkForStalemate_8(checkForStalemate_8, V8);
		checkForStalemate_10(checkForStalemate_10, V4);
		checkForStalemate_6(checkForStalemate_6, V9);
		checkForStalemate_16(checkForStalemate_16, V10);
		checkForStalemate_0(checkForStalemate_0, V11);
		checkForStalemate_15(checkForStalemate_15, V4);
				} 
			}
		currentObject = null;
	}

	private void checkForStalemate_3(Integer count, Integer V1) {

		String pathCondition = "checkForStalemate_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_2(Integer count, Integer V1) {

		String pathCondition = "checkForStalemate_2";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_5(Integer count, Integer V2) {

		String pathCondition = "checkForStalemate_5";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_9(Integer count, Long V3) {

		String pathCondition = "checkForStalemate_9";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_11(Integer count, Integer V4) {

		String pathCondition = "checkForStalemate_11";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_1(Integer count, Integer V2) {

		String pathCondition = "checkForStalemate_1";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_7(Integer count, Integer V5) {

		String pathCondition = "checkForStalemate_7";

		if(V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_14(Integer count, Integer V4) {

		String pathCondition = "checkForStalemate_14";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_17(Integer count, Integer V6) {

		String pathCondition = "checkForStalemate_17";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_12(Integer count, Integer V7) {

		String pathCondition = "checkForStalemate_12";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_13(Integer count, Integer V7) {

		String pathCondition = "checkForStalemate_13";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_4(Integer count, Integer V2) {

		String pathCondition = "checkForStalemate_4";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_8(Integer count, Integer V8) {

		String pathCondition = "checkForStalemate_8";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 >= 0 && V8 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_10(Integer count, Integer V4) {

		String pathCondition = "checkForStalemate_10";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_6(Integer count, Integer V9) {

		String pathCondition = "checkForStalemate_6";

		if(V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_16(Integer count, Integer V10) {

		String pathCondition = "checkForStalemate_16";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_0(Integer count, Integer V11) {

		String pathCondition = "checkForStalemate_0";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void checkForStalemate_15(Integer count, Integer V4) {

		String pathCondition = "checkForStalemate_15";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void cloneGameControllerStateInfo() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameControllerStateInfo"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer clone_34 = 0;
		Integer clone_6 = 0;
		Integer clone_20 = 0;
		Integer clone_26 = 0;
		Integer clone_30 = 0;
		Integer clone_48 = 0;
		Integer clone_2 = 0;
		Integer clone_56 = 0;
		Integer clone_7 = 0;
		Integer clone_1 = 0;
		Integer clone_21 = 0;
		Integer clone_38 = 0;
		Integer clone_29 = 0;
		Integer clone_17 = 0;
		Integer clone_51 = 0;
		Integer clone_35 = 0;
		Integer clone_16 = 0;
		Integer clone_50 = 0;
		Integer clone_49 = 0;
		Integer clone_57 = 0;
		Integer clone_36 = 0;
		Integer clone_0 = 0;
		Integer clone_43 = 0;
		Integer clone_10 = 0;
		Integer clone_13 = 0;
		Integer clone_19 = 0;
		Integer clone_53 = 0;
		Integer clone_32 = 0;
		Integer clone_8 = 0;
		Integer clone_15 = 0;
		Integer clone_27 = 0;
		Integer clone_14 = 0;
		Integer clone_12 = 0;
		Integer clone_39 = 0;
		Integer clone_58 = 0;
		Integer clone_31 = 0;
		Integer clone_54 = 0;
		Integer clone_44 = 0;
		Integer clone_42 = 0;
		Integer clone_55 = 0;
		Integer clone_3 = 0;
		Integer clone_22 = 0;
		Integer clone_11 = 0;
		Integer clone_45 = 0;
		Integer clone_47 = 0;
		Integer clone_18 = 0;
		Integer clone_5 = 0;
		Integer clone_9 = 0;
		Integer clone_23 = 0;
		Integer clone_37 = 0;
		Integer clone_46 = 0;
		Integer clone_25 = 0;
		Integer clone_40 = 0;
		Integer clone_33 = 0;
		Integer clone_24 = 0;
		Integer clone_28 = 0;
		Integer clone_52 = 0;
		Integer clone_4 = 0;
		Integer clone_41 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV11 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV12 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V12 = !sV12.isEmpty() ? Integer.parseInt(sV12) : null;
		String sV14 = expression("[java.lang.AbstractStringBuilder.sizeTable[1]","int");
		Integer V14 = !sV14.isEmpty() ? Integer.parseInt(sV14) : null;
		String sV9 = expression("checkBlockingMoves.elementData.length","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV5 = expression("checkBlockingMoves.l.expectedModCount","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV2 = expression("checkBlockingMoves.expectedModCount","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV16 = expression("checkBlockingMoves.l.elementCount","int");
		Integer V16 = !sV16.isEmpty() ? Integer.parseInt(sV16) : null;
		String sV13 = expression("checkBlockingMoves.elementCount","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV4 = expression("checkBlockingMoves.l.l.modCount","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV1 = expression("checkBlockingMoves.l.modCount","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV15 = expression("checkBlockingMoves.a.length","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV8 = expression("checkBlockingMoves.l.offset","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV10 = expression("checkBlockingMoves.modCount","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV7 = expression("checkBlockingMoves.l.size","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV6 = expression("checkBlockingMoves.offset","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV3 = expression("checkBlockingMoves.size","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;

		clone_34(clone_34, V6, V7, V8, V1, V2, V3, V4, V5);
		clone_6(clone_6, V9, V3);
		clone_20(clone_20, V3);
		clone_26(clone_26, V1, V2, V3);
		clone_30(clone_30, V6, V7, V1, V2, V3);
		clone_48(clone_48, V10, V2, V3);
		clone_2(clone_2, V12, V11, V3);
		clone_56(clone_56, V9, V13);
		clone_7(clone_7, V3);
		clone_1(clone_1, V12, V11, V14, V3);
		clone_21(clone_21, V1, V2);
		clone_38(clone_38, V6, V7, V1, V2, V3, V5);
		clone_29(clone_29, V6, V1, V2, V3);
		clone_17(clone_17, V11, V3);
		clone_51(clone_51, V12, V11, V13);
		clone_35(clone_35, V6, V7, V1, V2, V3, V4, V5);
		clone_16(clone_16, V12, V11, V3);
		clone_50(clone_50, V12, V11, V14, V13);
		clone_49(clone_49, V12, V11, V13);
		clone_57(clone_57, V13);
		clone_36(clone_36, V10, V1, V2, V3, V5);
		clone_0(clone_0, V12, V11, V3);
		clone_43(clone_43, V10, V12, V11, V2, V3);
		clone_10(clone_10, V15);
		clone_13(clone_13, V12, V11, V3);
		clone_19(clone_19, V3);
		clone_53(clone_53, V13);
		clone_32(clone_32, V6, V7, V1, V2, V3);
		clone_8(clone_8, V3);
		clone_15(clone_15, V12, V11, V14, V3);
		clone_27(clone_27, V6, V1, V2, V3);
		clone_14(clone_14, V12, V11, V14, V3);
		clone_12(clone_12, V15);
		clone_39(clone_39, V1, V2, V3);
		clone_58(clone_58, V13);
		clone_31(clone_31, V6, V7, V1, V2, V3);
		clone_54(clone_54, V9, V13);
		clone_44(clone_44, V10, V12, V11, V14, V2, V3);
		clone_42(clone_42, V10, V2);
		clone_55(clone_55, V9, V13);
		clone_3(clone_3, V11, V3);
		clone_22(clone_22, V12, V11, V1, V2, V3);
		clone_11(clone_11, V15);
		clone_45(clone_45, V10, V12, V11, V2, V3);
		clone_47(clone_47, V10, V2, V3);
		clone_18(clone_18, V3);
		clone_5(clone_5, V9, V3);
		clone_9(clone_9, V15);
		clone_23(clone_23, V12, V11, V14, V1, V2, V3);
		clone_37(clone_37, V1, V2, V3, V5);
		clone_46(clone_46, V10, V11, V2, V3);
		clone_25(clone_25, V11, V1, V2, V3);
		clone_40(clone_40, V6, V16, V1, V2, V3);
		clone_33(clone_33, V1, V2, V3, V4, V5);
		clone_24(clone_24, V12, V11, V1, V2, V3);
		clone_28(clone_28, V6, V11, V1, V2, V3);
		clone_52(clone_52, V11, V13);
		clone_4(clone_4, V3);
		clone_41(clone_41, V6, V16, V1, V2, V3);
				} 
			}
		currentObject = null;
	}

	private void clone_34(Integer count, Integer V6, Integer V7, Integer V8, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "clone_34";

		if(V6 == null || V7 == null || V8 == null || V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V4 == V5 && V6 >= 0 && V6 <= V7 && V6 + V8 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_6(Integer count, Integer V9, Integer V3) {

		String pathCondition = "clone_6";

		if(V9 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 > 0 && V9 >= 0 && V9 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_20(Integer count, Integer V3) {

		String pathCondition = "clone_20";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V3 >> 1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_26(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_26";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_30(Integer count, Integer V6, Integer V7, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_30";

		if(V6 == null || V7 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 >= 0 && V6 > V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_48(Integer count, Integer V10, Integer V2, Integer V3) {

		String pathCondition = "clone_48";

		if(V10 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == V2 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_2(Integer count, Integer V12, Integer V11, Integer V3) {

		String pathCondition = "clone_2";

		if(V12 == null || V11 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_56(Integer count, Integer V9, Integer V13) {

		String pathCondition = "clone_56";

		if(V9 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 > 0 && V9 >= 0 && V9 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_7(Integer count, Integer V3) {

		String pathCondition = "clone_7";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_1(Integer count, Integer V12, Integer V11, Integer V14, Integer V3) {

		String pathCondition = "clone_1";

		if(V12 == null || V11 == null || V14 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 < V11 && V14 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_21(Integer count, Integer V1, Integer V2) {

		String pathCondition = "clone_21";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_38(Integer count, Integer V6, Integer V7, Integer V1, Integer V2, Integer V3, Integer V5) {

		String pathCondition = "clone_38";

		if(V6 == null || V7 == null || V1 == null || V2 == null || V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V1 == V5 && V6 >= 0 && V6 <= V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_29(Integer count, Integer V6, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_29";

		if(V6 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_17(Integer count, Integer V11, Integer V3) {

		String pathCondition = "clone_17";

		if(V11 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_51(Integer count, Integer V12, Integer V11, Integer V13) {

		String pathCondition = "clone_51";

		if(V12 == null || V11 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 <= 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_35(Integer count, Integer V6, Integer V7, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "clone_35";

		if(V6 == null || V7 == null || V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V4 == V5 && V6 >= 0 && V6 <= V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_16(Integer count, Integer V12, Integer V11, Integer V3) {

		String pathCondition = "clone_16";

		if(V12 == null || V11 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_50(Integer count, Integer V12, Integer V11, Integer V14, Integer V13) {

		String pathCondition = "clone_50";

		if(V12 == null || V11 == null || V14 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 <= 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 < V11 && V14 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_49(Integer count, Integer V12, Integer V11, Integer V13) {

		String pathCondition = "clone_49";

		if(V12 == null || V11 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 <= 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_57(Integer count, Integer V13) {

		String pathCondition = "clone_57";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_36(Integer count, Integer V10, Integer V1, Integer V2, Integer V3, Integer V5) {

		String pathCondition = "clone_36";

		if(V10 == null || V1 == null || V2 == null || V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V10 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_0(Integer count, Integer V12, Integer V11, Integer V3) {

		String pathCondition = "clone_0";

		if(V12 == null || V11 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_43(Integer count, Integer V10, Integer V12, Integer V11, Integer V2, Integer V3) {

		String pathCondition = "clone_43";

		if(V10 == null || V12 == null || V11 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == V2 && V3 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_10(Integer count, Integer V15) {

		String pathCondition = "clone_10";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 >= 0 && V15 != 0 && true && 1 != V15 && 1 < V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_13(Integer count, Integer V12, Integer V11, Integer V3) {

		String pathCondition = "clone_13";

		if(V12 == null || V11 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_19(Integer count, Integer V3) {

		String pathCondition = "clone_19";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V3 >> 1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_53(Integer count, Integer V13) {

		String pathCondition = "clone_53";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_32(Integer count, Integer V6, Integer V7, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_32";

		if(V6 == null || V7 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 >= 0 && V6 <= V7 && V6 < V7 >> 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_8(Integer count, Integer V3) {

		String pathCondition = "clone_8";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_15(Integer count, Integer V12, Integer V11, Integer V14, Integer V3) {

		String pathCondition = "clone_15";

		if(V12 == null || V11 == null || V14 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 < V11 && V14 < 0 && 2 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_27(Integer count, Integer V6, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_27";

		if(V6 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_14(Integer count, Integer V12, Integer V11, Integer V14, Integer V3) {

		String pathCondition = "clone_14";

		if(V12 == null || V11 == null || V14 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 < V11 && V14 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_12(Integer count, Integer V15) {

		String pathCondition = "clone_12";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 >= 0 && V15 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_39(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_39";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_58(Integer count, Integer V13) {

		String pathCondition = "clone_58";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_31(Integer count, Integer V6, Integer V7, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_31";

		if(V6 == null || V7 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 >= 0 && V6 <= V7){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_54(Integer count, Integer V9, Integer V13) {

		String pathCondition = "clone_54";

		if(V9 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 > 0 && V9 >= 0 && V9 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_44(Integer count, Integer V10, Integer V12, Integer V11, Integer V14, Integer V2, Integer V3) {

		String pathCondition = "clone_44";

		if(V10 == null || V12 == null || V11 == null || V14 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == V2 && V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 < V11 && V14 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_42(Integer count, Integer V10, Integer V2) {

		String pathCondition = "clone_42";

		if(V10 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_55(Integer count, Integer V9, Integer V13) {

		String pathCondition = "clone_55";

		if(V9 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 > 0 && V9 >= 0 && V9 > 0 && 1 == V13){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_3(Integer count, Integer V11, Integer V3) {

		String pathCondition = "clone_3";

		if(V11 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_22(Integer count, Integer V12, Integer V11, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_22";

		if(V12 == null || V11 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 < 0 && V11 >= 0 && V11 > 0 && V12 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_11(Integer count, Integer V15) {

		String pathCondition = "clone_11";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 >= 0 && V15 != 0 && true && 1 == V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_45(Integer count, Integer V10, Integer V12, Integer V11, Integer V2, Integer V3) {

		String pathCondition = "clone_45";

		if(V10 == null || V12 == null || V11 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == V2 && V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_47(Integer count, Integer V10, Integer V2, Integer V3) {

		String pathCondition = "clone_47";

		if(V10 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == V2 && V3 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_18(Integer count, Integer V3) {

		String pathCondition = "clone_18";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_5(Integer count, Integer V9, Integer V3) {

		String pathCondition = "clone_5";

		if(V9 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 > 0 && V9 >= 0 && V9 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_9(Integer count, Integer V15) {

		String pathCondition = "clone_9";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 >= 0 && V15 != 0 && true){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_23(Integer count, Integer V12, Integer V11, Integer V14, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_23";

		if(V12 == null || V11 == null || V14 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 < V11 && V14 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_37(Integer count, Integer V1, Integer V2, Integer V3, Integer V5) {

		String pathCondition = "clone_37";

		if(V1 == null || V2 == null || V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V1 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_46(Integer count, Integer V10, Integer V11, Integer V2, Integer V3) {

		String pathCondition = "clone_46";

		if(V10 == null || V11 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == V2 && V3 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_25(Integer count, Integer V11, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_25";

		if(V11 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_40(Integer count, Integer V6, Integer V16, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_40";

		if(V6 == null || V16 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 >= 0 && V6 > V16){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_33(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "clone_33";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V4 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_24(Integer count, Integer V12, Integer V11, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_24";

		if(V12 == null || V11 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 < 0 && V11 >= 0 && V11 > 0 && V12 < 0 && 1 >= V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_28(Integer count, Integer V6, Integer V11, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_28";

		if(V6 == null || V11 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 < 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_52(Integer count, Integer V11, Integer V13) {

		String pathCondition = "clone_52";

		if(V11 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V13 <= 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_4(Integer count, Integer V3) {

		String pathCondition = "clone_4";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void clone_41(Integer count, Integer V6, Integer V16, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "clone_41";

		if(V6 == null || V16 == null || V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == V2 && V3 >= 0 && V6 >= 0 && V6 <= V16){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void constructCastlingOpportunitiesGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer constructCastlingOpportunities_9 = 0;
		Integer constructCastlingOpportunities_6 = 0;
		Integer constructCastlingOpportunities_4 = 0;
		Integer constructCastlingOpportunities_3 = 0;
		Integer constructCastlingOpportunities_10 = 0;
		Integer constructCastlingOpportunities_0 = 0;
		Integer constructCastlingOpportunities_7 = 0;
		Integer constructCastlingOpportunities_12 = 0;
		Integer constructCastlingOpportunities_15 = 0;
		Integer constructCastlingOpportunities_17 = 0;
		Integer constructCastlingOpportunities_20 = 0;
		Integer constructCastlingOpportunities_21 = 0;
		Integer constructCastlingOpportunities_19 = 0;
		Integer constructCastlingOpportunities_13 = 0;
		Integer constructCastlingOpportunities_2 = 0;
		Integer constructCastlingOpportunities_16 = 0;
		Integer constructCastlingOpportunities_8 = 0;
		Integer constructCastlingOpportunities_28 = 0;
		Integer constructCastlingOpportunities_27 = 0;
		Integer constructCastlingOpportunities_24 = 0;
		Integer constructCastlingOpportunities_25 = 0;
		Integer constructCastlingOpportunities_11 = 0;
		Integer constructCastlingOpportunities_26 = 0;
		Integer constructCastlingOpportunities_22 = 0;
		Integer constructCastlingOpportunities_23 = 0;
		Integer constructCastlingOpportunities_18 = 0;
		Integer constructCastlingOpportunities_5 = 0;
		Integer constructCastlingOpportunities_1 = 0;
		Integer constructCastlingOpportunities_14 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV3 = expression("chessBoard.chessPieces.table[(5) % (chessBoard.chessPieces.table.length)].hash","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV2 = expression("[stalemate.CastlingOpportunities.nextBlackKingCanCastleRight.value","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
		String sV4 = expression("[stalemate.CastlingOpportunities.nextBlackKingCanCastleLeft.value","boolean");
		Integer V4 = !sV4.isEmpty() ? parseBoolean(sV4) : null;
		String sV1 = expression("chessBoard.chessPieces.table.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV5 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V5 = !sV5.isEmpty() ? parseBoolean(sV5) : null;
		String sV6 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V6 = !sV6.isEmpty() ? parseBoolean(sV6) : null;

		constructCastlingOpportunities_9(constructCastlingOpportunities_9, V1, V2);
		constructCastlingOpportunities_6(constructCastlingOpportunities_6, V1, V3);
		constructCastlingOpportunities_4(constructCastlingOpportunities_4, V1);
		constructCastlingOpportunities_3(constructCastlingOpportunities_3, V1, V2);
		constructCastlingOpportunities_10(constructCastlingOpportunities_10, V1, V2);
		constructCastlingOpportunities_0(constructCastlingOpportunities_0, V1, V4);
		constructCastlingOpportunities_7(constructCastlingOpportunities_7, V1, V4);
		constructCastlingOpportunities_12(constructCastlingOpportunities_12, V1, V4);
		constructCastlingOpportunities_15(constructCastlingOpportunities_15, V1, V2);
		constructCastlingOpportunities_17(constructCastlingOpportunities_17, V4);
		constructCastlingOpportunities_20(constructCastlingOpportunities_20, V2);
		constructCastlingOpportunities_21(constructCastlingOpportunities_21, V5);
		constructCastlingOpportunities_19(constructCastlingOpportunities_19, V2);
		constructCastlingOpportunities_13(constructCastlingOpportunities_13, V1, V4);
		constructCastlingOpportunities_2(constructCastlingOpportunities_2, V1, V2);
		constructCastlingOpportunities_16(constructCastlingOpportunities_16, V1);
		constructCastlingOpportunities_8(constructCastlingOpportunities_8, V1, V4);
		constructCastlingOpportunities_28(constructCastlingOpportunities_28, V1);
		constructCastlingOpportunities_27(constructCastlingOpportunities_27, V1, V2);
		constructCastlingOpportunities_24(constructCastlingOpportunities_24, V1, V4);
		constructCastlingOpportunities_25(constructCastlingOpportunities_25, V1, V4);
		constructCastlingOpportunities_11(constructCastlingOpportunities_11, V1);
		constructCastlingOpportunities_26(constructCastlingOpportunities_26, V1, V2);
		constructCastlingOpportunities_22(constructCastlingOpportunities_22, V6, V5);
		constructCastlingOpportunities_23(constructCastlingOpportunities_23, V6, V5);
		constructCastlingOpportunities_18(constructCastlingOpportunities_18, V4);
		constructCastlingOpportunities_5(constructCastlingOpportunities_5, V1);
		constructCastlingOpportunities_1(constructCastlingOpportunities_1, V1, V4);
		constructCastlingOpportunities_14(constructCastlingOpportunities_14, V1, V2);
				} 
			}
		currentObject = null;
	}

	private void constructCastlingOpportunities_9(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_9";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 5 % V1 >= 0 && 5 % V1 < V1 && 1 == V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_6(Integer count, Integer V1, Integer V3) {

		String pathCondition = "constructCastlingOpportunities_6";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 5 % V1 >= 0 && 5 % V1 < V1 && V3 == 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_4(Integer count, Integer V1) {

		String pathCondition = "constructCastlingOpportunities_4";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_3(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_3";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && 1 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_10(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_10";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 5 % V1 >= 0 && 5 % V1 < V1 && 1 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_0(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_0";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && 1 == V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_7(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_7";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 5 % V1 >= 0 && 5 % V1 < V1 && 1 == V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_12(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_12";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-603227554 & V1 - 1) >= 0 && (-603227554 & V1 - 1) < V1 && 1 == V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_15(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_15";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-603227554 & V1 - 1) >= 0 && (-603227554 & V1 - 1) < V1 && 1 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_17(Integer count, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_17";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (1 == V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_20(Integer count, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_20";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (1 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_21(Integer count, Integer V5) {

		String pathCondition = "constructCastlingOpportunities_21";

		if(V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_19(Integer count, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_19";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (1 == V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_13(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_13";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-603227554 & V1 - 1) >= 0 && (-603227554 & V1 - 1) < V1 && 1 != V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_2(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_2";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && 1 == V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_16(Integer count, Integer V1) {

		String pathCondition = "constructCastlingOpportunities_16";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-603227554 & V1 - 1) >= 0 && (-603227554 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_8(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_8";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 5 % V1 >= 0 && 5 % V1 < V1 && 1 != V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_28(Integer count, Integer V1) {

		String pathCondition = "constructCastlingOpportunities_28";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (389447854 & V1 - 1) >= 0 && (389447854 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_27(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_27";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (389447854 & V1 - 1) >= 0 && (389447854 & V1 - 1) < V1 && 1 != V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_24(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_24";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (389447854 & V1 - 1) >= 0 && (389447854 & V1 - 1) < V1 && 1 == V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_25(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_25";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (389447854 & V1 - 1) >= 0 && (389447854 & V1 - 1) < V1 && 1 != V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_11(Integer count, Integer V1) {

		String pathCondition = "constructCastlingOpportunities_11";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 5 % V1 >= 0 && 5 % V1 < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_26(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_26";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (389447854 & V1 - 1) >= 0 && (389447854 & V1 - 1) < V1 && 1 == V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_22(Integer count, Integer V6, Integer V5) {

		String pathCondition = "constructCastlingOpportunities_22";

		if(V6 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0 && V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_23(Integer count, Integer V6, Integer V5) {

		String pathCondition = "constructCastlingOpportunities_23";

		if(V6 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0 && V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_18(Integer count, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_18";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (1 != V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_5(Integer count, Integer V1) {

		String pathCondition = "constructCastlingOpportunities_5";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_1(Integer count, Integer V1, Integer V4) {

		String pathCondition = "constructCastlingOpportunities_1";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && 1 != V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingOpportunities_14(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingOpportunities_14";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-603227554 & V1 - 1) >= 0 && (-603227554 & V1 - 1) < V1 && 1 == V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void constructCastlingPiecesMovementTrackerGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer constructCastlingPiecesMovementTracker_159 = 0;
		Integer constructCastlingPiecesMovementTracker_513 = 0;
		Integer constructCastlingPiecesMovementTracker_280 = 0;
		Integer constructCastlingPiecesMovementTracker_186 = 0;
		Integer constructCastlingPiecesMovementTracker_327 = 0;
		Integer constructCastlingPiecesMovementTracker_249 = 0;
		Integer constructCastlingPiecesMovementTracker_320 = 0;
		Integer constructCastlingPiecesMovementTracker_285 = 0;
		Integer constructCastlingPiecesMovementTracker_295 = 0;
		Integer constructCastlingPiecesMovementTracker_109 = 0;
		Integer constructCastlingPiecesMovementTracker_394 = 0;
		Integer constructCastlingPiecesMovementTracker_367 = 0;
		Integer constructCastlingPiecesMovementTracker_30 = 0;
		Integer constructCastlingPiecesMovementTracker_432 = 0;
		Integer constructCastlingPiecesMovementTracker_391 = 0;
		Integer constructCastlingPiecesMovementTracker_301 = 0;
		Integer constructCastlingPiecesMovementTracker_140 = 0;
		Integer constructCastlingPiecesMovementTracker_4 = 0;
		Integer constructCastlingPiecesMovementTracker_466 = 0;
		Integer constructCastlingPiecesMovementTracker_102 = 0;
		Integer constructCastlingPiecesMovementTracker_425 = 0;
		Integer constructCastlingPiecesMovementTracker_376 = 0;
		Integer constructCastlingPiecesMovementTracker_491 = 0;
		Integer constructCastlingPiecesMovementTracker_449 = 0;
		Integer constructCastlingPiecesMovementTracker_60 = 0;
		Integer constructCastlingPiecesMovementTracker_490 = 0;
		Integer constructCastlingPiecesMovementTracker_105 = 0;
		Integer constructCastlingPiecesMovementTracker_192 = 0;
		Integer constructCastlingPiecesMovementTracker_408 = 0;
		Integer constructCastlingPiecesMovementTracker_467 = 0;
		Integer constructCastlingPiecesMovementTracker_360 = 0;
		Integer constructCastlingPiecesMovementTracker_487 = 0;
		Integer constructCastlingPiecesMovementTracker_407 = 0;
		Integer constructCastlingPiecesMovementTracker_106 = 0;
		Integer constructCastlingPiecesMovementTracker_187 = 0;
		Integer constructCastlingPiecesMovementTracker_8 = 0;
		Integer constructCastlingPiecesMovementTracker_515 = 0;
		Integer constructCastlingPiecesMovementTracker_131 = 0;
		Integer constructCastlingPiecesMovementTracker_233 = 0;
		Integer constructCastlingPiecesMovementTracker_127 = 0;
		Integer constructCastlingPiecesMovementTracker_91 = 0;
		Integer constructCastlingPiecesMovementTracker_500 = 0;
		Integer constructCastlingPiecesMovementTracker_126 = 0;
		Integer constructCastlingPiecesMovementTracker_533 = 0;
		Integer constructCastlingPiecesMovementTracker_334 = 0;
		Integer constructCastlingPiecesMovementTracker_382 = 0;
		Integer constructCastlingPiecesMovementTracker_488 = 0;
		Integer constructCastlingPiecesMovementTracker_537 = 0;
		Integer constructCastlingPiecesMovementTracker_42 = 0;
		Integer constructCastlingPiecesMovementTracker_76 = 0;
		Integer constructCastlingPiecesMovementTracker_381 = 0;
		Integer constructCastlingPiecesMovementTracker_383 = 0;
		Integer constructCastlingPiecesMovementTracker_146 = 0;
		Integer constructCastlingPiecesMovementTracker_352 = 0;
		Integer constructCastlingPiecesMovementTracker_415 = 0;
		Integer constructCastlingPiecesMovementTracker_509 = 0;
		Integer constructCastlingPiecesMovementTracker_247 = 0;
		Integer constructCastlingPiecesMovementTracker_162 = 0;
		Integer constructCastlingPiecesMovementTracker_410 = 0;
		Integer constructCastlingPiecesMovementTracker_536 = 0;
		Integer constructCastlingPiecesMovementTracker_128 = 0;
		Integer constructCastlingPiecesMovementTracker_506 = 0;
		Integer constructCastlingPiecesMovementTracker_387 = 0;
		Integer constructCastlingPiecesMovementTracker_188 = 0;
		Integer constructCastlingPiecesMovementTracker_444 = 0;
		Integer constructCastlingPiecesMovementTracker_269 = 0;
		Integer constructCastlingPiecesMovementTracker_242 = 0;
		Integer constructCastlingPiecesMovementTracker_284 = 0;
		Integer constructCastlingPiecesMovementTracker_521 = 0;
		Integer constructCastlingPiecesMovementTracker_386 = 0;
		Integer constructCastlingPiecesMovementTracker_221 = 0;
		Integer constructCastlingPiecesMovementTracker_118 = 0;
		Integer constructCastlingPiecesMovementTracker_133 = 0;
		Integer constructCastlingPiecesMovementTracker_430 = 0;
		Integer constructCastlingPiecesMovementTracker_316 = 0;
		Integer constructCastlingPiecesMovementTracker_474 = 0;
		Integer constructCastlingPiecesMovementTracker_484 = 0;
		Integer constructCastlingPiecesMovementTracker_44 = 0;
		Integer constructCastlingPiecesMovementTracker_328 = 0;
		Integer constructCastlingPiecesMovementTracker_297 = 0;
		Integer constructCastlingPiecesMovementTracker_378 = 0;
		Integer constructCastlingPiecesMovementTracker_219 = 0;
		Integer constructCastlingPiecesMovementTracker_492 = 0;
		Integer constructCastlingPiecesMovementTracker_68 = 0;
		Integer constructCastlingPiecesMovementTracker_332 = 0;
		Integer constructCastlingPiecesMovementTracker_185 = 0;
		Integer constructCastlingPiecesMovementTracker_196 = 0;
		Integer constructCastlingPiecesMovementTracker_346 = 0;
		Integer constructCastlingPiecesMovementTracker_411 = 0;
		Integer constructCastlingPiecesMovementTracker_111 = 0;
		Integer constructCastlingPiecesMovementTracker_356 = 0;
		Integer constructCastlingPiecesMovementTracker_171 = 0;
		Integer constructCastlingPiecesMovementTracker_252 = 0;
		Integer constructCastlingPiecesMovementTracker_389 = 0;
		Integer constructCastlingPiecesMovementTracker_63 = 0;
		Integer constructCastlingPiecesMovementTracker_178 = 0;
		Integer constructCastlingPiecesMovementTracker_483 = 0;
		Integer constructCastlingPiecesMovementTracker_478 = 0;
		Integer constructCastlingPiecesMovementTracker_323 = 0;
		Integer constructCastlingPiecesMovementTracker_485 = 0;
		Integer constructCastlingPiecesMovementTracker_17 = 0;
		Integer constructCastlingPiecesMovementTracker_450 = 0;
		Integer constructCastlingPiecesMovementTracker_108 = 0;
		Integer constructCastlingPiecesMovementTracker_373 = 0;
		Integer constructCastlingPiecesMovementTracker_144 = 0;
		Integer constructCastlingPiecesMovementTracker_61 = 0;
		Integer constructCastlingPiecesMovementTracker_277 = 0;
		Integer constructCastlingPiecesMovementTracker_315 = 0;
		Integer constructCastlingPiecesMovementTracker_250 = 0;
		Integer constructCastlingPiecesMovementTracker_326 = 0;
		Integer constructCastlingPiecesMovementTracker_253 = 0;
		Integer constructCastlingPiecesMovementTracker_313 = 0;
		Integer constructCastlingPiecesMovementTracker_364 = 0;
		Integer constructCastlingPiecesMovementTracker_311 = 0;
		Integer constructCastlingPiecesMovementTracker_330 = 0;
		Integer constructCastlingPiecesMovementTracker_114 = 0;
		Integer constructCastlingPiecesMovementTracker_538 = 0;
		Integer constructCastlingPiecesMovementTracker_276 = 0;
		Integer constructCastlingPiecesMovementTracker_52 = 0;
		Integer constructCastlingPiecesMovementTracker_104 = 0;
		Integer constructCastlingPiecesMovementTracker_2 = 0;
		Integer constructCastlingPiecesMovementTracker_184 = 0;
		Integer constructCastlingPiecesMovementTracker_77 = 0;
		Integer constructCastlingPiecesMovementTracker_365 = 0;
		Integer constructCastlingPiecesMovementTracker_291 = 0;
		Integer constructCastlingPiecesMovementTracker_202 = 0;
		Integer constructCastlingPiecesMovementTracker_191 = 0;
		Integer constructCastlingPiecesMovementTracker_231 = 0;
		Integer constructCastlingPiecesMovementTracker_211 = 0;
		Integer constructCastlingPiecesMovementTracker_481 = 0;
		Integer constructCastlingPiecesMovementTracker_397 = 0;
		Integer constructCastlingPiecesMovementTracker_390 = 0;
		Integer constructCastlingPiecesMovementTracker_463 = 0;
		Integer constructCastlingPiecesMovementTracker_475 = 0;
		Integer constructCastlingPiecesMovementTracker_385 = 0;
		Integer constructCastlingPiecesMovementTracker_529 = 0;
		Integer constructCastlingPiecesMovementTracker_65 = 0;
		Integer constructCastlingPiecesMovementTracker_271 = 0;
		Integer constructCastlingPiecesMovementTracker_419 = 0;
		Integer constructCastlingPiecesMovementTracker_445 = 0;
		Integer constructCastlingPiecesMovementTracker_213 = 0;
		Integer constructCastlingPiecesMovementTracker_256 = 0;
		Integer constructCastlingPiecesMovementTracker_87 = 0;
		Integer constructCastlingPiecesMovementTracker_225 = 0;
		Integer constructCastlingPiecesMovementTracker_460 = 0;
		Integer constructCastlingPiecesMovementTracker_115 = 0;
		Integer constructCastlingPiecesMovementTracker_152 = 0;
		Integer constructCastlingPiecesMovementTracker_289 = 0;
		Integer constructCastlingPiecesMovementTracker_142 = 0;
		Integer constructCastlingPiecesMovementTracker_439 = 0;
		Integer constructCastlingPiecesMovementTracker_342 = 0;
		Integer constructCastlingPiecesMovementTracker_290 = 0;
		Integer constructCastlingPiecesMovementTracker_339 = 0;
		Integer constructCastlingPiecesMovementTracker_525 = 0;
		Integer constructCastlingPiecesMovementTracker_173 = 0;
		Integer constructCastlingPiecesMovementTracker_224 = 0;
		Integer constructCastlingPiecesMovementTracker_377 = 0;
		Integer constructCastlingPiecesMovementTracker_246 = 0;
		Integer constructCastlingPiecesMovementTracker_384 = 0;
		Integer constructCastlingPiecesMovementTracker_220 = 0;
		Integer constructCastlingPiecesMovementTracker_298 = 0;
		Integer constructCastlingPiecesMovementTracker_310 = 0;
		Integer constructCastlingPiecesMovementTracker_57 = 0;
		Integer constructCastlingPiecesMovementTracker_45 = 0;
		Integer constructCastlingPiecesMovementTracker_164 = 0;
		Integer constructCastlingPiecesMovementTracker_274 = 0;
		Integer constructCastlingPiecesMovementTracker_136 = 0;
		Integer constructCastlingPiecesMovementTracker_531 = 0;
		Integer constructCastlingPiecesMovementTracker_97 = 0;
		Integer constructCastlingPiecesMovementTracker_80 = 0;
		Integer constructCastlingPiecesMovementTracker_88 = 0;
		Integer constructCastlingPiecesMovementTracker_232 = 0;
		Integer constructCastlingPiecesMovementTracker_26 = 0;
		Integer constructCastlingPiecesMovementTracker_261 = 0;
		Integer constructCastlingPiecesMovementTracker_234 = 0;
		Integer constructCastlingPiecesMovementTracker_120 = 0;
		Integer constructCastlingPiecesMovementTracker_528 = 0;
		Integer constructCastlingPiecesMovementTracker_438 = 0;
		Integer constructCastlingPiecesMovementTracker_33 = 0;
		Integer constructCastlingPiecesMovementTracker_143 = 0;
		Integer constructCastlingPiecesMovementTracker_258 = 0;
		Integer constructCastlingPiecesMovementTracker_442 = 0;
		Integer constructCastlingPiecesMovementTracker_89 = 0;
		Integer constructCastlingPiecesMovementTracker_198 = 0;
		Integer constructCastlingPiecesMovementTracker_458 = 0;
		Integer constructCastlingPiecesMovementTracker_510 = 0;
		Integer constructCastlingPiecesMovementTracker_9 = 0;
		Integer constructCastlingPiecesMovementTracker_370 = 0;
		Integer constructCastlingPiecesMovementTracker_476 = 0;
		Integer constructCastlingPiecesMovementTracker_5 = 0;
		Integer constructCastlingPiecesMovementTracker_147 = 0;
		Integer constructCastlingPiecesMovementTracker_306 = 0;
		Integer constructCastlingPiecesMovementTracker_190 = 0;
		Integer constructCastlingPiecesMovementTracker_420 = 0;
		Integer constructCastlingPiecesMovementTracker_318 = 0;
		Integer constructCastlingPiecesMovementTracker_305 = 0;
		Integer constructCastlingPiecesMovementTracker_74 = 0;
		Integer constructCastlingPiecesMovementTracker_112 = 0;
		Integer constructCastlingPiecesMovementTracker_43 = 0;
		Integer constructCastlingPiecesMovementTracker_176 = 0;
		Integer constructCastlingPiecesMovementTracker_392 = 0;
		Integer constructCastlingPiecesMovementTracker_20 = 0;
		Integer constructCastlingPiecesMovementTracker_433 = 0;
		Integer constructCastlingPiecesMovementTracker_520 = 0;
		Integer constructCastlingPiecesMovementTracker_402 = 0;
		Integer constructCastlingPiecesMovementTracker_499 = 0;
		Integer constructCastlingPiecesMovementTracker_505 = 0;
		Integer constructCastlingPiecesMovementTracker_10 = 0;
		Integer constructCastlingPiecesMovementTracker_340 = 0;
		Integer constructCastlingPiecesMovementTracker_494 = 0;
		Integer constructCastlingPiecesMovementTracker_53 = 0;
		Integer constructCastlingPiecesMovementTracker_199 = 0;
		Integer constructCastlingPiecesMovementTracker_49 = 0;
		Integer constructCastlingPiecesMovementTracker_218 = 0;
		Integer constructCastlingPiecesMovementTracker_353 = 0;
		Integer constructCastlingPiecesMovementTracker_254 = 0;
		Integer constructCastlingPiecesMovementTracker_257 = 0;
		Integer constructCastlingPiecesMovementTracker_512 = 0;
		Integer constructCastlingPiecesMovementTracker_464 = 0;
		Integer constructCastlingPiecesMovementTracker_532 = 0;
		Integer constructCastlingPiecesMovementTracker_12 = 0;
		Integer constructCastlingPiecesMovementTracker_459 = 0;
		Integer constructCastlingPiecesMovementTracker_123 = 0;
		Integer constructCastlingPiecesMovementTracker_333 = 0;
		Integer constructCastlingPiecesMovementTracker_69 = 0;
		Integer constructCastlingPiecesMovementTracker_116 = 0;
		Integer constructCastlingPiecesMovementTracker_380 = 0;
		Integer constructCastlingPiecesMovementTracker_423 = 0;
		Integer constructCastlingPiecesMovementTracker_322 = 0;
		Integer constructCastlingPiecesMovementTracker_273 = 0;
		Integer constructCastlingPiecesMovementTracker_517 = 0;
		Integer constructCastlingPiecesMovementTracker_227 = 0;
		Integer constructCastlingPiecesMovementTracker_223 = 0;
		Integer constructCastlingPiecesMovementTracker_182 = 0;
		Integer constructCastlingPiecesMovementTracker_405 = 0;
		Integer constructCastlingPiecesMovementTracker_238 = 0;
		Integer constructCastlingPiecesMovementTracker_23 = 0;
		Integer constructCastlingPiecesMovementTracker_508 = 0;
		Integer constructCastlingPiecesMovementTracker_230 = 0;
		Integer constructCastlingPiecesMovementTracker_357 = 0;
		Integer constructCastlingPiecesMovementTracker_345 = 0;
		Integer constructCastlingPiecesMovementTracker_181 = 0;
		Integer constructCastlingPiecesMovementTracker_347 = 0;
		Integer constructCastlingPiecesMovementTracker_455 = 0;
		Integer constructCastlingPiecesMovementTracker_519 = 0;
		Integer constructCastlingPiecesMovementTracker_462 = 0;
		Integer constructCastlingPiecesMovementTracker_48 = 0;
		Integer constructCastlingPiecesMovementTracker_279 = 0;
		Integer constructCastlingPiecesMovementTracker_321 = 0;
		Integer constructCastlingPiecesMovementTracker_235 = 0;
		Integer constructCastlingPiecesMovementTracker_228 = 0;
		Integer constructCastlingPiecesMovementTracker_263 = 0;
		Integer constructCastlingPiecesMovementTracker_314 = 0;
		Integer constructCastlingPiecesMovementTracker_189 = 0;
		Integer constructCastlingPiecesMovementTracker_19 = 0;
		Integer constructCastlingPiecesMovementTracker_362 = 0;
		Integer constructCastlingPiecesMovementTracker_38 = 0;
		Integer constructCastlingPiecesMovementTracker_293 = 0;
		Integer constructCastlingPiecesMovementTracker_308 = 0;
		Integer constructCastlingPiecesMovementTracker_443 = 0;
		Integer constructCastlingPiecesMovementTracker_86 = 0;
		Integer constructCastlingPiecesMovementTracker_355 = 0;
		Integer constructCastlingPiecesMovementTracker_58 = 0;
		Integer constructCastlingPiecesMovementTracker_243 = 0;
		Integer constructCastlingPiecesMovementTracker_16 = 0;
		Integer constructCastlingPiecesMovementTracker_168 = 0;
		Integer constructCastlingPiecesMovementTracker_477 = 0;
		Integer constructCastlingPiecesMovementTracker_125 = 0;
		Integer constructCastlingPiecesMovementTracker_177 = 0;
		Integer constructCastlingPiecesMovementTracker_40 = 0;
		Integer constructCastlingPiecesMovementTracker_262 = 0;
		Integer constructCastlingPiecesMovementTracker_472 = 0;
		Integer constructCastlingPiecesMovementTracker_22 = 0;
		Integer constructCastlingPiecesMovementTracker_414 = 0;
		Integer constructCastlingPiecesMovementTracker_124 = 0;
		Integer constructCastlingPiecesMovementTracker_451 = 0;
		Integer constructCastlingPiecesMovementTracker_207 = 0;
		Integer constructCastlingPiecesMovementTracker_170 = 0;
		Integer constructCastlingPiecesMovementTracker_172 = 0;
		Integer constructCastlingPiecesMovementTracker_359 = 0;
		Integer constructCastlingPiecesMovementTracker_435 = 0;
		Integer constructCastlingPiecesMovementTracker_452 = 0;
		Integer constructCastlingPiecesMovementTracker_145 = 0;
		Integer constructCastlingPiecesMovementTracker_331 = 0;
		Integer constructCastlingPiecesMovementTracker_429 = 0;
		Integer constructCastlingPiecesMovementTracker_51 = 0;
		Integer constructCastlingPiecesMovementTracker_237 = 0;
		Integer constructCastlingPiecesMovementTracker_511 = 0;
		Integer constructCastlingPiecesMovementTracker_157 = 0;
		Integer constructCastlingPiecesMovementTracker_222 = 0;
		Integer constructCastlingPiecesMovementTracker_288 = 0;
		Integer constructCastlingPiecesMovementTracker_78 = 0;
		Integer constructCastlingPiecesMovementTracker_319 = 0;
		Integer constructCastlingPiecesMovementTracker_516 = 0;
		Integer constructCastlingPiecesMovementTracker_28 = 0;
		Integer constructCastlingPiecesMovementTracker_85 = 0;
		Integer constructCastlingPiecesMovementTracker_351 = 0;
		Integer constructCastlingPiecesMovementTracker_302 = 0;
		Integer constructCastlingPiecesMovementTracker_446 = 0;
		Integer constructCastlingPiecesMovementTracker_62 = 0;
		Integer constructCastlingPiecesMovementTracker_130 = 0;
		Integer constructCastlingPiecesMovementTracker_448 = 0;
		Integer constructCastlingPiecesMovementTracker_336 = 0;
		Integer constructCastlingPiecesMovementTracker_241 = 0;
		Integer constructCastlingPiecesMovementTracker_153 = 0;
		Integer constructCastlingPiecesMovementTracker_113 = 0;
		Integer constructCastlingPiecesMovementTracker_416 = 0;
		Integer constructCastlingPiecesMovementTracker_437 = 0;
		Integer constructCastlingPiecesMovementTracker_154 = 0;
		Integer constructCastlingPiecesMovementTracker_260 = 0;
		Integer constructCastlingPiecesMovementTracker_119 = 0;
		Integer constructCastlingPiecesMovementTracker_139 = 0;
		Integer constructCastlingPiecesMovementTracker_350 = 0;
		Integer constructCastlingPiecesMovementTracker_507 = 0;
		Integer constructCastlingPiecesMovementTracker_148 = 0;
		Integer constructCastlingPiecesMovementTracker_465 = 0;
		Integer constructCastlingPiecesMovementTracker_32 = 0;
		Integer constructCastlingPiecesMovementTracker_287 = 0;
		Integer constructCastlingPiecesMovementTracker_469 = 0;
		Integer constructCastlingPiecesMovementTracker_150 = 0;
		Integer constructCastlingPiecesMovementTracker_6 = 0;
		Integer constructCastlingPiecesMovementTracker_292 = 0;
		Integer constructCastlingPiecesMovementTracker_72 = 0;
		Integer constructCastlingPiecesMovementTracker_456 = 0;
		Integer constructCastlingPiecesMovementTracker_215 = 0;
		Integer constructCastlingPiecesMovementTracker_46 = 0;
		Integer constructCastlingPiecesMovementTracker_83 = 0;
		Integer constructCastlingPiecesMovementTracker_454 = 0;
		Integer constructCastlingPiecesMovementTracker_344 = 0;
		Integer constructCastlingPiecesMovementTracker_94 = 0;
		Integer constructCastlingPiecesMovementTracker_361 = 0;
		Integer constructCastlingPiecesMovementTracker_453 = 0;
		Integer constructCastlingPiecesMovementTracker_255 = 0;
		Integer constructCastlingPiecesMovementTracker_281 = 0;
		Integer constructCastlingPiecesMovementTracker_34 = 0;
		Integer constructCastlingPiecesMovementTracker_151 = 0;
		Integer constructCastlingPiecesMovementTracker_183 = 0;
		Integer constructCastlingPiecesMovementTracker_209 = 0;
		Integer constructCastlingPiecesMovementTracker_138 = 0;
		Integer constructCastlingPiecesMovementTracker_84 = 0;
		Integer constructCastlingPiecesMovementTracker_539 = 0;
		Integer constructCastlingPiecesMovementTracker_412 = 0;
		Integer constructCastlingPiecesMovementTracker_296 = 0;
		Integer constructCastlingPiecesMovementTracker_502 = 0;
		Integer constructCastlingPiecesMovementTracker_59 = 0;
		Integer constructCastlingPiecesMovementTracker_160 = 0;
		Integer constructCastlingPiecesMovementTracker_137 = 0;
		Integer constructCastlingPiecesMovementTracker_479 = 0;
		Integer constructCastlingPiecesMovementTracker_480 = 0;
		Integer constructCastlingPiecesMovementTracker_54 = 0;
		Integer constructCastlingPiecesMovementTracker_99 = 0;
		Integer constructCastlingPiecesMovementTracker_482 = 0;
		Integer constructCastlingPiecesMovementTracker_300 = 0;
		Integer constructCastlingPiecesMovementTracker_312 = 0;
		Integer constructCastlingPiecesMovementTracker_486 = 0;
		Integer constructCastlingPiecesMovementTracker_259 = 0;
		Integer constructCastlingPiecesMovementTracker_3 = 0;
		Integer constructCastlingPiecesMovementTracker_286 = 0;
		Integer constructCastlingPiecesMovementTracker_303 = 0;
		Integer constructCastlingPiecesMovementTracker_441 = 0;
		Integer constructCastlingPiecesMovementTracker_337 = 0;
		Integer constructCastlingPiecesMovementTracker_434 = 0;
		Integer constructCastlingPiecesMovementTracker_473 = 0;
		Integer constructCastlingPiecesMovementTracker_169 = 0;
		Integer constructCastlingPiecesMovementTracker_245 = 0;
		Integer constructCastlingPiecesMovementTracker_417 = 0;
		Integer constructCastlingPiecesMovementTracker_349 = 0;
		Integer constructCastlingPiecesMovementTracker_200 = 0;
		Integer constructCastlingPiecesMovementTracker_398 = 0;
		Integer constructCastlingPiecesMovementTracker_37 = 0;
		Integer constructCastlingPiecesMovementTracker_240 = 0;
		Integer constructCastlingPiecesMovementTracker_132 = 0;
		Integer constructCastlingPiecesMovementTracker_374 = 0;
		Integer constructCastlingPiecesMovementTracker_440 = 0;
		Integer constructCastlingPiecesMovementTracker_457 = 0;
		Integer constructCastlingPiecesMovementTracker_31 = 0;
		Integer constructCastlingPiecesMovementTracker_121 = 0;
		Integer constructCastlingPiecesMovementTracker_90 = 0;
		Integer constructCastlingPiecesMovementTracker_501 = 0;
		Integer constructCastlingPiecesMovementTracker_372 = 0;
		Integer constructCastlingPiecesMovementTracker_1 = 0;
		Integer constructCastlingPiecesMovementTracker_50 = 0;
		Integer constructCastlingPiecesMovementTracker_523 = 0;
		Integer constructCastlingPiecesMovementTracker_110 = 0;
		Integer constructCastlingPiecesMovementTracker_325 = 0;
		Integer constructCastlingPiecesMovementTracker_341 = 0;
		Integer constructCastlingPiecesMovementTracker_358 = 0;
		Integer constructCastlingPiecesMovementTracker_64 = 0;
		Integer constructCastlingPiecesMovementTracker_101 = 0;
		Integer constructCastlingPiecesMovementTracker_324 = 0;
		Integer constructCastlingPiecesMovementTracker_129 = 0;
		Integer constructCastlingPiecesMovementTracker_495 = 0;
		Integer constructCastlingPiecesMovementTracker_522 = 0;
		Integer constructCastlingPiecesMovementTracker_265 = 0;
		Integer constructCastlingPiecesMovementTracker_278 = 0;
		Integer constructCastlingPiecesMovementTracker_504 = 0;
		Integer constructCastlingPiecesMovementTracker_436 = 0;
		Integer constructCastlingPiecesMovementTracker_404 = 0;
		Integer constructCastlingPiecesMovementTracker_180 = 0;
		Integer constructCastlingPiecesMovementTracker_526 = 0;
		Integer constructCastlingPiecesMovementTracker_167 = 0;
		Integer constructCastlingPiecesMovementTracker_236 = 0;
		Integer constructCastlingPiecesMovementTracker_41 = 0;
		Integer constructCastlingPiecesMovementTracker_0 = 0;
		Integer constructCastlingPiecesMovementTracker_239 = 0;
		Integer constructCastlingPiecesMovementTracker_400 = 0;
		Integer constructCastlingPiecesMovementTracker_122 = 0;
		Integer constructCastlingPiecesMovementTracker_55 = 0;
		Integer constructCastlingPiecesMovementTracker_354 = 0;
		Integer constructCastlingPiecesMovementTracker_535 = 0;
		Integer constructCastlingPiecesMovementTracker_266 = 0;
		Integer constructCastlingPiecesMovementTracker_363 = 0;
		Integer constructCastlingPiecesMovementTracker_175 = 0;
		Integer constructCastlingPiecesMovementTracker_166 = 0;
		Integer constructCastlingPiecesMovementTracker_217 = 0;
		Integer constructCastlingPiecesMovementTracker_244 = 0;
		Integer constructCastlingPiecesMovementTracker_431 = 0;
		Integer constructCastlingPiecesMovementTracker_35 = 0;
		Integer constructCastlingPiecesMovementTracker_524 = 0;
		Integer constructCastlingPiecesMovementTracker_366 = 0;
		Integer constructCastlingPiecesMovementTracker_371 = 0;
		Integer constructCastlingPiecesMovementTracker_194 = 0;
		Integer constructCastlingPiecesMovementTracker_25 = 0;
		Integer constructCastlingPiecesMovementTracker_56 = 0;
		Integer constructCastlingPiecesMovementTracker_197 = 0;
		Integer constructCastlingPiecesMovementTracker_468 = 0;
		Integer constructCastlingPiecesMovementTracker_248 = 0;
		Integer constructCastlingPiecesMovementTracker_208 = 0;
		Integer constructCastlingPiecesMovementTracker_275 = 0;
		Integer constructCastlingPiecesMovementTracker_375 = 0;
		Integer constructCastlingPiecesMovementTracker_268 = 0;
		Integer constructCastlingPiecesMovementTracker_158 = 0;
		Integer constructCastlingPiecesMovementTracker_66 = 0;
		Integer constructCastlingPiecesMovementTracker_79 = 0;
		Integer constructCastlingPiecesMovementTracker_396 = 0;
		Integer constructCastlingPiecesMovementTracker_471 = 0;
		Integer constructCastlingPiecesMovementTracker_11 = 0;
		Integer constructCastlingPiecesMovementTracker_135 = 0;
		Integer constructCastlingPiecesMovementTracker_165 = 0;
		Integer constructCastlingPiecesMovementTracker_427 = 0;
		Integer constructCastlingPiecesMovementTracker_422 = 0;
		Integer constructCastlingPiecesMovementTracker_503 = 0;
		Integer constructCastlingPiecesMovementTracker_399 = 0;
		Integer constructCastlingPiecesMovementTracker_36 = 0;
		Integer constructCastlingPiecesMovementTracker_82 = 0;
		Integer constructCastlingPiecesMovementTracker_210 = 0;
		Integer constructCastlingPiecesMovementTracker_141 = 0;
		Integer constructCastlingPiecesMovementTracker_403 = 0;
		Integer constructCastlingPiecesMovementTracker_21 = 0;
		Integer constructCastlingPiecesMovementTracker_98 = 0;
		Integer constructCastlingPiecesMovementTracker_81 = 0;
		Integer constructCastlingPiecesMovementTracker_309 = 0;
		Integer constructCastlingPiecesMovementTracker_29 = 0;
		Integer constructCastlingPiecesMovementTracker_421 = 0;
		Integer constructCastlingPiecesMovementTracker_73 = 0;
		Integer constructCastlingPiecesMovementTracker_329 = 0;
		Integer constructCastlingPiecesMovementTracker_527 = 0;
		Integer constructCastlingPiecesMovementTracker_368 = 0;
		Integer constructCastlingPiecesMovementTracker_212 = 0;
		Integer constructCastlingPiecesMovementTracker_93 = 0;
		Integer constructCastlingPiecesMovementTracker_179 = 0;
		Integer constructCastlingPiecesMovementTracker_461 = 0;
		Integer constructCastlingPiecesMovementTracker_393 = 0;
		Integer constructCastlingPiecesMovementTracker_47 = 0;
		Integer constructCastlingPiecesMovementTracker_229 = 0;
		Integer constructCastlingPiecesMovementTracker_282 = 0;
		Integer constructCastlingPiecesMovementTracker_409 = 0;
		Integer constructCastlingPiecesMovementTracker_470 = 0;
		Integer constructCastlingPiecesMovementTracker_299 = 0;
		Integer constructCastlingPiecesMovementTracker_418 = 0;
		Integer constructCastlingPiecesMovementTracker_530 = 0;
		Integer constructCastlingPiecesMovementTracker_216 = 0;
		Integer constructCastlingPiecesMovementTracker_514 = 0;
		Integer constructCastlingPiecesMovementTracker_7 = 0;
		Integer constructCastlingPiecesMovementTracker_226 = 0;
		Integer constructCastlingPiecesMovementTracker_174 = 0;
		Integer constructCastlingPiecesMovementTracker_203 = 0;
		Integer constructCastlingPiecesMovementTracker_283 = 0;
		Integer constructCastlingPiecesMovementTracker_369 = 0;
		Integer constructCastlingPiecesMovementTracker_294 = 0;
		Integer constructCastlingPiecesMovementTracker_379 = 0;
		Integer constructCastlingPiecesMovementTracker_155 = 0;
		Integer constructCastlingPiecesMovementTracker_307 = 0;
		Integer constructCastlingPiecesMovementTracker_489 = 0;
		Integer constructCastlingPiecesMovementTracker_206 = 0;
		Integer constructCastlingPiecesMovementTracker_317 = 0;
		Integer constructCastlingPiecesMovementTracker_27 = 0;
		Integer constructCastlingPiecesMovementTracker_24 = 0;
		Integer constructCastlingPiecesMovementTracker_149 = 0;
		Integer constructCastlingPiecesMovementTracker_534 = 0;
		Integer constructCastlingPiecesMovementTracker_163 = 0;
		Integer constructCastlingPiecesMovementTracker_338 = 0;
		Integer constructCastlingPiecesMovementTracker_75 = 0;
		Integer constructCastlingPiecesMovementTracker_100 = 0;
		Integer constructCastlingPiecesMovementTracker_71 = 0;
		Integer constructCastlingPiecesMovementTracker_335 = 0;
		Integer constructCastlingPiecesMovementTracker_496 = 0;
		Integer constructCastlingPiecesMovementTracker_413 = 0;
		Integer constructCastlingPiecesMovementTracker_156 = 0;
		Integer constructCastlingPiecesMovementTracker_205 = 0;
		Integer constructCastlingPiecesMovementTracker_270 = 0;
		Integer constructCastlingPiecesMovementTracker_92 = 0;
		Integer constructCastlingPiecesMovementTracker_67 = 0;
		Integer constructCastlingPiecesMovementTracker_406 = 0;
		Integer constructCastlingPiecesMovementTracker_388 = 0;
		Integer constructCastlingPiecesMovementTracker_424 = 0;
		Integer constructCastlingPiecesMovementTracker_343 = 0;
		Integer constructCastlingPiecesMovementTracker_395 = 0;
		Integer constructCastlingPiecesMovementTracker_426 = 0;
		Integer constructCastlingPiecesMovementTracker_161 = 0;
		Integer constructCastlingPiecesMovementTracker_272 = 0;
		Integer constructCastlingPiecesMovementTracker_193 = 0;
		Integer constructCastlingPiecesMovementTracker_447 = 0;
		Integer constructCastlingPiecesMovementTracker_304 = 0;
		Integer constructCastlingPiecesMovementTracker_15 = 0;
		Integer constructCastlingPiecesMovementTracker_134 = 0;
		Integer constructCastlingPiecesMovementTracker_107 = 0;
		Integer constructCastlingPiecesMovementTracker_348 = 0;
		Integer constructCastlingPiecesMovementTracker_14 = 0;
		Integer constructCastlingPiecesMovementTracker_497 = 0;
		Integer constructCastlingPiecesMovementTracker_195 = 0;
		Integer constructCastlingPiecesMovementTracker_95 = 0;
		Integer constructCastlingPiecesMovementTracker_117 = 0;
		Integer constructCastlingPiecesMovementTracker_251 = 0;
		Integer constructCastlingPiecesMovementTracker_39 = 0;
		Integer constructCastlingPiecesMovementTracker_103 = 0;
		Integer constructCastlingPiecesMovementTracker_13 = 0;
		Integer constructCastlingPiecesMovementTracker_201 = 0;
		Integer constructCastlingPiecesMovementTracker_96 = 0;
		Integer constructCastlingPiecesMovementTracker_18 = 0;
		Integer constructCastlingPiecesMovementTracker_264 = 0;
		Integer constructCastlingPiecesMovementTracker_493 = 0;
		Integer constructCastlingPiecesMovementTracker_70 = 0;
		Integer constructCastlingPiecesMovementTracker_498 = 0;
		Integer constructCastlingPiecesMovementTracker_428 = 0;
		Integer constructCastlingPiecesMovementTracker_204 = 0;
		Integer constructCastlingPiecesMovementTracker_401 = 0;
		Integer constructCastlingPiecesMovementTracker_518 = 0;
		Integer constructCastlingPiecesMovementTracker_214 = 0;
		Integer constructCastlingPiecesMovementTracker_267 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV4 = expression("chessBoard.chessPieces.table[(1) & ((chessBoard.chessPieces.table.length) - (1))].next.hash","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV2 = expression("chessBoard.chessPieces.table[(1) & ((chessBoard.chessPieces.table.length) - (1))].hash","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV8 = expression("chessBoard.chessPieces.table[(5) & ((chessBoard.chessPieces.table.length) - (1))].hash","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV6 = expression("chessBoard.chessPieces.table[(1) % (chessBoard.chessPieces.table.length)].next.hash","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV9 = expression("chessBoard.chessPieces.table[(5) % (chessBoard.chessPieces.table.length)].next.hash","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV5 = expression("chessBoard.chessPieces.table[(1) % (chessBoard.chessPieces.table.length)].hash","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV3 = expression("chessBoard.chessPieces.table[(5) % (chessBoard.chessPieces.table.length)].hash","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV7 = expression("chessBoard.chessPieces.table[(8) % (chessBoard.chessPieces.table.length)].hash","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV1 = expression("chessBoard.chessPieces.table.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;

		constructCastlingPiecesMovementTracker_159(constructCastlingPiecesMovementTracker_159, V1);
		constructCastlingPiecesMovementTracker_513(constructCastlingPiecesMovementTracker_513, V1);
		constructCastlingPiecesMovementTracker_280(constructCastlingPiecesMovementTracker_280, V1);
		constructCastlingPiecesMovementTracker_186(constructCastlingPiecesMovementTracker_186, V1);
		constructCastlingPiecesMovementTracker_327(constructCastlingPiecesMovementTracker_327, V1);
		constructCastlingPiecesMovementTracker_249(constructCastlingPiecesMovementTracker_249, V1);
		constructCastlingPiecesMovementTracker_320(constructCastlingPiecesMovementTracker_320, V1);
		constructCastlingPiecesMovementTracker_285(constructCastlingPiecesMovementTracker_285, V1);
		constructCastlingPiecesMovementTracker_295(constructCastlingPiecesMovementTracker_295, V1);
		constructCastlingPiecesMovementTracker_109(constructCastlingPiecesMovementTracker_109, V1);
		constructCastlingPiecesMovementTracker_394(constructCastlingPiecesMovementTracker_394, V1);
		constructCastlingPiecesMovementTracker_367(constructCastlingPiecesMovementTracker_367, V1);
		constructCastlingPiecesMovementTracker_30(constructCastlingPiecesMovementTracker_30, V1);
		constructCastlingPiecesMovementTracker_432(constructCastlingPiecesMovementTracker_432, V1);
		constructCastlingPiecesMovementTracker_391(constructCastlingPiecesMovementTracker_391, V1);
		constructCastlingPiecesMovementTracker_301(constructCastlingPiecesMovementTracker_301, V1);
		constructCastlingPiecesMovementTracker_140(constructCastlingPiecesMovementTracker_140, V1);
		constructCastlingPiecesMovementTracker_4(constructCastlingPiecesMovementTracker_4, V1, V2);
		constructCastlingPiecesMovementTracker_466(constructCastlingPiecesMovementTracker_466, V1);
		constructCastlingPiecesMovementTracker_102(constructCastlingPiecesMovementTracker_102, V1);
		constructCastlingPiecesMovementTracker_425(constructCastlingPiecesMovementTracker_425, V1);
		constructCastlingPiecesMovementTracker_376(constructCastlingPiecesMovementTracker_376, V1);
		constructCastlingPiecesMovementTracker_491(constructCastlingPiecesMovementTracker_491, V1);
		constructCastlingPiecesMovementTracker_449(constructCastlingPiecesMovementTracker_449, V1);
		constructCastlingPiecesMovementTracker_60(constructCastlingPiecesMovementTracker_60, V1);
		constructCastlingPiecesMovementTracker_490(constructCastlingPiecesMovementTracker_490, V1);
		constructCastlingPiecesMovementTracker_105(constructCastlingPiecesMovementTracker_105, V1);
		constructCastlingPiecesMovementTracker_192(constructCastlingPiecesMovementTracker_192, V1);
		constructCastlingPiecesMovementTracker_408(constructCastlingPiecesMovementTracker_408, V1);
		constructCastlingPiecesMovementTracker_467(constructCastlingPiecesMovementTracker_467, V1);
		constructCastlingPiecesMovementTracker_360(constructCastlingPiecesMovementTracker_360, V1);
		constructCastlingPiecesMovementTracker_487(constructCastlingPiecesMovementTracker_487, V1);
		constructCastlingPiecesMovementTracker_407(constructCastlingPiecesMovementTracker_407, V1);
		constructCastlingPiecesMovementTracker_106(constructCastlingPiecesMovementTracker_106, V1);
		constructCastlingPiecesMovementTracker_187(constructCastlingPiecesMovementTracker_187, V1);
		constructCastlingPiecesMovementTracker_8(constructCastlingPiecesMovementTracker_8, V1);
		constructCastlingPiecesMovementTracker_515(constructCastlingPiecesMovementTracker_515, V1);
		constructCastlingPiecesMovementTracker_131(constructCastlingPiecesMovementTracker_131, V1);
		constructCastlingPiecesMovementTracker_233(constructCastlingPiecesMovementTracker_233, V1);
		constructCastlingPiecesMovementTracker_127(constructCastlingPiecesMovementTracker_127, V1);
		constructCastlingPiecesMovementTracker_91(constructCastlingPiecesMovementTracker_91, V1, V3);
		constructCastlingPiecesMovementTracker_500(constructCastlingPiecesMovementTracker_500, V1);
		constructCastlingPiecesMovementTracker_126(constructCastlingPiecesMovementTracker_126, V1);
		constructCastlingPiecesMovementTracker_533(constructCastlingPiecesMovementTracker_533, V1);
		constructCastlingPiecesMovementTracker_334(constructCastlingPiecesMovementTracker_334, V1);
		constructCastlingPiecesMovementTracker_382(constructCastlingPiecesMovementTracker_382, V1);
		constructCastlingPiecesMovementTracker_488(constructCastlingPiecesMovementTracker_488, V1);
		constructCastlingPiecesMovementTracker_537(constructCastlingPiecesMovementTracker_537, V1);
		constructCastlingPiecesMovementTracker_42(constructCastlingPiecesMovementTracker_42, V1);
		constructCastlingPiecesMovementTracker_76(constructCastlingPiecesMovementTracker_76, V1);
		constructCastlingPiecesMovementTracker_381(constructCastlingPiecesMovementTracker_381, V1);
		constructCastlingPiecesMovementTracker_383(constructCastlingPiecesMovementTracker_383, V1);
		constructCastlingPiecesMovementTracker_146(constructCastlingPiecesMovementTracker_146, V1);
		constructCastlingPiecesMovementTracker_352(constructCastlingPiecesMovementTracker_352, V1);
		constructCastlingPiecesMovementTracker_415(constructCastlingPiecesMovementTracker_415, V1);
		constructCastlingPiecesMovementTracker_509(constructCastlingPiecesMovementTracker_509, V1);
		constructCastlingPiecesMovementTracker_247(constructCastlingPiecesMovementTracker_247, V1);
		constructCastlingPiecesMovementTracker_162(constructCastlingPiecesMovementTracker_162, V1);
		constructCastlingPiecesMovementTracker_410(constructCastlingPiecesMovementTracker_410, V1);
		constructCastlingPiecesMovementTracker_536(constructCastlingPiecesMovementTracker_536, V1);
		constructCastlingPiecesMovementTracker_128(constructCastlingPiecesMovementTracker_128, V1);
		constructCastlingPiecesMovementTracker_506(constructCastlingPiecesMovementTracker_506, V1);
		constructCastlingPiecesMovementTracker_387(constructCastlingPiecesMovementTracker_387, V1);
		constructCastlingPiecesMovementTracker_188(constructCastlingPiecesMovementTracker_188, V1);
		constructCastlingPiecesMovementTracker_444(constructCastlingPiecesMovementTracker_444, V1);
		constructCastlingPiecesMovementTracker_269(constructCastlingPiecesMovementTracker_269, V1);
		constructCastlingPiecesMovementTracker_242(constructCastlingPiecesMovementTracker_242, V1);
		constructCastlingPiecesMovementTracker_284(constructCastlingPiecesMovementTracker_284, V1);
		constructCastlingPiecesMovementTracker_521(constructCastlingPiecesMovementTracker_521, V1);
		constructCastlingPiecesMovementTracker_386(constructCastlingPiecesMovementTracker_386, V1);
		constructCastlingPiecesMovementTracker_221(constructCastlingPiecesMovementTracker_221, V1);
		constructCastlingPiecesMovementTracker_118(constructCastlingPiecesMovementTracker_118, V1);
		constructCastlingPiecesMovementTracker_133(constructCastlingPiecesMovementTracker_133, V1);
		constructCastlingPiecesMovementTracker_430(constructCastlingPiecesMovementTracker_430, V1);
		constructCastlingPiecesMovementTracker_316(constructCastlingPiecesMovementTracker_316, V1);
		constructCastlingPiecesMovementTracker_474(constructCastlingPiecesMovementTracker_474, V1);
		constructCastlingPiecesMovementTracker_484(constructCastlingPiecesMovementTracker_484, V1);
		constructCastlingPiecesMovementTracker_44(constructCastlingPiecesMovementTracker_44, V1);
		constructCastlingPiecesMovementTracker_328(constructCastlingPiecesMovementTracker_328, V1);
		constructCastlingPiecesMovementTracker_297(constructCastlingPiecesMovementTracker_297, V1);
		constructCastlingPiecesMovementTracker_378(constructCastlingPiecesMovementTracker_378, V1);
		constructCastlingPiecesMovementTracker_219(constructCastlingPiecesMovementTracker_219, V1);
		constructCastlingPiecesMovementTracker_492(constructCastlingPiecesMovementTracker_492, V1);
		constructCastlingPiecesMovementTracker_68(constructCastlingPiecesMovementTracker_68, V1);
		constructCastlingPiecesMovementTracker_332(constructCastlingPiecesMovementTracker_332, V1);
		constructCastlingPiecesMovementTracker_185(constructCastlingPiecesMovementTracker_185, V1);
		constructCastlingPiecesMovementTracker_196(constructCastlingPiecesMovementTracker_196, V1);
		constructCastlingPiecesMovementTracker_346(constructCastlingPiecesMovementTracker_346, V1);
		constructCastlingPiecesMovementTracker_411(constructCastlingPiecesMovementTracker_411, V1);
		constructCastlingPiecesMovementTracker_111(constructCastlingPiecesMovementTracker_111, V1);
		constructCastlingPiecesMovementTracker_356(constructCastlingPiecesMovementTracker_356, V1);
		constructCastlingPiecesMovementTracker_171(constructCastlingPiecesMovementTracker_171, V1);
		constructCastlingPiecesMovementTracker_252(constructCastlingPiecesMovementTracker_252, V1);
		constructCastlingPiecesMovementTracker_389(constructCastlingPiecesMovementTracker_389, V1);
		constructCastlingPiecesMovementTracker_63(constructCastlingPiecesMovementTracker_63, V1);
		constructCastlingPiecesMovementTracker_178(constructCastlingPiecesMovementTracker_178, V1);
		constructCastlingPiecesMovementTracker_483(constructCastlingPiecesMovementTracker_483, V1);
		constructCastlingPiecesMovementTracker_478(constructCastlingPiecesMovementTracker_478, V1);
		constructCastlingPiecesMovementTracker_323(constructCastlingPiecesMovementTracker_323, V1);
		constructCastlingPiecesMovementTracker_485(constructCastlingPiecesMovementTracker_485, V1);
		constructCastlingPiecesMovementTracker_17(constructCastlingPiecesMovementTracker_17, V1);
		constructCastlingPiecesMovementTracker_450(constructCastlingPiecesMovementTracker_450, V1);
		constructCastlingPiecesMovementTracker_108(constructCastlingPiecesMovementTracker_108, V1);
		constructCastlingPiecesMovementTracker_373(constructCastlingPiecesMovementTracker_373, V1);
		constructCastlingPiecesMovementTracker_144(constructCastlingPiecesMovementTracker_144, V1);
		constructCastlingPiecesMovementTracker_61(constructCastlingPiecesMovementTracker_61, V1);
		constructCastlingPiecesMovementTracker_277(constructCastlingPiecesMovementTracker_277, V1);
		constructCastlingPiecesMovementTracker_315(constructCastlingPiecesMovementTracker_315, V1);
		constructCastlingPiecesMovementTracker_250(constructCastlingPiecesMovementTracker_250, V1);
		constructCastlingPiecesMovementTracker_326(constructCastlingPiecesMovementTracker_326, V1);
		constructCastlingPiecesMovementTracker_253(constructCastlingPiecesMovementTracker_253, V1);
		constructCastlingPiecesMovementTracker_313(constructCastlingPiecesMovementTracker_313, V1);
		constructCastlingPiecesMovementTracker_364(constructCastlingPiecesMovementTracker_364, V1);
		constructCastlingPiecesMovementTracker_311(constructCastlingPiecesMovementTracker_311, V1);
		constructCastlingPiecesMovementTracker_330(constructCastlingPiecesMovementTracker_330, V1);
		constructCastlingPiecesMovementTracker_114(constructCastlingPiecesMovementTracker_114, V1);
		constructCastlingPiecesMovementTracker_538(constructCastlingPiecesMovementTracker_538, V1);
		constructCastlingPiecesMovementTracker_276(constructCastlingPiecesMovementTracker_276, V1);
		constructCastlingPiecesMovementTracker_52(constructCastlingPiecesMovementTracker_52, V1);
		constructCastlingPiecesMovementTracker_104(constructCastlingPiecesMovementTracker_104, V1);
		constructCastlingPiecesMovementTracker_2(constructCastlingPiecesMovementTracker_2, V1, V2, V4);
		constructCastlingPiecesMovementTracker_184(constructCastlingPiecesMovementTracker_184, V1);
		constructCastlingPiecesMovementTracker_77(constructCastlingPiecesMovementTracker_77, V1);
		constructCastlingPiecesMovementTracker_365(constructCastlingPiecesMovementTracker_365, V1);
		constructCastlingPiecesMovementTracker_291(constructCastlingPiecesMovementTracker_291, V1);
		constructCastlingPiecesMovementTracker_202(constructCastlingPiecesMovementTracker_202, V1);
		constructCastlingPiecesMovementTracker_191(constructCastlingPiecesMovementTracker_191, V1);
		constructCastlingPiecesMovementTracker_231(constructCastlingPiecesMovementTracker_231, V1);
		constructCastlingPiecesMovementTracker_211(constructCastlingPiecesMovementTracker_211, V1);
		constructCastlingPiecesMovementTracker_481(constructCastlingPiecesMovementTracker_481, V1);
		constructCastlingPiecesMovementTracker_397(constructCastlingPiecesMovementTracker_397, V1);
		constructCastlingPiecesMovementTracker_390(constructCastlingPiecesMovementTracker_390, V1);
		constructCastlingPiecesMovementTracker_463(constructCastlingPiecesMovementTracker_463, V1);
		constructCastlingPiecesMovementTracker_475(constructCastlingPiecesMovementTracker_475, V1);
		constructCastlingPiecesMovementTracker_385(constructCastlingPiecesMovementTracker_385, V1);
		constructCastlingPiecesMovementTracker_529(constructCastlingPiecesMovementTracker_529, V1);
		constructCastlingPiecesMovementTracker_65(constructCastlingPiecesMovementTracker_65, V1);
		constructCastlingPiecesMovementTracker_271(constructCastlingPiecesMovementTracker_271, V1);
		constructCastlingPiecesMovementTracker_419(constructCastlingPiecesMovementTracker_419, V1);
		constructCastlingPiecesMovementTracker_445(constructCastlingPiecesMovementTracker_445, V1);
		constructCastlingPiecesMovementTracker_213(constructCastlingPiecesMovementTracker_213, V1);
		constructCastlingPiecesMovementTracker_256(constructCastlingPiecesMovementTracker_256, V1);
		constructCastlingPiecesMovementTracker_87(constructCastlingPiecesMovementTracker_87, V1, V5);
		constructCastlingPiecesMovementTracker_225(constructCastlingPiecesMovementTracker_225, V1);
		constructCastlingPiecesMovementTracker_460(constructCastlingPiecesMovementTracker_460, V1);
		constructCastlingPiecesMovementTracker_115(constructCastlingPiecesMovementTracker_115, V1);
		constructCastlingPiecesMovementTracker_152(constructCastlingPiecesMovementTracker_152, V1);
		constructCastlingPiecesMovementTracker_289(constructCastlingPiecesMovementTracker_289, V1);
		constructCastlingPiecesMovementTracker_142(constructCastlingPiecesMovementTracker_142, V1);
		constructCastlingPiecesMovementTracker_439(constructCastlingPiecesMovementTracker_439, V1);
		constructCastlingPiecesMovementTracker_342(constructCastlingPiecesMovementTracker_342, V1);
		constructCastlingPiecesMovementTracker_290(constructCastlingPiecesMovementTracker_290, V1);
		constructCastlingPiecesMovementTracker_339(constructCastlingPiecesMovementTracker_339, V1);
		constructCastlingPiecesMovementTracker_525(constructCastlingPiecesMovementTracker_525, V1);
		constructCastlingPiecesMovementTracker_173(constructCastlingPiecesMovementTracker_173, V1);
		constructCastlingPiecesMovementTracker_224(constructCastlingPiecesMovementTracker_224, V1);
		constructCastlingPiecesMovementTracker_377(constructCastlingPiecesMovementTracker_377, V1);
		constructCastlingPiecesMovementTracker_246(constructCastlingPiecesMovementTracker_246, V1);
		constructCastlingPiecesMovementTracker_384(constructCastlingPiecesMovementTracker_384, V1);
		constructCastlingPiecesMovementTracker_220(constructCastlingPiecesMovementTracker_220, V1);
		constructCastlingPiecesMovementTracker_298(constructCastlingPiecesMovementTracker_298, V1);
		constructCastlingPiecesMovementTracker_310(constructCastlingPiecesMovementTracker_310, V1);
		constructCastlingPiecesMovementTracker_57(constructCastlingPiecesMovementTracker_57, V1);
		constructCastlingPiecesMovementTracker_45(constructCastlingPiecesMovementTracker_45, V1);
		constructCastlingPiecesMovementTracker_164(constructCastlingPiecesMovementTracker_164, V1);
		constructCastlingPiecesMovementTracker_274(constructCastlingPiecesMovementTracker_274, V1);
		constructCastlingPiecesMovementTracker_136(constructCastlingPiecesMovementTracker_136, V1);
		constructCastlingPiecesMovementTracker_531(constructCastlingPiecesMovementTracker_531, V1);
		constructCastlingPiecesMovementTracker_97(constructCastlingPiecesMovementTracker_97, V1);
		constructCastlingPiecesMovementTracker_80(constructCastlingPiecesMovementTracker_80, V1);
		constructCastlingPiecesMovementTracker_88(constructCastlingPiecesMovementTracker_88, V1, V3, V5);
		constructCastlingPiecesMovementTracker_232(constructCastlingPiecesMovementTracker_232, V1);
		constructCastlingPiecesMovementTracker_26(constructCastlingPiecesMovementTracker_26, V1);
		constructCastlingPiecesMovementTracker_261(constructCastlingPiecesMovementTracker_261, V1);
		constructCastlingPiecesMovementTracker_234(constructCastlingPiecesMovementTracker_234, V1);
		constructCastlingPiecesMovementTracker_120(constructCastlingPiecesMovementTracker_120, V1);
		constructCastlingPiecesMovementTracker_528(constructCastlingPiecesMovementTracker_528, V1);
		constructCastlingPiecesMovementTracker_438(constructCastlingPiecesMovementTracker_438, V1);
		constructCastlingPiecesMovementTracker_33(constructCastlingPiecesMovementTracker_33, V1);
		constructCastlingPiecesMovementTracker_143(constructCastlingPiecesMovementTracker_143, V1);
		constructCastlingPiecesMovementTracker_258(constructCastlingPiecesMovementTracker_258, V1);
		constructCastlingPiecesMovementTracker_442(constructCastlingPiecesMovementTracker_442, V1);
		constructCastlingPiecesMovementTracker_89(constructCastlingPiecesMovementTracker_89, V1, V3);
		constructCastlingPiecesMovementTracker_198(constructCastlingPiecesMovementTracker_198, V1);
		constructCastlingPiecesMovementTracker_458(constructCastlingPiecesMovementTracker_458, V1);
		constructCastlingPiecesMovementTracker_510(constructCastlingPiecesMovementTracker_510, V1);
		constructCastlingPiecesMovementTracker_9(constructCastlingPiecesMovementTracker_9, V1);
		constructCastlingPiecesMovementTracker_370(constructCastlingPiecesMovementTracker_370, V1);
		constructCastlingPiecesMovementTracker_476(constructCastlingPiecesMovementTracker_476, V1);
		constructCastlingPiecesMovementTracker_5(constructCastlingPiecesMovementTracker_5, V1, V2);
		constructCastlingPiecesMovementTracker_147(constructCastlingPiecesMovementTracker_147, V1);
		constructCastlingPiecesMovementTracker_306(constructCastlingPiecesMovementTracker_306, V1);
		constructCastlingPiecesMovementTracker_190(constructCastlingPiecesMovementTracker_190, V1);
		constructCastlingPiecesMovementTracker_420(constructCastlingPiecesMovementTracker_420, V1);
		constructCastlingPiecesMovementTracker_318(constructCastlingPiecesMovementTracker_318, V1);
		constructCastlingPiecesMovementTracker_305(constructCastlingPiecesMovementTracker_305, V1);
		constructCastlingPiecesMovementTracker_74(constructCastlingPiecesMovementTracker_74, V1);
		constructCastlingPiecesMovementTracker_112(constructCastlingPiecesMovementTracker_112, V1);
		constructCastlingPiecesMovementTracker_43(constructCastlingPiecesMovementTracker_43, V1);
		constructCastlingPiecesMovementTracker_176(constructCastlingPiecesMovementTracker_176, V1);
		constructCastlingPiecesMovementTracker_392(constructCastlingPiecesMovementTracker_392, V1);
		constructCastlingPiecesMovementTracker_20(constructCastlingPiecesMovementTracker_20, V1);
		constructCastlingPiecesMovementTracker_433(constructCastlingPiecesMovementTracker_433, V1);
		constructCastlingPiecesMovementTracker_520(constructCastlingPiecesMovementTracker_520, V1);
		constructCastlingPiecesMovementTracker_402(constructCastlingPiecesMovementTracker_402, V1);
		constructCastlingPiecesMovementTracker_499(constructCastlingPiecesMovementTracker_499, V1);
		constructCastlingPiecesMovementTracker_505(constructCastlingPiecesMovementTracker_505, V1);
		constructCastlingPiecesMovementTracker_10(constructCastlingPiecesMovementTracker_10, V1);
		constructCastlingPiecesMovementTracker_340(constructCastlingPiecesMovementTracker_340, V1);
		constructCastlingPiecesMovementTracker_494(constructCastlingPiecesMovementTracker_494, V1);
		constructCastlingPiecesMovementTracker_53(constructCastlingPiecesMovementTracker_53, V1);
		constructCastlingPiecesMovementTracker_199(constructCastlingPiecesMovementTracker_199, V1);
		constructCastlingPiecesMovementTracker_49(constructCastlingPiecesMovementTracker_49, V1);
		constructCastlingPiecesMovementTracker_218(constructCastlingPiecesMovementTracker_218, V1);
		constructCastlingPiecesMovementTracker_353(constructCastlingPiecesMovementTracker_353, V1);
		constructCastlingPiecesMovementTracker_254(constructCastlingPiecesMovementTracker_254, V1);
		constructCastlingPiecesMovementTracker_257(constructCastlingPiecesMovementTracker_257, V1);
		constructCastlingPiecesMovementTracker_512(constructCastlingPiecesMovementTracker_512, V1);
		constructCastlingPiecesMovementTracker_464(constructCastlingPiecesMovementTracker_464, V1);
		constructCastlingPiecesMovementTracker_532(constructCastlingPiecesMovementTracker_532, V1);
		constructCastlingPiecesMovementTracker_12(constructCastlingPiecesMovementTracker_12, V1);
		constructCastlingPiecesMovementTracker_459(constructCastlingPiecesMovementTracker_459, V1);
		constructCastlingPiecesMovementTracker_123(constructCastlingPiecesMovementTracker_123, V1);
		constructCastlingPiecesMovementTracker_333(constructCastlingPiecesMovementTracker_333, V1);
		constructCastlingPiecesMovementTracker_69(constructCastlingPiecesMovementTracker_69, V1);
		constructCastlingPiecesMovementTracker_116(constructCastlingPiecesMovementTracker_116, V1);
		constructCastlingPiecesMovementTracker_380(constructCastlingPiecesMovementTracker_380, V1);
		constructCastlingPiecesMovementTracker_423(constructCastlingPiecesMovementTracker_423, V1);
		constructCastlingPiecesMovementTracker_322(constructCastlingPiecesMovementTracker_322, V1);
		constructCastlingPiecesMovementTracker_273(constructCastlingPiecesMovementTracker_273, V1);
		constructCastlingPiecesMovementTracker_517(constructCastlingPiecesMovementTracker_517, V1);
		constructCastlingPiecesMovementTracker_227(constructCastlingPiecesMovementTracker_227, V1);
		constructCastlingPiecesMovementTracker_223(constructCastlingPiecesMovementTracker_223, V1);
		constructCastlingPiecesMovementTracker_182(constructCastlingPiecesMovementTracker_182, V1);
		constructCastlingPiecesMovementTracker_405(constructCastlingPiecesMovementTracker_405, V1);
		constructCastlingPiecesMovementTracker_238(constructCastlingPiecesMovementTracker_238, V1);
		constructCastlingPiecesMovementTracker_23(constructCastlingPiecesMovementTracker_23, V1);
		constructCastlingPiecesMovementTracker_508(constructCastlingPiecesMovementTracker_508, V1);
		constructCastlingPiecesMovementTracker_230(constructCastlingPiecesMovementTracker_230, V1);
		constructCastlingPiecesMovementTracker_357(constructCastlingPiecesMovementTracker_357, V1);
		constructCastlingPiecesMovementTracker_345(constructCastlingPiecesMovementTracker_345, V1);
		constructCastlingPiecesMovementTracker_181(constructCastlingPiecesMovementTracker_181, V1);
		constructCastlingPiecesMovementTracker_347(constructCastlingPiecesMovementTracker_347, V1);
		constructCastlingPiecesMovementTracker_455(constructCastlingPiecesMovementTracker_455, V1);
		constructCastlingPiecesMovementTracker_519(constructCastlingPiecesMovementTracker_519, V1);
		constructCastlingPiecesMovementTracker_462(constructCastlingPiecesMovementTracker_462, V1);
		constructCastlingPiecesMovementTracker_48(constructCastlingPiecesMovementTracker_48, V1);
		constructCastlingPiecesMovementTracker_279(constructCastlingPiecesMovementTracker_279, V1);
		constructCastlingPiecesMovementTracker_321(constructCastlingPiecesMovementTracker_321, V1);
		constructCastlingPiecesMovementTracker_235(constructCastlingPiecesMovementTracker_235, V1);
		constructCastlingPiecesMovementTracker_228(constructCastlingPiecesMovementTracker_228, V1);
		constructCastlingPiecesMovementTracker_263(constructCastlingPiecesMovementTracker_263, V1);
		constructCastlingPiecesMovementTracker_314(constructCastlingPiecesMovementTracker_314, V1);
		constructCastlingPiecesMovementTracker_189(constructCastlingPiecesMovementTracker_189, V1);
		constructCastlingPiecesMovementTracker_19(constructCastlingPiecesMovementTracker_19, V1);
		constructCastlingPiecesMovementTracker_362(constructCastlingPiecesMovementTracker_362, V1);
		constructCastlingPiecesMovementTracker_38(constructCastlingPiecesMovementTracker_38, V1);
		constructCastlingPiecesMovementTracker_293(constructCastlingPiecesMovementTracker_293, V1);
		constructCastlingPiecesMovementTracker_308(constructCastlingPiecesMovementTracker_308, V1);
		constructCastlingPiecesMovementTracker_443(constructCastlingPiecesMovementTracker_443, V1);
		constructCastlingPiecesMovementTracker_86(constructCastlingPiecesMovementTracker_86, V6, V1, V5);
		constructCastlingPiecesMovementTracker_355(constructCastlingPiecesMovementTracker_355, V1);
		constructCastlingPiecesMovementTracker_58(constructCastlingPiecesMovementTracker_58, V1);
		constructCastlingPiecesMovementTracker_243(constructCastlingPiecesMovementTracker_243, V1);
		constructCastlingPiecesMovementTracker_16(constructCastlingPiecesMovementTracker_16, V1);
		constructCastlingPiecesMovementTracker_168(constructCastlingPiecesMovementTracker_168, V1);
		constructCastlingPiecesMovementTracker_477(constructCastlingPiecesMovementTracker_477, V1);
		constructCastlingPiecesMovementTracker_125(constructCastlingPiecesMovementTracker_125, V1);
		constructCastlingPiecesMovementTracker_177(constructCastlingPiecesMovementTracker_177, V1);
		constructCastlingPiecesMovementTracker_40(constructCastlingPiecesMovementTracker_40, V1);
		constructCastlingPiecesMovementTracker_262(constructCastlingPiecesMovementTracker_262, V1);
		constructCastlingPiecesMovementTracker_472(constructCastlingPiecesMovementTracker_472, V1);
		constructCastlingPiecesMovementTracker_22(constructCastlingPiecesMovementTracker_22, V1);
		constructCastlingPiecesMovementTracker_414(constructCastlingPiecesMovementTracker_414, V1);
		constructCastlingPiecesMovementTracker_124(constructCastlingPiecesMovementTracker_124, V1);
		constructCastlingPiecesMovementTracker_451(constructCastlingPiecesMovementTracker_451, V1);
		constructCastlingPiecesMovementTracker_207(constructCastlingPiecesMovementTracker_207, V1);
		constructCastlingPiecesMovementTracker_170(constructCastlingPiecesMovementTracker_170, V1);
		constructCastlingPiecesMovementTracker_172(constructCastlingPiecesMovementTracker_172, V1);
		constructCastlingPiecesMovementTracker_359(constructCastlingPiecesMovementTracker_359, V1);
		constructCastlingPiecesMovementTracker_435(constructCastlingPiecesMovementTracker_435, V1);
		constructCastlingPiecesMovementTracker_452(constructCastlingPiecesMovementTracker_452, V1);
		constructCastlingPiecesMovementTracker_145(constructCastlingPiecesMovementTracker_145, V1);
		constructCastlingPiecesMovementTracker_331(constructCastlingPiecesMovementTracker_331, V1);
		constructCastlingPiecesMovementTracker_429(constructCastlingPiecesMovementTracker_429, V1);
		constructCastlingPiecesMovementTracker_51(constructCastlingPiecesMovementTracker_51, V1);
		constructCastlingPiecesMovementTracker_237(constructCastlingPiecesMovementTracker_237, V1);
		constructCastlingPiecesMovementTracker_511(constructCastlingPiecesMovementTracker_511, V1);
		constructCastlingPiecesMovementTracker_157(constructCastlingPiecesMovementTracker_157, V1);
		constructCastlingPiecesMovementTracker_222(constructCastlingPiecesMovementTracker_222, V1);
		constructCastlingPiecesMovementTracker_288(constructCastlingPiecesMovementTracker_288, V1);
		constructCastlingPiecesMovementTracker_78(constructCastlingPiecesMovementTracker_78, V1);
		constructCastlingPiecesMovementTracker_319(constructCastlingPiecesMovementTracker_319, V1);
		constructCastlingPiecesMovementTracker_516(constructCastlingPiecesMovementTracker_516, V1);
		constructCastlingPiecesMovementTracker_28(constructCastlingPiecesMovementTracker_28, V1);
		constructCastlingPiecesMovementTracker_85(constructCastlingPiecesMovementTracker_85, V1, V5);
		constructCastlingPiecesMovementTracker_351(constructCastlingPiecesMovementTracker_351, V1);
		constructCastlingPiecesMovementTracker_302(constructCastlingPiecesMovementTracker_302, V1);
		constructCastlingPiecesMovementTracker_446(constructCastlingPiecesMovementTracker_446, V1);
		constructCastlingPiecesMovementTracker_62(constructCastlingPiecesMovementTracker_62, V1);
		constructCastlingPiecesMovementTracker_130(constructCastlingPiecesMovementTracker_130, V7, V1);
		constructCastlingPiecesMovementTracker_448(constructCastlingPiecesMovementTracker_448, V1);
		constructCastlingPiecesMovementTracker_336(constructCastlingPiecesMovementTracker_336, V1);
		constructCastlingPiecesMovementTracker_241(constructCastlingPiecesMovementTracker_241, V1);
		constructCastlingPiecesMovementTracker_153(constructCastlingPiecesMovementTracker_153, V1);
		constructCastlingPiecesMovementTracker_113(constructCastlingPiecesMovementTracker_113, V1);
		constructCastlingPiecesMovementTracker_416(constructCastlingPiecesMovementTracker_416, V1);
		constructCastlingPiecesMovementTracker_437(constructCastlingPiecesMovementTracker_437, V1);
		constructCastlingPiecesMovementTracker_154(constructCastlingPiecesMovementTracker_154, V1);
		constructCastlingPiecesMovementTracker_260(constructCastlingPiecesMovementTracker_260, V1);
		constructCastlingPiecesMovementTracker_119(constructCastlingPiecesMovementTracker_119, V1);
		constructCastlingPiecesMovementTracker_139(constructCastlingPiecesMovementTracker_139, V1);
		constructCastlingPiecesMovementTracker_350(constructCastlingPiecesMovementTracker_350, V1);
		constructCastlingPiecesMovementTracker_507(constructCastlingPiecesMovementTracker_507, V1);
		constructCastlingPiecesMovementTracker_148(constructCastlingPiecesMovementTracker_148, V1);
		constructCastlingPiecesMovementTracker_465(constructCastlingPiecesMovementTracker_465, V1);
		constructCastlingPiecesMovementTracker_32(constructCastlingPiecesMovementTracker_32, V1);
		constructCastlingPiecesMovementTracker_287(constructCastlingPiecesMovementTracker_287, V1);
		constructCastlingPiecesMovementTracker_469(constructCastlingPiecesMovementTracker_469, V1);
		constructCastlingPiecesMovementTracker_150(constructCastlingPiecesMovementTracker_150, V1);
		constructCastlingPiecesMovementTracker_6(constructCastlingPiecesMovementTracker_6, V8, V1);
		constructCastlingPiecesMovementTracker_292(constructCastlingPiecesMovementTracker_292, V1);
		constructCastlingPiecesMovementTracker_72(constructCastlingPiecesMovementTracker_72, V1);
		constructCastlingPiecesMovementTracker_456(constructCastlingPiecesMovementTracker_456, V1);
		constructCastlingPiecesMovementTracker_215(constructCastlingPiecesMovementTracker_215, V1);
		constructCastlingPiecesMovementTracker_46(constructCastlingPiecesMovementTracker_46, V1);
		constructCastlingPiecesMovementTracker_83(constructCastlingPiecesMovementTracker_83, V1);
		constructCastlingPiecesMovementTracker_454(constructCastlingPiecesMovementTracker_454, V1);
		constructCastlingPiecesMovementTracker_344(constructCastlingPiecesMovementTracker_344, V1);
		constructCastlingPiecesMovementTracker_94(constructCastlingPiecesMovementTracker_94, V1);
		constructCastlingPiecesMovementTracker_361(constructCastlingPiecesMovementTracker_361, V1);
		constructCastlingPiecesMovementTracker_453(constructCastlingPiecesMovementTracker_453, V1);
		constructCastlingPiecesMovementTracker_255(constructCastlingPiecesMovementTracker_255, V1);
		constructCastlingPiecesMovementTracker_281(constructCastlingPiecesMovementTracker_281, V1);
		constructCastlingPiecesMovementTracker_34(constructCastlingPiecesMovementTracker_34, V1);
		constructCastlingPiecesMovementTracker_151(constructCastlingPiecesMovementTracker_151, V1);
		constructCastlingPiecesMovementTracker_183(constructCastlingPiecesMovementTracker_183, V1);
		constructCastlingPiecesMovementTracker_209(constructCastlingPiecesMovementTracker_209, V1);
		constructCastlingPiecesMovementTracker_138(constructCastlingPiecesMovementTracker_138, V1);
		constructCastlingPiecesMovementTracker_84(constructCastlingPiecesMovementTracker_84, V6, V1, V5);
		constructCastlingPiecesMovementTracker_539(constructCastlingPiecesMovementTracker_539, V1);
		constructCastlingPiecesMovementTracker_412(constructCastlingPiecesMovementTracker_412, V1);
		constructCastlingPiecesMovementTracker_296(constructCastlingPiecesMovementTracker_296, V1);
		constructCastlingPiecesMovementTracker_502(constructCastlingPiecesMovementTracker_502, V1);
		constructCastlingPiecesMovementTracker_59(constructCastlingPiecesMovementTracker_59, V1);
		constructCastlingPiecesMovementTracker_160(constructCastlingPiecesMovementTracker_160, V1);
		constructCastlingPiecesMovementTracker_137(constructCastlingPiecesMovementTracker_137, V1);
		constructCastlingPiecesMovementTracker_479(constructCastlingPiecesMovementTracker_479, V1);
		constructCastlingPiecesMovementTracker_480(constructCastlingPiecesMovementTracker_480, V1);
		constructCastlingPiecesMovementTracker_54(constructCastlingPiecesMovementTracker_54, V1);
		constructCastlingPiecesMovementTracker_99(constructCastlingPiecesMovementTracker_99, V1);
		constructCastlingPiecesMovementTracker_482(constructCastlingPiecesMovementTracker_482, V1);
		constructCastlingPiecesMovementTracker_300(constructCastlingPiecesMovementTracker_300, V1);
		constructCastlingPiecesMovementTracker_312(constructCastlingPiecesMovementTracker_312, V1);
		constructCastlingPiecesMovementTracker_486(constructCastlingPiecesMovementTracker_486, V1);
		constructCastlingPiecesMovementTracker_259(constructCastlingPiecesMovementTracker_259, V1);
		constructCastlingPiecesMovementTracker_3(constructCastlingPiecesMovementTracker_3, V1, V2);
		constructCastlingPiecesMovementTracker_286(constructCastlingPiecesMovementTracker_286, V1);
		constructCastlingPiecesMovementTracker_303(constructCastlingPiecesMovementTracker_303, V1);
		constructCastlingPiecesMovementTracker_441(constructCastlingPiecesMovementTracker_441, V1);
		constructCastlingPiecesMovementTracker_337(constructCastlingPiecesMovementTracker_337, V1);
		constructCastlingPiecesMovementTracker_434(constructCastlingPiecesMovementTracker_434, V1);
		constructCastlingPiecesMovementTracker_473(constructCastlingPiecesMovementTracker_473, V1);
		constructCastlingPiecesMovementTracker_169(constructCastlingPiecesMovementTracker_169, V1);
		constructCastlingPiecesMovementTracker_245(constructCastlingPiecesMovementTracker_245, V1);
		constructCastlingPiecesMovementTracker_417(constructCastlingPiecesMovementTracker_417, V1);
		constructCastlingPiecesMovementTracker_349(constructCastlingPiecesMovementTracker_349, V1);
		constructCastlingPiecesMovementTracker_200(constructCastlingPiecesMovementTracker_200, V1);
		constructCastlingPiecesMovementTracker_398(constructCastlingPiecesMovementTracker_398, V1);
		constructCastlingPiecesMovementTracker_37(constructCastlingPiecesMovementTracker_37, V1);
		constructCastlingPiecesMovementTracker_240(constructCastlingPiecesMovementTracker_240, V1);
		constructCastlingPiecesMovementTracker_132(constructCastlingPiecesMovementTracker_132, V1);
		constructCastlingPiecesMovementTracker_374(constructCastlingPiecesMovementTracker_374, V1);
		constructCastlingPiecesMovementTracker_440(constructCastlingPiecesMovementTracker_440, V1);
		constructCastlingPiecesMovementTracker_457(constructCastlingPiecesMovementTracker_457, V1);
		constructCastlingPiecesMovementTracker_31(constructCastlingPiecesMovementTracker_31, V1);
		constructCastlingPiecesMovementTracker_121(constructCastlingPiecesMovementTracker_121, V1);
		constructCastlingPiecesMovementTracker_90(constructCastlingPiecesMovementTracker_90, V9, V1, V3);
		constructCastlingPiecesMovementTracker_501(constructCastlingPiecesMovementTracker_501, V1);
		constructCastlingPiecesMovementTracker_372(constructCastlingPiecesMovementTracker_372, V1);
		constructCastlingPiecesMovementTracker_1(constructCastlingPiecesMovementTracker_1, V1, V2);
		constructCastlingPiecesMovementTracker_50(constructCastlingPiecesMovementTracker_50, V1);
		constructCastlingPiecesMovementTracker_523(constructCastlingPiecesMovementTracker_523, V1);
		constructCastlingPiecesMovementTracker_110(constructCastlingPiecesMovementTracker_110, V1);
		constructCastlingPiecesMovementTracker_325(constructCastlingPiecesMovementTracker_325, V1);
		constructCastlingPiecesMovementTracker_341(constructCastlingPiecesMovementTracker_341, V1);
		constructCastlingPiecesMovementTracker_358(constructCastlingPiecesMovementTracker_358, V1);
		constructCastlingPiecesMovementTracker_64(constructCastlingPiecesMovementTracker_64, V1);
		constructCastlingPiecesMovementTracker_101(constructCastlingPiecesMovementTracker_101, V1);
		constructCastlingPiecesMovementTracker_324(constructCastlingPiecesMovementTracker_324, V1);
		constructCastlingPiecesMovementTracker_129(constructCastlingPiecesMovementTracker_129, V1);
		constructCastlingPiecesMovementTracker_495(constructCastlingPiecesMovementTracker_495, V1);
		constructCastlingPiecesMovementTracker_522(constructCastlingPiecesMovementTracker_522, V1);
		constructCastlingPiecesMovementTracker_265(constructCastlingPiecesMovementTracker_265, V1);
		constructCastlingPiecesMovementTracker_278(constructCastlingPiecesMovementTracker_278, V1);
		constructCastlingPiecesMovementTracker_504(constructCastlingPiecesMovementTracker_504, V1);
		constructCastlingPiecesMovementTracker_436(constructCastlingPiecesMovementTracker_436, V1);
		constructCastlingPiecesMovementTracker_404(constructCastlingPiecesMovementTracker_404, V1);
		constructCastlingPiecesMovementTracker_180(constructCastlingPiecesMovementTracker_180, V1);
		constructCastlingPiecesMovementTracker_526(constructCastlingPiecesMovementTracker_526, V1);
		constructCastlingPiecesMovementTracker_167(constructCastlingPiecesMovementTracker_167, V1);
		constructCastlingPiecesMovementTracker_236(constructCastlingPiecesMovementTracker_236, V1);
		constructCastlingPiecesMovementTracker_41(constructCastlingPiecesMovementTracker_41, V1);
		constructCastlingPiecesMovementTracker_0(constructCastlingPiecesMovementTracker_0, V1, V2);
		constructCastlingPiecesMovementTracker_239(constructCastlingPiecesMovementTracker_239, V1);
		constructCastlingPiecesMovementTracker_400(constructCastlingPiecesMovementTracker_400, V1);
		constructCastlingPiecesMovementTracker_122(constructCastlingPiecesMovementTracker_122, V1);
		constructCastlingPiecesMovementTracker_55(constructCastlingPiecesMovementTracker_55, V1);
		constructCastlingPiecesMovementTracker_354(constructCastlingPiecesMovementTracker_354, V1);
		constructCastlingPiecesMovementTracker_535(constructCastlingPiecesMovementTracker_535, V1);
		constructCastlingPiecesMovementTracker_266(constructCastlingPiecesMovementTracker_266, V1);
		constructCastlingPiecesMovementTracker_363(constructCastlingPiecesMovementTracker_363, V1);
		constructCastlingPiecesMovementTracker_175(constructCastlingPiecesMovementTracker_175, V1);
		constructCastlingPiecesMovementTracker_166(constructCastlingPiecesMovementTracker_166, V1);
		constructCastlingPiecesMovementTracker_217(constructCastlingPiecesMovementTracker_217, V1);
		constructCastlingPiecesMovementTracker_244(constructCastlingPiecesMovementTracker_244, V1);
		constructCastlingPiecesMovementTracker_431(constructCastlingPiecesMovementTracker_431, V1);
		constructCastlingPiecesMovementTracker_35(constructCastlingPiecesMovementTracker_35, V1);
		constructCastlingPiecesMovementTracker_524(constructCastlingPiecesMovementTracker_524, V1);
		constructCastlingPiecesMovementTracker_366(constructCastlingPiecesMovementTracker_366, V1);
		constructCastlingPiecesMovementTracker_371(constructCastlingPiecesMovementTracker_371, V1);
		constructCastlingPiecesMovementTracker_194(constructCastlingPiecesMovementTracker_194, V1);
		constructCastlingPiecesMovementTracker_25(constructCastlingPiecesMovementTracker_25, V1);
		constructCastlingPiecesMovementTracker_56(constructCastlingPiecesMovementTracker_56, V1);
		constructCastlingPiecesMovementTracker_197(constructCastlingPiecesMovementTracker_197, V1);
		constructCastlingPiecesMovementTracker_468(constructCastlingPiecesMovementTracker_468, V1);
		constructCastlingPiecesMovementTracker_248(constructCastlingPiecesMovementTracker_248, V1);
		constructCastlingPiecesMovementTracker_208(constructCastlingPiecesMovementTracker_208, V1);
		constructCastlingPiecesMovementTracker_275(constructCastlingPiecesMovementTracker_275, V1);
		constructCastlingPiecesMovementTracker_375(constructCastlingPiecesMovementTracker_375, V1);
		constructCastlingPiecesMovementTracker_268(constructCastlingPiecesMovementTracker_268, V1);
		constructCastlingPiecesMovementTracker_158(constructCastlingPiecesMovementTracker_158, V1);
		constructCastlingPiecesMovementTracker_66(constructCastlingPiecesMovementTracker_66, V1);
		constructCastlingPiecesMovementTracker_79(constructCastlingPiecesMovementTracker_79, V1);
		constructCastlingPiecesMovementTracker_396(constructCastlingPiecesMovementTracker_396, V1);
		constructCastlingPiecesMovementTracker_471(constructCastlingPiecesMovementTracker_471, V1);
		constructCastlingPiecesMovementTracker_11(constructCastlingPiecesMovementTracker_11, V1);
		constructCastlingPiecesMovementTracker_135(constructCastlingPiecesMovementTracker_135, V1);
		constructCastlingPiecesMovementTracker_165(constructCastlingPiecesMovementTracker_165, V1);
		constructCastlingPiecesMovementTracker_427(constructCastlingPiecesMovementTracker_427, V1);
		constructCastlingPiecesMovementTracker_422(constructCastlingPiecesMovementTracker_422, V1);
		constructCastlingPiecesMovementTracker_503(constructCastlingPiecesMovementTracker_503, V1);
		constructCastlingPiecesMovementTracker_399(constructCastlingPiecesMovementTracker_399, V1);
		constructCastlingPiecesMovementTracker_36(constructCastlingPiecesMovementTracker_36, V1);
		constructCastlingPiecesMovementTracker_82(constructCastlingPiecesMovementTracker_82, V1);
		constructCastlingPiecesMovementTracker_210(constructCastlingPiecesMovementTracker_210, V1);
		constructCastlingPiecesMovementTracker_141(constructCastlingPiecesMovementTracker_141, V1);
		constructCastlingPiecesMovementTracker_403(constructCastlingPiecesMovementTracker_403, V1);
		constructCastlingPiecesMovementTracker_21(constructCastlingPiecesMovementTracker_21, V1);
		constructCastlingPiecesMovementTracker_98(constructCastlingPiecesMovementTracker_98, V1);
		constructCastlingPiecesMovementTracker_81(constructCastlingPiecesMovementTracker_81, V1);
		constructCastlingPiecesMovementTracker_309(constructCastlingPiecesMovementTracker_309, V1);
		constructCastlingPiecesMovementTracker_29(constructCastlingPiecesMovementTracker_29, V1);
		constructCastlingPiecesMovementTracker_421(constructCastlingPiecesMovementTracker_421, V1);
		constructCastlingPiecesMovementTracker_73(constructCastlingPiecesMovementTracker_73, V1);
		constructCastlingPiecesMovementTracker_329(constructCastlingPiecesMovementTracker_329, V1);
		constructCastlingPiecesMovementTracker_527(constructCastlingPiecesMovementTracker_527, V1);
		constructCastlingPiecesMovementTracker_368(constructCastlingPiecesMovementTracker_368, V1);
		constructCastlingPiecesMovementTracker_212(constructCastlingPiecesMovementTracker_212, V1);
		constructCastlingPiecesMovementTracker_93(constructCastlingPiecesMovementTracker_93, V1);
		constructCastlingPiecesMovementTracker_179(constructCastlingPiecesMovementTracker_179, V1);
		constructCastlingPiecesMovementTracker_461(constructCastlingPiecesMovementTracker_461, V1);
		constructCastlingPiecesMovementTracker_393(constructCastlingPiecesMovementTracker_393, V1);
		constructCastlingPiecesMovementTracker_47(constructCastlingPiecesMovementTracker_47, V1);
		constructCastlingPiecesMovementTracker_229(constructCastlingPiecesMovementTracker_229, V1);
		constructCastlingPiecesMovementTracker_282(constructCastlingPiecesMovementTracker_282, V1);
		constructCastlingPiecesMovementTracker_409(constructCastlingPiecesMovementTracker_409, V1);
		constructCastlingPiecesMovementTracker_470(constructCastlingPiecesMovementTracker_470, V1);
		constructCastlingPiecesMovementTracker_299(constructCastlingPiecesMovementTracker_299, V1);
		constructCastlingPiecesMovementTracker_418(constructCastlingPiecesMovementTracker_418, V1);
		constructCastlingPiecesMovementTracker_530(constructCastlingPiecesMovementTracker_530, V1);
		constructCastlingPiecesMovementTracker_216(constructCastlingPiecesMovementTracker_216, V1);
		constructCastlingPiecesMovementTracker_514(constructCastlingPiecesMovementTracker_514, V1);
		constructCastlingPiecesMovementTracker_7(constructCastlingPiecesMovementTracker_7, V8, V1);
		constructCastlingPiecesMovementTracker_226(constructCastlingPiecesMovementTracker_226, V1);
		constructCastlingPiecesMovementTracker_174(constructCastlingPiecesMovementTracker_174, V1);
		constructCastlingPiecesMovementTracker_203(constructCastlingPiecesMovementTracker_203, V1);
		constructCastlingPiecesMovementTracker_283(constructCastlingPiecesMovementTracker_283, V1);
		constructCastlingPiecesMovementTracker_369(constructCastlingPiecesMovementTracker_369, V1);
		constructCastlingPiecesMovementTracker_294(constructCastlingPiecesMovementTracker_294, V1);
		constructCastlingPiecesMovementTracker_379(constructCastlingPiecesMovementTracker_379, V1);
		constructCastlingPiecesMovementTracker_155(constructCastlingPiecesMovementTracker_155, V1);
		constructCastlingPiecesMovementTracker_307(constructCastlingPiecesMovementTracker_307, V1);
		constructCastlingPiecesMovementTracker_489(constructCastlingPiecesMovementTracker_489, V1);
		constructCastlingPiecesMovementTracker_206(constructCastlingPiecesMovementTracker_206, V1);
		constructCastlingPiecesMovementTracker_317(constructCastlingPiecesMovementTracker_317, V1);
		constructCastlingPiecesMovementTracker_27(constructCastlingPiecesMovementTracker_27, V1);
		constructCastlingPiecesMovementTracker_24(constructCastlingPiecesMovementTracker_24, V1);
		constructCastlingPiecesMovementTracker_149(constructCastlingPiecesMovementTracker_149, V1);
		constructCastlingPiecesMovementTracker_534(constructCastlingPiecesMovementTracker_534, V1);
		constructCastlingPiecesMovementTracker_163(constructCastlingPiecesMovementTracker_163, V1);
		constructCastlingPiecesMovementTracker_338(constructCastlingPiecesMovementTracker_338, V1);
		constructCastlingPiecesMovementTracker_75(constructCastlingPiecesMovementTracker_75, V1);
		constructCastlingPiecesMovementTracker_100(constructCastlingPiecesMovementTracker_100, V1);
		constructCastlingPiecesMovementTracker_71(constructCastlingPiecesMovementTracker_71, V1);
		constructCastlingPiecesMovementTracker_335(constructCastlingPiecesMovementTracker_335, V1);
		constructCastlingPiecesMovementTracker_496(constructCastlingPiecesMovementTracker_496, V1);
		constructCastlingPiecesMovementTracker_413(constructCastlingPiecesMovementTracker_413, V1);
		constructCastlingPiecesMovementTracker_156(constructCastlingPiecesMovementTracker_156, V1);
		constructCastlingPiecesMovementTracker_205(constructCastlingPiecesMovementTracker_205, V1);
		constructCastlingPiecesMovementTracker_270(constructCastlingPiecesMovementTracker_270, V1);
		constructCastlingPiecesMovementTracker_92(constructCastlingPiecesMovementTracker_92, V7, V1);
		constructCastlingPiecesMovementTracker_67(constructCastlingPiecesMovementTracker_67, V1);
		constructCastlingPiecesMovementTracker_406(constructCastlingPiecesMovementTracker_406, V1);
		constructCastlingPiecesMovementTracker_388(constructCastlingPiecesMovementTracker_388, V1);
		constructCastlingPiecesMovementTracker_424(constructCastlingPiecesMovementTracker_424, V1);
		constructCastlingPiecesMovementTracker_343(constructCastlingPiecesMovementTracker_343, V1);
		constructCastlingPiecesMovementTracker_395(constructCastlingPiecesMovementTracker_395, V1);
		constructCastlingPiecesMovementTracker_426(constructCastlingPiecesMovementTracker_426, V1);
		constructCastlingPiecesMovementTracker_161(constructCastlingPiecesMovementTracker_161, V1);
		constructCastlingPiecesMovementTracker_272(constructCastlingPiecesMovementTracker_272, V1);
		constructCastlingPiecesMovementTracker_193(constructCastlingPiecesMovementTracker_193, V1);
		constructCastlingPiecesMovementTracker_447(constructCastlingPiecesMovementTracker_447, V1);
		constructCastlingPiecesMovementTracker_304(constructCastlingPiecesMovementTracker_304, V1);
		constructCastlingPiecesMovementTracker_15(constructCastlingPiecesMovementTracker_15, V1);
		constructCastlingPiecesMovementTracker_134(constructCastlingPiecesMovementTracker_134, V1);
		constructCastlingPiecesMovementTracker_107(constructCastlingPiecesMovementTracker_107, V1);
		constructCastlingPiecesMovementTracker_348(constructCastlingPiecesMovementTracker_348, V1);
		constructCastlingPiecesMovementTracker_14(constructCastlingPiecesMovementTracker_14, V1);
		constructCastlingPiecesMovementTracker_497(constructCastlingPiecesMovementTracker_497, V1);
		constructCastlingPiecesMovementTracker_195(constructCastlingPiecesMovementTracker_195, V1);
		constructCastlingPiecesMovementTracker_95(constructCastlingPiecesMovementTracker_95, V1);
		constructCastlingPiecesMovementTracker_117(constructCastlingPiecesMovementTracker_117, V1);
		constructCastlingPiecesMovementTracker_251(constructCastlingPiecesMovementTracker_251, V1);
		constructCastlingPiecesMovementTracker_39(constructCastlingPiecesMovementTracker_39, V1);
		constructCastlingPiecesMovementTracker_103(constructCastlingPiecesMovementTracker_103, V1);
		constructCastlingPiecesMovementTracker_13(constructCastlingPiecesMovementTracker_13, V1);
		constructCastlingPiecesMovementTracker_201(constructCastlingPiecesMovementTracker_201, V1);
		constructCastlingPiecesMovementTracker_96(constructCastlingPiecesMovementTracker_96, V1);
		constructCastlingPiecesMovementTracker_18(constructCastlingPiecesMovementTracker_18, V1);
		constructCastlingPiecesMovementTracker_264(constructCastlingPiecesMovementTracker_264, V1);
		constructCastlingPiecesMovementTracker_493(constructCastlingPiecesMovementTracker_493, V1);
		constructCastlingPiecesMovementTracker_70(constructCastlingPiecesMovementTracker_70, V1);
		constructCastlingPiecesMovementTracker_498(constructCastlingPiecesMovementTracker_498, V1);
		constructCastlingPiecesMovementTracker_428(constructCastlingPiecesMovementTracker_428, V1);
		constructCastlingPiecesMovementTracker_204(constructCastlingPiecesMovementTracker_204, V1);
		constructCastlingPiecesMovementTracker_401(constructCastlingPiecesMovementTracker_401, V1);
		constructCastlingPiecesMovementTracker_518(constructCastlingPiecesMovementTracker_518, V1);
		constructCastlingPiecesMovementTracker_214(constructCastlingPiecesMovementTracker_214, V1);
		constructCastlingPiecesMovementTracker_267(constructCastlingPiecesMovementTracker_267, V1);
				} 
			}
		currentObject = null;
	}

	private void constructCastlingPiecesMovementTracker_159(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_159";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) != (-2043122136 & V1 - 1) && (-1384083894 & V1 - 1) != 0 && (257645664 & V1 - 1) >= 0 && (257645664 & V1 - 1) < V1 && (257645664 & V1 - 1) == 0 && (257645664 & V1 - 1) != (-1384083894 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_513(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_513";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_280(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_280";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1237038928 & V1 - 1) >= 0 && (-1237038928 & V1 - 1) < V1 && (-1237038928 & V1 - 1) == (-26585344 & V1 - 1) && (-1237038928 & V1 - 1) != (-1378069120 & V1 - 1) && (-1237038928 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_186(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_186";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_327(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_327";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_249(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_249";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-615381968 & V1 - 1) >= 0 && (-615381968 & V1 - 1) < V1 && (-615381968 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_320(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_320";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-1378069120 & V1 - 1) && (1818518090 & V1 - 1) >= 0 && (1818518090 & V1 - 1) < V1 && (1818518090 & V1 - 1) == (-2043122136 & V1 - 1) && (1818518090 & V1 - 1) != (-26585344 & V1 - 1) && (1818518090 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_285(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_285";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (1369083856 & V1 - 1) && (-938819242 & V1 - 1) >= 0 && (-938819242 & V1 - 1) < V1 && (-938819242 & V1 - 1) == (-2043122136 & V1 - 1) && (-938819242 & V1 - 1) != (-26585344 & V1 - 1) && (-938819242 & V1 - 1) != (-1378069120 & V1 - 1) && (-938819242 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_295(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_295";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) != (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_109(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_109";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_394(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_394";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) != (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (1403590186 & V1 - 1) >= 0 && (1403590186 & V1 - 1) < V1 && (1403590186 & V1 - 1) == (-1198890088 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_367(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_367";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_30(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_30";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_432(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_432";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) != (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (1541897204 & V1 - 1) >= 0 && (1541897204 & V1 - 1) < V1 && (1541897204 & V1 - 1) == (-26585344 & V1 - 1) && (1541897204 & V1 - 1) != (683362920 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_391(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_391";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_301(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_301";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-1814293712 & V1 - 1) >= 0 && (-1814293712 & V1 - 1) < V1 && (-1814293712 & V1 - 1) != (-2043122136 & V1 - 1) && (-1814293712 & V1 - 1) != (-26585344 & V1 - 1) && (-1814293712 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_140(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_140";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_4(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingPiecesMovementTracker_4";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && V2 != 1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_466(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_466";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) != (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) >= 0 && (61481926 & V1 - 1) < V1 && (61481926 & V1 - 1) == (-2043122136 & V1 - 1) && (61481926 & V1 - 1) != (867302602 & V1 - 1) && (61481926 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) != (-1319274672 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_102(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_102";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_425(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_425";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (1749220880 & V1 - 1) && (-919636872 & V1 - 1) >= 0 && (-919636872 & V1 - 1) < V1 && (-919636872 & V1 - 1) == (-2043122136 & V1 - 1) && (-919636872 & V1 - 1) != (-26585344 & V1 - 1) && (-919636872 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_376(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_376";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (2123915888 & V1 - 1) && (1748073536 & V1 - 1) >= 0 && (1748073536 & V1 - 1) < V1 && (1748073536 & V1 - 1) == (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_491(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_491";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (-2029121872 & V1 - 1) >= 0 && (-2029121872 & V1 - 1) < V1 && (-2029121872 & V1 - 1) != (-2043122136 & V1 - 1) && (-2029121872 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_449(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_449";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (855079646 & V1 - 1) >= 0 && (855079646 & V1 - 1) < V1 && (855079646 & V1 - 1) != (-2043122136 & V1 - 1) && (855079646 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_60(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_60";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_490(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_490";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) != (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_105(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_105";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_192(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_192";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) == 0 && (839389292 & V1 - 1) >= 0 && (839389292 & V1 - 1) < V1 && (839389292 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_408(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_408";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) != (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) >= 0 && (-249920736 & V1 - 1) < V1 && (-249920736 & V1 - 1) != (-2043122136 & V1 - 1) && (-249920736 & V1 - 1) != (-26585344 & V1 - 1) && (-249920736 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) != (-780691482 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_467(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_467";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) != (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) >= 0 && (61481926 & V1 - 1) < V1 && (61481926 & V1 - 1) == (388958728 & V1 - 1) && (61481926 & V1 - 1) != (-1319274672 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_360(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_360";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) != (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) >= 0 && (1219231764 & V1 - 1) < V1 && (1219231764 & V1 - 1) == (-26585344 & V1 - 1) && (1219231764 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) != (-189924166 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_487(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_487";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) != (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (1016097912 & V1 - 1) >= 0 && (1016097912 & V1 - 1) < V1 && (1016097912 & V1 - 1) == (-2043122136 & V1 - 1) && (1016097912 & V1 - 1) != (867302602 & V1 - 1) && (1016097912 & V1 - 1) != (190184342 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_407(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_407";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_106(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_106";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_187(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_187";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) != (-2043122136 & V1 - 1) && (-766618030 & V1 - 1) != 0 && (25969706 & V1 - 1) >= 0 && (25969706 & V1 - 1) < V1 && (25969706 & V1 - 1) != (-2043122136 & V1 - 1) && (25969706 & V1 - 1) != 0 && (25969706 & V1 - 1) != (-766618030 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_8(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_8";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_515(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_515";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-522666294 & V1 - 1) >= 0 && (-522666294 & V1 - 1) < V1 && (-522666294 & V1 - 1) != (-2043122136 & V1 - 1) && (-522666294 & V1 - 1) != (790449556 & V1 - 1) && (-522666294 & V1 - 1) != (768140076 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_131(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_131";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_233(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_233";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1121692102 & V1 - 1) >= 0 && (-1121692102 & V1 - 1) < V1 && (-1121692102 & V1 - 1) == (-2043122136 & V1 - 1) && (-1121692102 & V1 - 1) != (-26585344 & V1 - 1) && (-1121692102 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_127(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_127";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_91(Integer count, Integer V1, Integer V3) {

		String pathCondition = "constructCastlingPiecesMovementTracker_91";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && V3 != 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_500(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_500";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) != (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-366248966 & V1 - 1) >= 0 && (-366248966 & V1 - 1) < V1 && (-366248966 & V1 - 1) != (-2043122136 & V1 - 1) && (-366248966 & V1 - 1) != (867302602 & V1 - 1) && (-366248966 & V1 - 1) != (1026602966 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_126(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_126";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_533(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_533";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) == (-2043122136 & V1 - 1) && (1730193304 & V1 - 1) >= 0 && (1730193304 & V1 - 1) < V1 && (1730193304 & V1 - 1) != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_334(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_334";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) != (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) >= 0 && (-1732203968 & V1 - 1) < V1 && (-1732203968 & V1 - 1) != (-2043122136 & V1 - 1) && (-1732203968 & V1 - 1) != (-26585344 & V1 - 1) && (-1732203968 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) != (-1350853018 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_382(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_382";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) != (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (1592994622 & V1 - 1) >= 0 && (1592994622 & V1 - 1) < V1 && (1592994622 & V1 - 1) == (-26585344 & V1 - 1) && (1592994622 & V1 - 1) != (-1881691332 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_488(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_488";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) != (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (1016097912 & V1 - 1) >= 0 && (1016097912 & V1 - 1) < V1 && (1016097912 & V1 - 1) == (190184342 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_537(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_537";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_42(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_42";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_76(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_76";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_381(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_381";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) != (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (1592994622 & V1 - 1) >= 0 && (1592994622 & V1 - 1) < V1 && (1592994622 & V1 - 1) == (-2043122136 & V1 - 1) && (1592994622 & V1 - 1) != (-26585344 & V1 - 1) && (1592994622 & V1 - 1) != (-1881691332 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_383(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_383";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) != (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_146(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_146";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-2043122136 & V1 - 1) + 2 + 2 < V1 && (-2043122136 & V1 - 1) + 2 + 2 >= 0 && (-2043122136 & V1 - 1) + 2 + 2 < V1 && (-2043122136 & V1 - 1) + 2 + 2 != (-2043122136 & V1 - 1) && (-2043122136 & V1 - 1) + 2 + 2 != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_352(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_352";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1376697826 & V1 - 1) >= 0 && (-1376697826 & V1 - 1) < V1 && (-1376697826 & V1 - 1) == (-2043122136 & V1 - 1) && (-1376697826 & V1 - 1) != (-26585344 & V1 - 1) && (-1376697826 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_415(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_415";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (1105022520 & V1 - 1) >= 0 && (1105022520 & V1 - 1) < V1 && (1105022520 & V1 - 1) == (-2043122136 & V1 - 1) && (1105022520 & V1 - 1) != (-26585344 & V1 - 1) && (1105022520 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_509(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_509";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (867302602 & V1 - 1) && (-77861228 & V1 - 1) >= 0 && (-77861228 & V1 - 1) < V1 && (-77861228 & V1 - 1) != (-2043122136 & V1 - 1) && (-77861228 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_247(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_247";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-615381968 & V1 - 1) >= 0 && (-615381968 & V1 - 1) < V1 && (-615381968 & V1 - 1) != (-2043122136 & V1 - 1) && (-615381968 & V1 - 1) != (-26585344 & V1 - 1) && (-615381968 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_162(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_162";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) == 0 && (-1825862350 & V1 - 1) >= 0 && (-1825862350 & V1 - 1) < V1 && (-1825862350 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_410(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_410";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) != (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) >= 0 && (-249920736 & V1 - 1) < V1 && (-249920736 & V1 - 1) == (-26585344 & V1 - 1) && (-249920736 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) != (-780691482 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_536(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_536";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_128(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_128";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_506(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_506";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-212093370 & V1 - 1) >= 0 && (-212093370 & V1 - 1) < V1 && (-212093370 & V1 - 1) == (-2043122136 & V1 - 1) && (-212093370 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_387(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_387";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_188(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_188";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) != (-2043122136 & V1 - 1) && (-766618030 & V1 - 1) != 0 && (25969706 & V1 - 1) >= 0 && (25969706 & V1 - 1) < V1 && (25969706 & V1 - 1) == (-766618030 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_444(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_444";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) != (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) >= 0 && (-1007074134 & V1 - 1) < V1 && (-1007074134 & V1 - 1) != (-2043122136 & V1 - 1) && (-1007074134 & V1 - 1) != (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) != (-670707220 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_269(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_269";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-91481742 & V1 - 1) >= 0 && (-91481742 & V1 - 1) < V1 && (-91481742 & V1 - 1) == (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_242(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_242";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (1622899848 & V1 - 1) >= 0 && (1622899848 & V1 - 1) < V1 && (1622899848 & V1 - 1) != (-2043122136 & V1 - 1) && (1622899848 & V1 - 1) != (-26585344 & V1 - 1) && (1622899848 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_284(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_284";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (1369083856 & V1 - 1) && (-938819242 & V1 - 1) >= 0 && (-938819242 & V1 - 1) < V1 && (-938819242 & V1 - 1) == (-1378069120 & V1 - 1) && (-938819242 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_521(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_521";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-127976284 & V1 - 1) >= 0 && (-127976284 & V1 - 1) < V1 && (-127976284 & V1 - 1) == (-2043122136 & V1 - 1) && (-127976284 & V1 - 1) != (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_386(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_386";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (21973658 & V1 - 1) >= 0 && (21973658 & V1 - 1) < V1 && (21973658 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_221(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_221";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_118(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_118";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_133(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_133";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_430(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_430";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) != (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (1541897204 & V1 - 1) >= 0 && (1541897204 & V1 - 1) < V1 && (1541897204 & V1 - 1) != (-2043122136 & V1 - 1) && (1541897204 & V1 - 1) != (-26585344 & V1 - 1) && (1541897204 & V1 - 1) != (683362920 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_316(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_316";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) != (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) >= 0 && (393750070 & V1 - 1) < V1 && (393750070 & V1 - 1) == (1074640908 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_474(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_474";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_484(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_484";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_44(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_44";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_328(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_328";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (588526062 & V1 - 1) >= 0 && (588526062 & V1 - 1) < V1 && (588526062 & V1 - 1) != (-2043122136 & V1 - 1) && (588526062 & V1 - 1) != (-26585344 & V1 - 1) && (588526062 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_297(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_297";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-1378069120 & V1 - 1) && (53101694 & V1 - 1) >= 0 && (53101694 & V1 - 1) < V1 && (53101694 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_378(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_378";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_219(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_219";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-1523087692 & V1 - 1) >= 0 && (-1523087692 & V1 - 1) < V1 && (-1523087692 & V1 - 1) != (-2043122136 & V1 - 1) && (-1523087692 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_492(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_492";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (-2029121872 & V1 - 1) >= 0 && (-2029121872 & V1 - 1) < V1 && (-2029121872 & V1 - 1) == (-2043122136 & V1 - 1) && (-2029121872 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_68(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_68";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_332(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_332";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_185(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_185";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (1696258710 & V1 - 1) >= 0 && (1696258710 & V1 - 1) < V1 && (1696258710 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_196(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_196";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (2001338476 & V1 - 1) >= 0 && (2001338476 & V1 - 1) < V1 && (2001338476 & V1 - 1) == (-63324968 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_346(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_346";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (1027648782 & V1 - 1) >= 0 && (1027648782 & V1 - 1) < V1 && (1027648782 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_411(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_411";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) != (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) >= 0 && (-249920736 & V1 - 1) < V1 && (-249920736 & V1 - 1) == (-780691482 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_111(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_111";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_356(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_356";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_171(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_171";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (168716064 & V1 - 1) >= 0 && (168716064 & V1 - 1) < V1 && (168716064 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_252(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_252";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 < V1 && (-1378069120 & V1 - 1) + 2 >= 0 && (-1378069120 & V1 - 1) + 2 < V1 && (-1378069120 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_389(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_389";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-26585344 & V1 - 1) && (-17082328 & V1 - 1) >= 0 && (-17082328 & V1 - 1) < V1 && (-17082328 & V1 - 1) == (-2043122136 & V1 - 1) && (-17082328 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_63(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_63";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_178(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_178";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) == 0 && (1506194480 & V1 - 1) >= 0 && (1506194480 & V1 - 1) < V1 && (1506194480 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_483(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_483";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (1215777424 & V1 - 1) >= 0 && (1215777424 & V1 - 1) < V1 && (1215777424 & V1 - 1) == (867302602 & V1 - 1) && (1215777424 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_478(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_478";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (388958728 & V1 - 1) && (1950465912 & V1 - 1) >= 0 && (1950465912 & V1 - 1) < V1 && (1950465912 & V1 - 1) == (867302602 & V1 - 1) && (1950465912 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_323(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_323";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (1065500072 & V1 - 1) >= 0 && (1065500072 & V1 - 1) < V1 && (1065500072 & V1 - 1) != (-2043122136 & V1 - 1) && (1065500072 & V1 - 1) != (-26585344 & V1 - 1) && (1065500072 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_485(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_485";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_17(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_17";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_450(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_450";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (855079646 & V1 - 1) >= 0 && (855079646 & V1 - 1) < V1 && (855079646 & V1 - 1) == (-2043122136 & V1 - 1) && (855079646 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_108(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_108";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_373(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_373";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (2123915888 & V1 - 1) && (1748073536 & V1 - 1) >= 0 && (1748073536 & V1 - 1) < V1 && (1748073536 & V1 - 1) != (-2043122136 & V1 - 1) && (1748073536 & V1 - 1) != (-26585344 & V1 - 1) && (1748073536 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_144(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_144";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_61(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_61";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_277(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_277";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1237038928 & V1 - 1) >= 0 && (-1237038928 & V1 - 1) < V1 && (-1237038928 & V1 - 1) != (-2043122136 & V1 - 1) && (-1237038928 & V1 - 1) != (-26585344 & V1 - 1) && (-1237038928 & V1 - 1) != (-1378069120 & V1 - 1) && (-1237038928 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_315(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_315";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) != (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) >= 0 && (393750070 & V1 - 1) < V1 && (393750070 & V1 - 1) == (-26585344 & V1 - 1) && (393750070 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) != (1074640908 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_250(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_250";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-517655510 & V1 - 1) >= 0 && (-517655510 & V1 - 1) < V1 && (-517655510 & V1 - 1) != (-2043122136 & V1 - 1) && (-517655510 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_326(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_326";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (1065500072 & V1 - 1) >= 0 && (1065500072 & V1 - 1) < V1 && (1065500072 & V1 - 1) == (-26585344 & V1 - 1) && (1065500072 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_253(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_253";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 < V1 && (-1378069120 & V1 - 1) + 2 >= 0 && (-1378069120 & V1 - 1) + 2 < V1 && (-1378069120 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_313(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_313";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) != (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) >= 0 && (393750070 & V1 - 1) < V1 && (393750070 & V1 - 1) == (-1378069120 & V1 - 1) && (393750070 & V1 - 1) != (1074640908 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_364(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_364";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (-1783599656 & V1 - 1) >= 0 && (-1783599656 & V1 - 1) < V1 && (-1783599656 & V1 - 1) == (-2043122136 & V1 - 1) && (-1783599656 & V1 - 1) != (-26585344 & V1 - 1) && (-1783599656 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_311(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_311";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_330(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_330";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (588526062 & V1 - 1) >= 0 && (588526062 & V1 - 1) < V1 && (588526062 & V1 - 1) == (-2043122136 & V1 - 1) && (588526062 & V1 - 1) != (-26585344 & V1 - 1) && (588526062 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_114(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_114";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_538(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_538";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_276(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_276";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_52(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_52";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_104(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_104";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_2(Integer count, Integer V1, Integer V2, Integer V4) {

		String pathCondition = "constructCastlingPiecesMovementTracker_2";

		if(V1 == null || V2 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && V2 != 1 && V4 != 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_184(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_184";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (1696258710 & V1 - 1) >= 0 && (1696258710 & V1 - 1) < V1 && (1696258710 & V1 - 1) != (-2043122136 & V1 - 1) && (1696258710 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_77(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_77";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_365(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_365";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (-1783599656 & V1 - 1) >= 0 && (-1783599656 & V1 - 1) < V1 && (-1783599656 & V1 - 1) == (-26585344 & V1 - 1) && (-1783599656 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_291(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_291";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) != (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) >= 0 && (-499430018 & V1 - 1) < V1 && (-499430018 & V1 - 1) == (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) != (-650453762 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_202(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_202";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) != (-2043122136 & V1 - 1) && (807110086 & V1 - 1) != 0 && (1462166448 & V1 - 1) >= 0 && (1462166448 & V1 - 1) < V1 && (1462166448 & V1 - 1) == (807110086 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_191(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_191";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) == 0 && (839389292 & V1 - 1) >= 0 && (839389292 & V1 - 1) < V1 && (839389292 & V1 - 1) != (-2043122136 & V1 - 1) && (839389292 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_231(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_231";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-545860970 & V1 - 1) >= 0 && (-545860970 & V1 - 1) < V1 && (-545860970 & V1 - 1) == (-2043122136 & V1 - 1) && (-545860970 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_211(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_211";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_481(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_481";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (1215777424 & V1 - 1) >= 0 && (1215777424 & V1 - 1) < V1 && (1215777424 & V1 - 1) == (-2043122136 & V1 - 1) && (1215777424 & V1 - 1) != (867302602 & V1 - 1) && (1215777424 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_397(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_397";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) != (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_390(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_390";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-26585344 & V1 - 1) && (-17082328 & V1 - 1) >= 0 && (-17082328 & V1 - 1) < V1 && (-17082328 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_463(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_463";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (867302602 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (867302602 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_475(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_475";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (388958728 & V1 - 1) && (1950465912 & V1 - 1) >= 0 && (1950465912 & V1 - 1) < V1 && (1950465912 & V1 - 1) != (-2043122136 & V1 - 1) && (1950465912 & V1 - 1) != (867302602 & V1 - 1) && (1950465912 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_385(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_385";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (21973658 & V1 - 1) >= 0 && (21973658 & V1 - 1) < V1 && (21973658 & V1 - 1) == (-2043122136 & V1 - 1) && (21973658 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_529(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_529";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) != (-2043122136 & V1 - 1) && (-30365670 & V1 - 1) >= 0 && (-30365670 & V1 - 1) < V1 && (-30365670 & V1 - 1) != (-2043122136 & V1 - 1) && (-30365670 & V1 - 1) != (-2064656670 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_65(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_65";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_271(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_271";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (130291670 & V1 - 1) >= 0 && (130291670 & V1 - 1) < V1 && (130291670 & V1 - 1) != (-2043122136 & V1 - 1) && (130291670 & V1 - 1) != (-26585344 & V1 - 1) && (130291670 & V1 - 1) != (-1378069120 & V1 - 1) && (130291670 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_419(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_419";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-788963522 & V1 - 1) >= 0 && (-788963522 & V1 - 1) < V1 && (-788963522 & V1 - 1) != (-2043122136 & V1 - 1) && (-788963522 & V1 - 1) != (-26585344 & V1 - 1) && (-788963522 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_445(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_445";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) != (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) >= 0 && (-1007074134 & V1 - 1) < V1 && (-1007074134 & V1 - 1) == (-2043122136 & V1 - 1) && (-1007074134 & V1 - 1) != (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) != (-670707220 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_213(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_213";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (609711206 & V1 - 1) >= 0 && (609711206 & V1 - 1) < V1 && (609711206 & V1 - 1) == (-2043122136 & V1 - 1) && (609711206 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_256(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_256";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-1378069120 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_87(Integer count, Integer V1, Integer V5) {

		String pathCondition = "constructCastlingPiecesMovementTracker_87";

		if(V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && V5 != 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_225(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_225";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (299596634 & V1 - 1) >= 0 && (299596634 & V1 - 1) < V1 && (299596634 & V1 - 1) != (-2043122136 & V1 - 1) && (299596634 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_460(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_460";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (867302602 & V1 - 1) + 2 < V1 && (867302602 & V1 - 1) + 2 >= 0 && (867302602 & V1 - 1) + 2 < V1 && (867302602 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (867302602 & V1 - 1) + 2 != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_115(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_115";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_152(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_152";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (-858695418 & V1 - 1) >= 0 && (-858695418 & V1 - 1) < V1 && (-858695418 & V1 - 1) != (-2043122136 & V1 - 1) && (-858695418 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_289(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_289";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_142(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_142";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_439(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_439";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-26585344 & V1 - 1) && (1438161388 & V1 - 1) >= 0 && (1438161388 & V1 - 1) < V1 && (1438161388 & V1 - 1) != (-2043122136 & V1 - 1) && (1438161388 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_342(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_342";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-1378069120 & V1 - 1) && (-1968556050 & V1 - 1) >= 0 && (-1968556050 & V1 - 1) < V1 && (-1968556050 & V1 - 1) == (-2043122136 & V1 - 1) && (-1968556050 & V1 - 1) != (-26585344 & V1 - 1) && (-1968556050 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_290(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_290";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) != (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) >= 0 && (-499430018 & V1 - 1) < V1 && (-499430018 & V1 - 1) != (-2043122136 & V1 - 1) && (-499430018 & V1 - 1) != (-26585344 & V1 - 1) && (-499430018 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) != (-650453762 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_339(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_339";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) != (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_525(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_525";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (790449556 & V1 - 1) && (1027417976 & V1 - 1) >= 0 && (1027417976 & V1 - 1) < V1 && (1027417976 & V1 - 1) == (-2043122136 & V1 - 1) && (1027417976 & V1 - 1) != (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_173(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_173";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) != (-2043122136 & V1 - 1) && (-624921178 & V1 - 1) != 0 && (1631587046 & V1 - 1) >= 0 && (1631587046 & V1 - 1) < V1 && (1631587046 & V1 - 1) != (-2043122136 & V1 - 1) && (1631587046 & V1 - 1) != 0 && (1631587046 & V1 - 1) != (-624921178 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_224(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_224";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1745793282 & V1 - 1) >= 0 && (-1745793282 & V1 - 1) < V1 && (-1745793282 & V1 - 1) == (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_377(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_377";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_246(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_246";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (1118706044 & V1 - 1) >= 0 && (1118706044 & V1 - 1) < V1 && (1118706044 & V1 - 1) == (-2043122136 & V1 - 1) && (1118706044 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_384(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_384";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (21973658 & V1 - 1) >= 0 && (21973658 & V1 - 1) < V1 && (21973658 & V1 - 1) != (-2043122136 & V1 - 1) && (21973658 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_220(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_220";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-1523087692 & V1 - 1) >= 0 && (-1523087692 & V1 - 1) < V1 && (-1523087692 & V1 - 1) == (-2043122136 & V1 - 1) && (-1523087692 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_298(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_298";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-1378069120 & V1 - 1) && (53101694 & V1 - 1) >= 0 && (53101694 & V1 - 1) < V1 && (53101694 & V1 - 1) == (-2043122136 & V1 - 1) && (53101694 & V1 - 1) != (-26585344 & V1 - 1) && (53101694 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_310(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_310";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_57(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_57";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_45(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_45";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_164(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_164";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_274(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_274";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (130291670 & V1 - 1) >= 0 && (130291670 & V1 - 1) < V1 && (130291670 & V1 - 1) == (-26585344 & V1 - 1) && (130291670 & V1 - 1) != (-1378069120 & V1 - 1) && (130291670 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_136(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_136";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_531(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_531";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) != (-2043122136 & V1 - 1) && (-30365670 & V1 - 1) >= 0 && (-30365670 & V1 - 1) < V1 && (-30365670 & V1 - 1) == (-2064656670 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_97(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_97";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_80(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_80";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_88(Integer count, Integer V1, Integer V3, Integer V5) {

		String pathCondition = "constructCastlingPiecesMovementTracker_88";

		if(V1 == null || V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && V5 != 1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && V3 == 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_232(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_232";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1121692102 & V1 - 1) >= 0 && (-1121692102 & V1 - 1) < V1 && (-1121692102 & V1 - 1) != (-2043122136 & V1 - 1) && (-1121692102 & V1 - 1) != (-26585344 & V1 - 1) && (-1121692102 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_26(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_26";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_261(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_261";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) >= 0 && (-1703900296 & V1 - 1) < V1 && (-1703900296 & V1 - 1) == (-26585344 & V1 - 1) && (-1703900296 & V1 - 1) != (-1378069120 & V1 - 1) && (-1703900296 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) != (550015172 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_234(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_234";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1121692102 & V1 - 1) >= 0 && (-1121692102 & V1 - 1) < V1 && (-1121692102 & V1 - 1) == (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_120(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_120";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_528(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_528";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_438(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_438";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_33(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_33";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_143(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_143";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_258(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_258";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) >= 0 && (-1703900296 & V1 - 1) < V1 && (-1703900296 & V1 - 1) != (-2043122136 & V1 - 1) && (-1703900296 & V1 - 1) != (-26585344 & V1 - 1) && (-1703900296 & V1 - 1) != (-1378069120 & V1 - 1) && (-1703900296 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) != (550015172 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_442(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_442";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_89(Integer count, Integer V1, Integer V3) {

		String pathCondition = "constructCastlingPiecesMovementTracker_89";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && V3 == 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_198(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_198";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (-339669318 & V1 - 1) >= 0 && (-339669318 & V1 - 1) < V1 && (-339669318 & V1 - 1) != (-2043122136 & V1 - 1) && (-339669318 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_458(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_458";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_510(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_510";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (867302602 & V1 - 1) && (-77861228 & V1 - 1) >= 0 && (-77861228 & V1 - 1) < V1 && (-77861228 & V1 - 1) == (-2043122136 & V1 - 1) && (-77861228 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_9(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_9";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_370(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_370";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1987547264 & V1 - 1) >= 0 && (1987547264 & V1 - 1) < V1 && (1987547264 & V1 - 1) == (-26585344 & V1 - 1) && (1987547264 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_476(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_476";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (388958728 & V1 - 1) && (1950465912 & V1 - 1) >= 0 && (1950465912 & V1 - 1) < V1 && (1950465912 & V1 - 1) == (-2043122136 & V1 - 1) && (1950465912 & V1 - 1) != (867302602 & V1 - 1) && (1950465912 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_5(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingPiecesMovementTracker_5";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && V2 != 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_147(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_147";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-2043122136 & V1 - 1) + 2 + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-2043122136 & V1 - 1) + 2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_306(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_306";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (1640350000 & V1 - 1) >= 0 && (1640350000 & V1 - 1) < V1 && (1640350000 & V1 - 1) != (-2043122136 & V1 - 1) && (1640350000 & V1 - 1) != (-26585344 & V1 - 1) && (1640350000 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_190(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_190";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) != (-2043122136 & V1 - 1) && (-766618030 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_420(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_420";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-788963522 & V1 - 1) >= 0 && (-788963522 & V1 - 1) < V1 && (-788963522 & V1 - 1) == (-2043122136 & V1 - 1) && (-788963522 & V1 - 1) != (-26585344 & V1 - 1) && (-788963522 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_318(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_318";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-1378069120 & V1 - 1) && (1818518090 & V1 - 1) >= 0 && (1818518090 & V1 - 1) < V1 && (1818518090 & V1 - 1) != (-2043122136 & V1 - 1) && (1818518090 & V1 - 1) != (-26585344 & V1 - 1) && (1818518090 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_305(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_305";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_74(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_74";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_112(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_112";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_43(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_43";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_176(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_176";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) != (-2043122136 & V1 - 1) && (-624921178 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_392(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_392";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_20(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_20";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_433(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_433";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) != (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (1541897204 & V1 - 1) >= 0 && (1541897204 & V1 - 1) < V1 && (1541897204 & V1 - 1) == (683362920 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_520(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_520";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-127976284 & V1 - 1) >= 0 && (-127976284 & V1 - 1) < V1 && (-127976284 & V1 - 1) != (-2043122136 & V1 - 1) && (-127976284 & V1 - 1) != (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_402(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_402";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-26585344 & V1 - 1) && (1303403258 & V1 - 1) >= 0 && (1303403258 & V1 - 1) < V1 && (1303403258 & V1 - 1) != (-2043122136 & V1 - 1) && (1303403258 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_499(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_499";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_505(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_505";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-212093370 & V1 - 1) >= 0 && (-212093370 & V1 - 1) < V1 && (-212093370 & V1 - 1) != (-2043122136 & V1 - 1) && (-212093370 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_10(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_10";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_340(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_340";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-1378069120 & V1 - 1) && (-1968556050 & V1 - 1) >= 0 && (-1968556050 & V1 - 1) < V1 && (-1968556050 & V1 - 1) != (-2043122136 & V1 - 1) && (-1968556050 & V1 - 1) != (-26585344 & V1 - 1) && (-1968556050 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_494(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_494";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_53(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_53";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_199(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_199";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (-339669318 & V1 - 1) >= 0 && (-339669318 & V1 - 1) < V1 && (-339669318 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_49(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_49";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_218(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_218";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_353(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_353";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1376697826 & V1 - 1) >= 0 && (-1376697826 & V1 - 1) < V1 && (-1376697826 & V1 - 1) == (-26585344 & V1 - 1) && (-1376697826 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_254(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_254";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 < V1 && (-1378069120 & V1 - 1) + 2 >= 0 && (-1378069120 & V1 - 1) + 2 < V1 && (-1378069120 & V1 - 1) + 2 == (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_257(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_257";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 >= V1 && V1 > 0 && (-26585344 & V1 - 1) == 0 && (-1378069120 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_512(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_512";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_464(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_464";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) != (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) >= 0 && (61481926 & V1 - 1) < V1 && (61481926 & V1 - 1) != (-2043122136 & V1 - 1) && (61481926 & V1 - 1) != (867302602 & V1 - 1) && (61481926 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) != (-1319274672 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_532(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_532";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_12(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_12";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_459(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_459";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_123(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_123";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_333(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_333";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_69(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_69";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_116(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_116";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_380(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_380";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) != (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (1592994622 & V1 - 1) >= 0 && (1592994622 & V1 - 1) < V1 && (1592994622 & V1 - 1) == (-1881691332 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_423(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_423";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_322(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_322";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_273(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_273";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (130291670 & V1 - 1) >= 0 && (130291670 & V1 - 1) < V1 && (130291670 & V1 - 1) == (-2043122136 & V1 - 1) && (130291670 & V1 - 1) != (-26585344 & V1 - 1) && (130291670 & V1 - 1) != (-1378069120 & V1 - 1) && (130291670 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_517(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_517";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-522666294 & V1 - 1) >= 0 && (-522666294 & V1 - 1) < V1 && (-522666294 & V1 - 1) == (768140076 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_227(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_227";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (748802046 & V1 - 1) >= 0 && (748802046 & V1 - 1) < V1 && (748802046 & V1 - 1) != (-2043122136 & V1 - 1) && (748802046 & V1 - 1) != (-26585344 & V1 - 1) && (748802046 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_223(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_223";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1745793282 & V1 - 1) >= 0 && (-1745793282 & V1 - 1) < V1 && (-1745793282 & V1 - 1) == (-2043122136 & V1 - 1) && (-1745793282 & V1 - 1) != (-26585344 & V1 - 1) && (-1745793282 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_182(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_182";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-236904128 & V1 - 1) >= 0 && (-236904128 & V1 - 1) < V1 && (-236904128 & V1 - 1) == (-706951606 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_405(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_405";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_238(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_238";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1590193782 & V1 - 1) >= 0 && (-1590193782 & V1 - 1) < V1 && (-1590193782 & V1 - 1) == (-2043122136 & V1 - 1) && (-1590193782 & V1 - 1) != (-26585344 & V1 - 1) && (-1590193782 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_23(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_23";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_508(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_508";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_230(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_230";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-545860970 & V1 - 1) >= 0 && (-545860970 & V1 - 1) < V1 && (-545860970 & V1 - 1) != (-2043122136 & V1 - 1) && (-545860970 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_357(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_357";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) != (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) >= 0 && (1219231764 & V1 - 1) < V1 && (1219231764 & V1 - 1) != (-2043122136 & V1 - 1) && (1219231764 & V1 - 1) != (-26585344 & V1 - 1) && (1219231764 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) != (-189924166 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_345(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_345";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (1027648782 & V1 - 1) >= 0 && (1027648782 & V1 - 1) < V1 && (1027648782 & V1 - 1) != (-2043122136 & V1 - 1) && (1027648782 & V1 - 1) != (-26585344 & V1 - 1) && (1027648782 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_181(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_181";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-236904128 & V1 - 1) >= 0 && (-236904128 & V1 - 1) < V1 && (-236904128 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (-236904128 & V1 - 1) != (-706951606 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_347(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_347";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (1027648782 & V1 - 1) >= 0 && (1027648782 & V1 - 1) < V1 && (1027648782 & V1 - 1) == (-2043122136 & V1 - 1) && (1027648782 & V1 - 1) != (-26585344 & V1 - 1) && (1027648782 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_455(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_455";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-26585344 & V1 - 1) && (134301270 & V1 - 1) >= 0 && (134301270 & V1 - 1) < V1 && (134301270 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_519(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_519";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_462(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_462";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (867302602 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (867302602 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_48(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_48";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_279(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_279";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1237038928 & V1 - 1) >= 0 && (-1237038928 & V1 - 1) < V1 && (-1237038928 & V1 - 1) == (-2043122136 & V1 - 1) && (-1237038928 & V1 - 1) != (-26585344 & V1 - 1) && (-1237038928 & V1 - 1) != (-1378069120 & V1 - 1) && (-1237038928 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_321(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_321";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-1378069120 & V1 - 1) && (1818518090 & V1 - 1) >= 0 && (1818518090 & V1 - 1) < V1 && (1818518090 & V1 - 1) == (-26585344 & V1 - 1) && (1818518090 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_235(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_235";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1346296082 & V1 - 1) >= 0 && (-1346296082 & V1 - 1) < V1 && (-1346296082 & V1 - 1) != (-2043122136 & V1 - 1) && (-1346296082 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_228(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_228";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (748802046 & V1 - 1) >= 0 && (748802046 & V1 - 1) < V1 && (748802046 & V1 - 1) == (-2043122136 & V1 - 1) && (748802046 & V1 - 1) != (-26585344 & V1 - 1) && (748802046 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_263(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_263";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) >= 0 && (-1703900296 & V1 - 1) < V1 && (-1703900296 & V1 - 1) == (550015172 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_314(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_314";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) != (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) >= 0 && (393750070 & V1 - 1) < V1 && (393750070 & V1 - 1) == (-2043122136 & V1 - 1) && (393750070 & V1 - 1) != (-26585344 & V1 - 1) && (393750070 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) != (1074640908 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_189(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_189";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) != (-2043122136 & V1 - 1) && (-766618030 & V1 - 1) != 0 && (25969706 & V1 - 1) >= 0 && (25969706 & V1 - 1) < V1 && (25969706 & V1 - 1) == 0 && (25969706 & V1 - 1) != (-766618030 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_19(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_19";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_362(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_362";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) != (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_38(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_38";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_293(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_293";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) != (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) >= 0 && (-499430018 & V1 - 1) < V1 && (-499430018 & V1 - 1) == (-26585344 & V1 - 1) && (-499430018 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) != (-650453762 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_308(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_308";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (1640350000 & V1 - 1) >= 0 && (1640350000 & V1 - 1) < V1 && (1640350000 & V1 - 1) == (-2043122136 & V1 - 1) && (1640350000 & V1 - 1) != (-26585344 & V1 - 1) && (1640350000 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_443(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_443";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_86(Integer count, Integer V6, Integer V1, Integer V5) {

		String pathCondition = "constructCastlingPiecesMovementTracker_86";

		if(V6 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && V5 != 1 && V6 == 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_355(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_355";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_58(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_58";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_243(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_243";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (1622899848 & V1 - 1) >= 0 && (1622899848 & V1 - 1) < V1 && (1622899848 & V1 - 1) == (-2043122136 & V1 - 1) && (1622899848 & V1 - 1) != (-26585344 & V1 - 1) && (1622899848 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_16(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_16";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_168(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_168";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (983692722 & V1 - 1) >= 0 && (983692722 & V1 - 1) < V1 && (983692722 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (983692722 & V1 - 1) != (-142403162 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_477(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_477";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (388958728 & V1 - 1) && (1950465912 & V1 - 1) >= 0 && (1950465912 & V1 - 1) < V1 && (1950465912 & V1 - 1) == (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_125(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_125";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_177(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_177";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) == 0 && (1506194480 & V1 - 1) >= 0 && (1506194480 & V1 - 1) < V1 && (1506194480 & V1 - 1) != (-2043122136 & V1 - 1) && (1506194480 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_40(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_40";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_262(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_262";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) >= 0 && (-1703900296 & V1 - 1) < V1 && (-1703900296 & V1 - 1) == (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) != (550015172 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_472(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_472";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (379241256 & V1 - 1) >= 0 && (379241256 & V1 - 1) < V1 && (379241256 & V1 - 1) == (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_22(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_22";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_414(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_414";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (1105022520 & V1 - 1) >= 0 && (1105022520 & V1 - 1) < V1 && (1105022520 & V1 - 1) != (-2043122136 & V1 - 1) && (1105022520 & V1 - 1) != (-26585344 & V1 - 1) && (1105022520 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_124(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_124";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_451(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_451";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (855079646 & V1 - 1) >= 0 && (855079646 & V1 - 1) < V1 && (855079646 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_207(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_207";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_170(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_170";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (168716064 & V1 - 1) >= 0 && (168716064 & V1 - 1) < V1 && (168716064 & V1 - 1) != (-2043122136 & V1 - 1) && (168716064 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_172(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_172";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_359(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_359";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) != (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) >= 0 && (1219231764 & V1 - 1) < V1 && (1219231764 & V1 - 1) == (-2043122136 & V1 - 1) && (1219231764 & V1 - 1) != (-26585344 & V1 - 1) && (1219231764 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) != (-189924166 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_435(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_435";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (-1957265220 & V1 - 1) >= 0 && (-1957265220 & V1 - 1) < V1 && (-1957265220 & V1 - 1) != (-2043122136 & V1 - 1) && (-1957265220 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_452(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_452";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_145(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_145";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_331(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_331";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (588526062 & V1 - 1) >= 0 && (588526062 & V1 - 1) < V1 && (588526062 & V1 - 1) == (-26585344 & V1 - 1) && (588526062 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_429(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_429";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_51(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_51";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_237(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_237";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1590193782 & V1 - 1) >= 0 && (-1590193782 & V1 - 1) < V1 && (-1590193782 & V1 - 1) != (-2043122136 & V1 - 1) && (-1590193782 & V1 - 1) != (-26585344 & V1 - 1) && (-1590193782 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_511(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_511";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (867302602 & V1 - 1) && (-77861228 & V1 - 1) >= 0 && (-77861228 & V1 - 1) < V1 && (-77861228 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_157(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_157";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) != (-2043122136 & V1 - 1) && (-1384083894 & V1 - 1) != 0 && (257645664 & V1 - 1) >= 0 && (257645664 & V1 - 1) < V1 && (257645664 & V1 - 1) != (-2043122136 & V1 - 1) && (257645664 & V1 - 1) != 0 && (257645664 & V1 - 1) != (-1384083894 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_222(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_222";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1745793282 & V1 - 1) >= 0 && (-1745793282 & V1 - 1) < V1 && (-1745793282 & V1 - 1) != (-2043122136 & V1 - 1) && (-1745793282 & V1 - 1) != (-26585344 & V1 - 1) && (-1745793282 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_288(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_288";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_78(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_78";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_319(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_319";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-1378069120 & V1 - 1) && (1818518090 & V1 - 1) >= 0 && (1818518090 & V1 - 1) < V1 && (1818518090 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_516(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_516";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-522666294 & V1 - 1) >= 0 && (-522666294 & V1 - 1) < V1 && (-522666294 & V1 - 1) == (-2043122136 & V1 - 1) && (-522666294 & V1 - 1) != (790449556 & V1 - 1) && (-522666294 & V1 - 1) != (768140076 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_28(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_28";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_85(Integer count, Integer V1, Integer V5) {

		String pathCondition = "constructCastlingPiecesMovementTracker_85";

		if(V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && V5 == 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_351(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_351";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1376697826 & V1 - 1) >= 0 && (-1376697826 & V1 - 1) < V1 && (-1376697826 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_302(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_302";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-1814293712 & V1 - 1) >= 0 && (-1814293712 & V1 - 1) < V1 && (-1814293712 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_446(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_446";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) != (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) >= 0 && (-1007074134 & V1 - 1) < V1 && (-1007074134 & V1 - 1) == (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) != (-670707220 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_62(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_62";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_130(Integer count, Integer V7, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_130";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && V7 == 8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_448(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_448";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) != (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_336(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_336";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) != (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) >= 0 && (-1732203968 & V1 - 1) < V1 && (-1732203968 & V1 - 1) == (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) != (-1350853018 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_241(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_241";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-923891510 & V1 - 1) >= 0 && (-923891510 & V1 - 1) < V1 && (-923891510 & V1 - 1) == (-2043122136 & V1 - 1) && (-923891510 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_153(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_153";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (-858695418 & V1 - 1) >= 0 && (-858695418 & V1 - 1) < V1 && (-858695418 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_113(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_113";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_416(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_416";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (1105022520 & V1 - 1) >= 0 && (1105022520 & V1 - 1) < V1 && (1105022520 & V1 - 1) == (-26585344 & V1 - 1) && (1105022520 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_437(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_437";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (-1957265220 & V1 - 1) >= 0 && (-1957265220 & V1 - 1) < V1 && (-1957265220 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_154(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_154";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_260(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_260";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) >= 0 && (-1703900296 & V1 - 1) < V1 && (-1703900296 & V1 - 1) == (-2043122136 & V1 - 1) && (-1703900296 & V1 - 1) != (-26585344 & V1 - 1) && (-1703900296 & V1 - 1) != (-1378069120 & V1 - 1) && (-1703900296 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) != (550015172 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_119(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_119";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_139(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_139";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_350(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_350";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1376697826 & V1 - 1) >= 0 && (-1376697826 & V1 - 1) < V1 && (-1376697826 & V1 - 1) != (-2043122136 & V1 - 1) && (-1376697826 & V1 - 1) != (-26585344 & V1 - 1) && (-1376697826 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_507(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_507";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) == (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-212093370 & V1 - 1) >= 0 && (-212093370 & V1 - 1) < V1 && (-212093370 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_148(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_148";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-1729269484 & V1 - 1) >= 0 && (-1729269484 & V1 - 1) < V1 && (-1729269484 & V1 - 1) != (-2043122136 & V1 - 1) && (-1729269484 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-1729269484 & V1 - 1) != (140793108 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_465(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_465";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) != (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) >= 0 && (61481926 & V1 - 1) < V1 && (61481926 & V1 - 1) == (-1319274672 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_32(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_32";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_287(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_287";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (1369083856 & V1 - 1) && (-938819242 & V1 - 1) >= 0 && (-938819242 & V1 - 1) < V1 && (-938819242 & V1 - 1) == (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_469(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_469";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) != (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_150(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_150";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-1729269484 & V1 - 1) >= 0 && (-1729269484 & V1 - 1) < V1 && (-1729269484 & V1 - 1) == (140793108 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_6(Integer count, Integer V8, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_6";

		if(V8 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && V8 == 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_292(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_292";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) != (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) >= 0 && (-499430018 & V1 - 1) < V1 && (-499430018 & V1 - 1) == (-2043122136 & V1 - 1) && (-499430018 & V1 - 1) != (-26585344 & V1 - 1) && (-499430018 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) != (-650453762 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_72(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_72";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_456(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_456";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_215(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_215";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1905276104 & V1 - 1) >= 0 && (-1905276104 & V1 - 1) < V1 && (-1905276104 & V1 - 1) != (-2043122136 & V1 - 1) && (-1905276104 & V1 - 1) != (-26585344 & V1 - 1) && (-1905276104 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_46(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_46";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_83(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_83";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_454(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_454";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-26585344 & V1 - 1) && (134301270 & V1 - 1) >= 0 && (134301270 & V1 - 1) < V1 && (134301270 & V1 - 1) == (-2043122136 & V1 - 1) && (134301270 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_344(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_344";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_94(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_94";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_361(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_361";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) != (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) >= 0 && (1219231764 & V1 - 1) < V1 && (1219231764 & V1 - 1) == (2123915888 & V1 - 1) && (1219231764 & V1 - 1) != (-189924166 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_453(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_453";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) == (-26585344 & V1 - 1) && (134301270 & V1 - 1) >= 0 && (134301270 & V1 - 1) < V1 && (134301270 & V1 - 1) != (-2043122136 & V1 - 1) && (134301270 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_255(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_255";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (-1378069120 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1378069120 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_281(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_281";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1237038928 & V1 - 1) >= 0 && (-1237038928 & V1 - 1) < V1 && (-1237038928 & V1 - 1) == (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_34(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_34";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_151(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_151";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_183(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_183";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_209(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_209";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (310884106 & V1 - 1) >= 0 && (310884106 & V1 - 1) < V1 && (310884106 & V1 - 1) == (-2043122136 & V1 - 1) && (310884106 & V1 - 1) != (-26585344 & V1 - 1) && (310884106 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_138(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_138";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_84(Integer count, Integer V6, Integer V1, Integer V5) {

		String pathCondition = "constructCastlingPiecesMovementTracker_84";

		if(V6 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && V5 == 1 && V6 == 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_539(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_539";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_412(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_412";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) != (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) >= 0 && (-249920736 & V1 - 1) < V1 && (-249920736 & V1 - 1) == (1749220880 & V1 - 1) && (-249920736 & V1 - 1) != (-780691482 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_296(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_296";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-1378069120 & V1 - 1) && (53101694 & V1 - 1) >= 0 && (53101694 & V1 - 1) < V1 && (53101694 & V1 - 1) != (-2043122136 & V1 - 1) && (53101694 & V1 - 1) != (-26585344 & V1 - 1) && (53101694 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_502(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_502";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) != (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-366248966 & V1 - 1) >= 0 && (-366248966 & V1 - 1) < V1 && (-366248966 & V1 - 1) == (1026602966 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_59(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_59";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_160(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_160";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) != (-2043122136 & V1 - 1) && (-1384083894 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_137(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_137";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_479(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_479";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_480(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_480";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (1215777424 & V1 - 1) >= 0 && (1215777424 & V1 - 1) < V1 && (1215777424 & V1 - 1) != (-2043122136 & V1 - 1) && (1215777424 & V1 - 1) != (867302602 & V1 - 1) && (1215777424 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_54(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_54";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_99(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_99";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_482(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_482";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (1215777424 & V1 - 1) >= 0 && (1215777424 & V1 - 1) < V1 && (1215777424 & V1 - 1) == (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_300(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_300";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_312(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_312";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) != (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) >= 0 && (393750070 & V1 - 1) < V1 && (393750070 & V1 - 1) != (-2043122136 & V1 - 1) && (393750070 & V1 - 1) != (-26585344 & V1 - 1) && (393750070 & V1 - 1) != (-1378069120 & V1 - 1) && (393750070 & V1 - 1) != (1074640908 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_486(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_486";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) != (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (1016097912 & V1 - 1) >= 0 && (1016097912 & V1 - 1) < V1 && (1016097912 & V1 - 1) != (-2043122136 & V1 - 1) && (1016097912 & V1 - 1) != (867302602 & V1 - 1) && (1016097912 & V1 - 1) != (190184342 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_259(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_259";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) >= 0 && (-1703900296 & V1 - 1) < V1 && (-1703900296 & V1 - 1) == (-1378069120 & V1 - 1) && (-1703900296 & V1 - 1) != (1369083856 & V1 - 1) && (-1703900296 & V1 - 1) != (550015172 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_3(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingPiecesMovementTracker_3";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && V2 != 1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_286(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_286";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (1369083856 & V1 - 1) && (-938819242 & V1 - 1) >= 0 && (-938819242 & V1 - 1) < V1 && (-938819242 & V1 - 1) == (-26585344 & V1 - 1) && (-938819242 & V1 - 1) != (-1378069120 & V1 - 1) && (-938819242 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_303(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_303";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-1814293712 & V1 - 1) >= 0 && (-1814293712 & V1 - 1) < V1 && (-1814293712 & V1 - 1) == (-2043122136 & V1 - 1) && (-1814293712 & V1 - 1) != (-26585344 & V1 - 1) && (-1814293712 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_441(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_441";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-26585344 & V1 - 1) && (1438161388 & V1 - 1) >= 0 && (1438161388 & V1 - 1) < V1 && (1438161388 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_337(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_337";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) != (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) >= 0 && (-1732203968 & V1 - 1) < V1 && (-1732203968 & V1 - 1) == (-2043122136 & V1 - 1) && (-1732203968 & V1 - 1) != (-26585344 & V1 - 1) && (-1732203968 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) != (-1350853018 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_434(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_434";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) != (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_473(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_473";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (379241256 & V1 - 1) >= 0 && (379241256 & V1 - 1) < V1 && (379241256 & V1 - 1) == (867302602 & V1 - 1) && (379241256 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_169(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_169";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_245(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_245";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (1118706044 & V1 - 1) >= 0 && (1118706044 & V1 - 1) < V1 && (1118706044 & V1 - 1) != (-2043122136 & V1 - 1) && (1118706044 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_417(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_417";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (1105022520 & V1 - 1) >= 0 && (1105022520 & V1 - 1) < V1 && (1105022520 & V1 - 1) == (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_349(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_349";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_200(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_200";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) == (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_398(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_398";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (-66190352 & V1 - 1) >= 0 && (-66190352 & V1 - 1) < V1 && (-66190352 & V1 - 1) != (-2043122136 & V1 - 1) && (-66190352 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_37(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_37";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_240(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_240";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-923891510 & V1 - 1) >= 0 && (-923891510 & V1 - 1) < V1 && (-923891510 & V1 - 1) != (-2043122136 & V1 - 1) && (-923891510 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_132(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_132";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_374(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_374";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (2123915888 & V1 - 1) && (1748073536 & V1 - 1) >= 0 && (1748073536 & V1 - 1) < V1 && (1748073536 & V1 - 1) == (-2043122136 & V1 - 1) && (1748073536 & V1 - 1) != (-26585344 & V1 - 1) && (1748073536 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_440(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_440";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-26585344 & V1 - 1) && (1438161388 & V1 - 1) >= 0 && (1438161388 & V1 - 1) < V1 && (1438161388 & V1 - 1) == (-2043122136 & V1 - 1) && (1438161388 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_457(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_457";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_31(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_31";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_121(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_121";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_90(Integer count, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "constructCastlingPiecesMovementTracker_90";

		if(V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && V3 != 5 && V9 == 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_501(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_501";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) != (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-366248966 & V1 - 1) >= 0 && (-366248966 & V1 - 1) < V1 && (-366248966 & V1 - 1) == (-2043122136 & V1 - 1) && (-366248966 & V1 - 1) != (867302602 & V1 - 1) && (-366248966 & V1 - 1) != (1026602966 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_372(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_372";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_1(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingPiecesMovementTracker_1";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && V2 == 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_50(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_50";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_523(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_523";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_110(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_110";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_325(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_325";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (1065500072 & V1 - 1) >= 0 && (1065500072 & V1 - 1) < V1 && (1065500072 & V1 - 1) == (-2043122136 & V1 - 1) && (1065500072 & V1 - 1) != (-26585344 & V1 - 1) && (1065500072 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_341(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_341";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-1378069120 & V1 - 1) && (-1968556050 & V1 - 1) >= 0 && (-1968556050 & V1 - 1) < V1 && (-1968556050 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_358(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_358";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) != (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1219231764 & V1 - 1) >= 0 && (1219231764 & V1 - 1) < V1 && (1219231764 & V1 - 1) == (-189924166 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_64(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_64";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_101(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_101";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_324(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_324";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (1065500072 & V1 - 1) >= 0 && (1065500072 & V1 - 1) < V1 && (1065500072 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_129(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_129";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_495(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_495";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (867302602 & V1 - 1) && (-810761822 & V1 - 1) >= 0 && (-810761822 & V1 - 1) < V1 && (-810761822 & V1 - 1) != (-2043122136 & V1 - 1) && (-810761822 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_522(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_522";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-127976284 & V1 - 1) >= 0 && (-127976284 & V1 - 1) < V1 && (-127976284 & V1 - 1) == (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_265(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_265";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-91481742 & V1 - 1) >= 0 && (-91481742 & V1 - 1) < V1 && (-91481742 & V1 - 1) != (-2043122136 & V1 - 1) && (-91481742 & V1 - 1) != (-26585344 & V1 - 1) && (-91481742 & V1 - 1) != (-1378069120 & V1 - 1) && (-91481742 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_278(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_278";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-1237038928 & V1 - 1) >= 0 && (-1237038928 & V1 - 1) < V1 && (-1237038928 & V1 - 1) == (-1378069120 & V1 - 1) && (-1237038928 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_504(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_504";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) != (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_436(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_436";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) == (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (-1957265220 & V1 - 1) >= 0 && (-1957265220 & V1 - 1) < V1 && (-1957265220 & V1 - 1) == (-2043122136 & V1 - 1) && (-1957265220 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_404(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_404";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-26585344 & V1 - 1) && (1303403258 & V1 - 1) >= 0 && (1303403258 & V1 - 1) < V1 && (1303403258 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_180(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_180";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) >= 0 && (-706951606 & V1 - 1) < V1 && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) && (-706951606 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-236904128 & V1 - 1) >= 0 && (-236904128 & V1 - 1) < V1 && (-236904128 & V1 - 1) != (-2043122136 & V1 - 1) && (-236904128 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-236904128 & V1 - 1) != (-706951606 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_526(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_526";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (790449556 & V1 - 1) && (1027417976 & V1 - 1) >= 0 && (1027417976 & V1 - 1) < V1 && (1027417976 & V1 - 1) == (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_167(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_167";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (983692722 & V1 - 1) >= 0 && (983692722 & V1 - 1) < V1 && (983692722 & V1 - 1) == (-142403162 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_236(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_236";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (-1346296082 & V1 - 1) >= 0 && (-1346296082 & V1 - 1) < V1 && (-1346296082 & V1 - 1) == (-2043122136 & V1 - 1) && (-1346296082 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_41(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_41";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_0(Integer count, Integer V1, Integer V2) {

		String pathCondition = "constructCastlingPiecesMovementTracker_0";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && V2 == 1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_239(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_239";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1590193782 & V1 - 1) >= 0 && (-1590193782 & V1 - 1) < V1 && (-1590193782 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_400(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_400";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (-66190352 & V1 - 1) >= 0 && (-66190352 & V1 - 1) < V1 && (-66190352 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_122(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_122";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_55(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_55";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_354(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_354";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_535(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_535";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) == (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_266(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_266";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-91481742 & V1 - 1) >= 0 && (-91481742 & V1 - 1) < V1 && (-91481742 & V1 - 1) == (-1378069120 & V1 - 1) && (-91481742 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_363(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_363";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (-1783599656 & V1 - 1) >= 0 && (-1783599656 & V1 - 1) < V1 && (-1783599656 & V1 - 1) != (-2043122136 & V1 - 1) && (-1783599656 & V1 - 1) != (-26585344 & V1 - 1) && (-1783599656 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_175(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_175";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) != (-2043122136 & V1 - 1) && (-624921178 & V1 - 1) != 0 && (1631587046 & V1 - 1) >= 0 && (1631587046 & V1 - 1) < V1 && (1631587046 & V1 - 1) == 0 && (1631587046 & V1 - 1) != (-624921178 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_166(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_166";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) >= 0 && (-142403162 & V1 - 1) < V1 && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) && (-142403162 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (983692722 & V1 - 1) >= 0 && (983692722 & V1 - 1) < V1 && (983692722 & V1 - 1) != (-2043122136 & V1 - 1) && (983692722 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (983692722 & V1 - 1) != (-142403162 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_217(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_217";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1905276104 & V1 - 1) >= 0 && (-1905276104 & V1 - 1) < V1 && (-1905276104 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_244(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_244";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (1622899848 & V1 - 1) >= 0 && (1622899848 & V1 - 1) < V1 && (1622899848 & V1 - 1) == (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_431(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_431";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (683362920 & V1 - 1) >= 0 && (683362920 & V1 - 1) < V1 && (683362920 & V1 - 1) != (-2043122136 & V1 - 1) && (683362920 & V1 - 1) != (-26585344 & V1 - 1) && (1541897204 & V1 - 1) >= 0 && (1541897204 & V1 - 1) < V1 && (1541897204 & V1 - 1) == (-2043122136 & V1 - 1) && (1541897204 & V1 - 1) != (-26585344 & V1 - 1) && (1541897204 & V1 - 1) != (683362920 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_35(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_35";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_524(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_524";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (790449556 & V1 - 1) && (1027417976 & V1 - 1) >= 0 && (1027417976 & V1 - 1) < V1 && (1027417976 & V1 - 1) != (-2043122136 & V1 - 1) && (1027417976 & V1 - 1) != (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_366(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_366";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-2043122136 & V1 - 1) && (-189924166 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (-1783599656 & V1 - 1) >= 0 && (-1783599656 & V1 - 1) < V1 && (-1783599656 & V1 - 1) == (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_371(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_371";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1987547264 & V1 - 1) >= 0 && (1987547264 & V1 - 1) < V1 && (1987547264 & V1 - 1) == (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_194(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_194";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (2001338476 & V1 - 1) >= 0 && (2001338476 & V1 - 1) < V1 && (2001338476 & V1 - 1) != (-2043122136 & V1 - 1) && (2001338476 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (2001338476 & V1 - 1) != (-63324968 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_25(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_25";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_56(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_56";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_197(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_197";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_468(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_468";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) != (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) >= 0 && (61481926 & V1 - 1) < V1 && (61481926 & V1 - 1) == (867302602 & V1 - 1) && (61481926 & V1 - 1) != (388958728 & V1 - 1) && (61481926 & V1 - 1) != (-1319274672 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_248(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_248";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-615381968 & V1 - 1) >= 0 && (-615381968 & V1 - 1) < V1 && (-615381968 & V1 - 1) == (-2043122136 & V1 - 1) && (-615381968 & V1 - 1) != (-26585344 & V1 - 1) && (-615381968 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_208(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_208";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (310884106 & V1 - 1) >= 0 && (310884106 & V1 - 1) < V1 && (310884106 & V1 - 1) != (-2043122136 & V1 - 1) && (310884106 & V1 - 1) != (-26585344 & V1 - 1) && (310884106 & V1 - 1) != (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_275(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_275";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (130291670 & V1 - 1) >= 0 && (130291670 & V1 - 1) < V1 && (130291670 & V1 - 1) == (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_375(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_375";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (2123915888 & V1 - 1) && (1748073536 & V1 - 1) >= 0 && (1748073536 & V1 - 1) < V1 && (1748073536 & V1 - 1) == (-26585344 & V1 - 1) && (1748073536 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_268(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_268";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-91481742 & V1 - 1) >= 0 && (-91481742 & V1 - 1) < V1 && (-91481742 & V1 - 1) == (-26585344 & V1 - 1) && (-91481742 & V1 - 1) != (-1378069120 & V1 - 1) && (-91481742 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_158(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_158";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) != (-2043122136 & V1 - 1) && (-1384083894 & V1 - 1) != 0 && (257645664 & V1 - 1) >= 0 && (257645664 & V1 - 1) < V1 && (257645664 & V1 - 1) == (-1384083894 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_66(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_66";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_79(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_79";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_396(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_396";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) != (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (1403590186 & V1 - 1) >= 0 && (1403590186 & V1 - 1) < V1 && (1403590186 & V1 - 1) == (-26585344 & V1 - 1) && (1403590186 & V1 - 1) != (-1198890088 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_471(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_471";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (379241256 & V1 - 1) >= 0 && (379241256 & V1 - 1) < V1 && (379241256 & V1 - 1) == (-2043122136 & V1 - 1) && (379241256 & V1 - 1) != (867302602 & V1 - 1) && (379241256 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_11(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_11";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_135(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_135";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_165(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_165";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && 2 < V1 && 2 != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_427(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_427";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (1749220880 & V1 - 1) && (-919636872 & V1 - 1) >= 0 && (-919636872 & V1 - 1) < V1 && (-919636872 & V1 - 1) == (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_422(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_422";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-788963522 & V1 - 1) >= 0 && (-788963522 & V1 - 1) < V1 && (-788963522 & V1 - 1) == (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_503(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_503";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (867302602 & V1 - 1) && (1026602966 & V1 - 1) >= 0 && (1026602966 & V1 - 1) < V1 && (1026602966 & V1 - 1) != (-2043122136 & V1 - 1) && (1026602966 & V1 - 1) != (867302602 & V1 - 1) && (-366248966 & V1 - 1) >= 0 && (-366248966 & V1 - 1) < V1 && (-366248966 & V1 - 1) == (867302602 & V1 - 1) && (-366248966 & V1 - 1) != (1026602966 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_399(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_399";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (-66190352 & V1 - 1) >= 0 && (-66190352 & V1 - 1) < V1 && (-66190352 & V1 - 1) == (-2043122136 & V1 - 1) && (-66190352 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_36(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_36";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_82(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_82";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_210(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_210";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (310884106 & V1 - 1) >= 0 && (310884106 & V1 - 1) < V1 && (310884106 & V1 - 1) == (-26585344 & V1 - 1) + 2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_141(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_141";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_403(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_403";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-26585344 & V1 - 1) && (1303403258 & V1 - 1) >= 0 && (1303403258 & V1 - 1) < V1 && (1303403258 & V1 - 1) == (-2043122136 & V1 - 1) && (1303403258 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_21(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_21";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_98(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_98";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_81(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_81";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_309(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_309";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (1640350000 & V1 - 1) >= 0 && (1640350000 & V1 - 1) < V1 && (1640350000 & V1 - 1) == (-26585344 & V1 - 1) && (1640350000 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_29(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_29";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_421(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_421";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-788963522 & V1 - 1) >= 0 && (-788963522 & V1 - 1) < V1 && (-788963522 & V1 - 1) == (-26585344 & V1 - 1) && (-788963522 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_73(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_73";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_329(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_329";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) == (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1) && (588526062 & V1 - 1) >= 0 && (588526062 & V1 - 1) < V1 && (588526062 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_527(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_527";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) == (790449556 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_368(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_368";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1987547264 & V1 - 1) >= 0 && (1987547264 & V1 - 1) < V1 && (1987547264 & V1 - 1) != (-2043122136 & V1 - 1) && (1987547264 & V1 - 1) != (-26585344 & V1 - 1) && (1987547264 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_212(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_212";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (609711206 & V1 - 1) >= 0 && (609711206 & V1 - 1) < V1 && (609711206 & V1 - 1) != (-2043122136 & V1 - 1) && (609711206 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_93(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_93";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_179(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_179";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_461(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_461";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (867302602 & V1 - 1) + 2 < V1 && (867302602 & V1 - 1) + 2 >= 0 && (867302602 & V1 - 1) + 2 < V1 && (867302602 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) + 2 != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_393(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_393";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) != (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (1403590186 & V1 - 1) >= 0 && (1403590186 & V1 - 1) < V1 && (1403590186 & V1 - 1) != (-2043122136 & V1 - 1) && (1403590186 & V1 - 1) != (-26585344 & V1 - 1) && (1403590186 & V1 - 1) != (-1198890088 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_47(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_47";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) != (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_229(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_229";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (748802046 & V1 - 1) >= 0 && (748802046 & V1 - 1) < V1 && (748802046 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_282(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_282";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_409(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_409";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) != (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) >= 0 && (-249920736 & V1 - 1) < V1 && (-249920736 & V1 - 1) == (-2043122136 & V1 - 1) && (-249920736 & V1 - 1) != (-26585344 & V1 - 1) && (-249920736 & V1 - 1) != (1749220880 & V1 - 1) && (-249920736 & V1 - 1) != (-780691482 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_470(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_470";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) >= 0 && (-1319274672 & V1 - 1) < V1 && (-1319274672 & V1 - 1) == (-2043122136 & V1 - 1) && (-1319274672 & V1 - 1) != (867302602 & V1 - 1) && (-1319274672 & V1 - 1) != (388958728 & V1 - 1) && (379241256 & V1 - 1) >= 0 && (379241256 & V1 - 1) < V1 && (379241256 & V1 - 1) != (-2043122136 & V1 - 1) && (379241256 & V1 - 1) != (867302602 & V1 - 1) && (379241256 & V1 - 1) != (388958728 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_299(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_299";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-1378069120 & V1 - 1) && (53101694 & V1 - 1) >= 0 && (53101694 & V1 - 1) < V1 && (53101694 & V1 - 1) == (-26585344 & V1 - 1) && (53101694 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_418(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_418";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_530(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_530";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) != (-2043122136 & V1 - 1) && (-30365670 & V1 - 1) >= 0 && (-30365670 & V1 - 1) < V1 && (-30365670 & V1 - 1) == (-2043122136 & V1 - 1) && (-30365670 & V1 - 1) != (-2064656670 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_216(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_216";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-26585344 & V1 - 1) != 0 && (-1905276104 & V1 - 1) >= 0 && (-1905276104 & V1 - 1) < V1 && (-1905276104 & V1 - 1) == (-2043122136 & V1 - 1) && (-1905276104 & V1 - 1) != (-26585344 & V1 - 1) && (-1905276104 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_514(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_514";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_7(Integer count, Integer V8, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_7";

		if(V8 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && V8 != 5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_226(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_226";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1) && (299596634 & V1 - 1) >= 0 && (299596634 & V1 - 1) < V1 && (299596634 & V1 - 1) == (-2043122136 & V1 - 1) && (299596634 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_174(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_174";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-624921178 & V1 - 1) >= 0 && (-624921178 & V1 - 1) < V1 && (-624921178 & V1 - 1) != (-2043122136 & V1 - 1) && (-624921178 & V1 - 1) != 0 && (1631587046 & V1 - 1) >= 0 && (1631587046 & V1 - 1) < V1 && (1631587046 & V1 - 1) == (-624921178 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_203(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_203";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) != (-2043122136 & V1 - 1) && (807110086 & V1 - 1) != 0 && (1462166448 & V1 - 1) >= 0 && (1462166448 & V1 - 1) < V1 && (1462166448 & V1 - 1) == 0 && (1462166448 & V1 - 1) != (807110086 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_283(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_283";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (1369083856 & V1 - 1) && (-938819242 & V1 - 1) >= 0 && (-938819242 & V1 - 1) < V1 && (-938819242 & V1 - 1) != (-2043122136 & V1 - 1) && (-938819242 & V1 - 1) != (-26585344 & V1 - 1) && (-938819242 & V1 - 1) != (-1378069120 & V1 - 1) && (-938819242 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_369(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_369";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) != (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-189924166 & V1 - 1) >= 0 && (-189924166 & V1 - 1) < V1 && (-189924166 & V1 - 1) == (-26585344 & V1 - 1) && (-189924166 & V1 - 1) != (2123915888 & V1 - 1) && (1987547264 & V1 - 1) >= 0 && (1987547264 & V1 - 1) < V1 && (1987547264 & V1 - 1) == (-2043122136 & V1 - 1) && (1987547264 & V1 - 1) != (-26585344 & V1 - 1) && (1987547264 & V1 - 1) != (2123915888 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_294(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_294";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) != (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-499430018 & V1 - 1) >= 0 && (-499430018 & V1 - 1) < V1 && (-499430018 & V1 - 1) == (-650453762 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_379(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_379";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) != (-2043122136 & V1 - 1) && (-1881691332 & V1 - 1) != (-26585344 & V1 - 1) && (1592994622 & V1 - 1) >= 0 && (1592994622 & V1 - 1) < V1 && (1592994622 & V1 - 1) != (-2043122136 & V1 - 1) && (1592994622 & V1 - 1) != (-26585344 & V1 - 1) && (1592994622 & V1 - 1) != (-1881691332 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_155(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_155";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_307(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_307";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (1640350000 & V1 - 1) >= 0 && (1640350000 & V1 - 1) < V1 && (1640350000 & V1 - 1) == (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_489(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_489";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) != (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (1016097912 & V1 - 1) >= 0 && (1016097912 & V1 - 1) < V1 && (1016097912 & V1 - 1) == (867302602 & V1 - 1) && (1016097912 & V1 - 1) != (190184342 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_206(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_206";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) == 0 && (2035738604 & V1 - 1) >= 0 && (2035738604 & V1 - 1) < V1 && (2035738604 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_317(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_317";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (1074640908 & V1 - 1) >= 0 && (1074640908 & V1 - 1) < V1 && (1074640908 & V1 - 1) != (-2043122136 & V1 - 1) && (1074640908 & V1 - 1) != (-26585344 & V1 - 1) && (1074640908 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_27(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_27";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_24(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_24";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_149(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_149";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) >= 0 && (140793108 & V1 - 1) < V1 && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) && (140793108 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (-1729269484 & V1 - 1) >= 0 && (-1729269484 & V1 - 1) < V1 && (-1729269484 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (-1729269484 & V1 - 1) != (140793108 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_534(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_534";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) == (-2043122136 & V1 - 1) && (-2064656670 & V1 - 1) >= 0 && (-2064656670 & V1 - 1) < V1 && (-2064656670 & V1 - 1) == (-2043122136 & V1 - 1) && (1730193304 & V1 - 1) >= 0 && (1730193304 & V1 - 1) < V1 && (1730193304 & V1 - 1) == (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_163(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_163";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_338(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_338";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) != (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) >= 0 && (-1732203968 & V1 - 1) < V1 && (-1732203968 & V1 - 1) == (-26585344 & V1 - 1) && (-1732203968 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) != (-1350853018 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_75(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_75";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (42 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_100(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_100";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_71(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_71";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_335(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_335";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) != (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (-1732203968 & V1 - 1) >= 0 && (-1732203968 & V1 - 1) < V1 && (-1732203968 & V1 - 1) == (-1350853018 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_496(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_496";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (867302602 & V1 - 1) && (-810761822 & V1 - 1) >= 0 && (-810761822 & V1 - 1) < V1 && (-810761822 & V1 - 1) == (-2043122136 & V1 - 1) && (-810761822 & V1 - 1) != (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_413(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_413";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) != (-2043122136 & V1 - 1) && (-780691482 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_156(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_156";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && 2 < V1 && 2 != (-2043122136 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_205(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_205";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) == 0 && (2035738604 & V1 - 1) >= 0 && (2035738604 & V1 - 1) < V1 && (2035738604 & V1 - 1) != (-2043122136 & V1 - 1) && (2035738604 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_270(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_270";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_92(Integer count, Integer V7, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_92";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && V7 == 8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_67(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_67";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_406(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_406";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_388(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_388";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-2043122136 & V1 - 1) && (2123915888 & V1 - 1) != (-26585344 & V1 - 1) && (-1881691332 & V1 - 1) >= 0 && (-1881691332 & V1 - 1) < V1 && (-1881691332 & V1 - 1) == (-26585344 & V1 - 1) && (-17082328 & V1 - 1) >= 0 && (-17082328 & V1 - 1) < V1 && (-17082328 & V1 - 1) != (-2043122136 & V1 - 1) && (-17082328 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_424(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_424";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (1749220880 & V1 - 1) && (-919636872 & V1 - 1) >= 0 && (-919636872 & V1 - 1) < V1 && (-919636872 & V1 - 1) != (-2043122136 & V1 - 1) && (-919636872 & V1 - 1) != (-26585344 & V1 - 1) && (-919636872 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_343(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_343";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-1378069120 & V1 - 1) && (-1968556050 & V1 - 1) >= 0 && (-1968556050 & V1 - 1) < V1 && (-1968556050 & V1 - 1) == (-26585344 & V1 - 1) && (-1968556050 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_395(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_395";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) != (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1) && (1403590186 & V1 - 1) >= 0 && (1403590186 & V1 - 1) < V1 && (1403590186 & V1 - 1) == (-2043122136 & V1 - 1) && (1403590186 & V1 - 1) != (-26585344 & V1 - 1) && (1403590186 & V1 - 1) != (-1198890088 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_426(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_426";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (1749220880 & V1 - 1) && (-919636872 & V1 - 1) >= 0 && (-919636872 & V1 - 1) < V1 && (-919636872 & V1 - 1) == (-26585344 & V1 - 1) && (-919636872 & V1 - 1) != (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_161(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_161";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-1384083894 & V1 - 1) >= 0 && (-1384083894 & V1 - 1) < V1 && (-1384083894 & V1 - 1) == 0 && (-1825862350 & V1 - 1) >= 0 && (-1825862350 & V1 - 1) < V1 && (-1825862350 & V1 - 1) != (-2043122136 & V1 - 1) && (-1825862350 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_272(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_272";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (130291670 & V1 - 1) >= 0 && (130291670 & V1 - 1) < V1 && (130291670 & V1 - 1) == (-1378069120 & V1 - 1) && (130291670 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_193(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_193";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (-766618030 & V1 - 1) >= 0 && (-766618030 & V1 - 1) < V1 && (-766618030 & V1 - 1) == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_447(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_447";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) == (-26585344 & V1 - 1) && (-670707220 & V1 - 1) >= 0 && (-670707220 & V1 - 1) < V1 && (-670707220 & V1 - 1) != (-2043122136 & V1 - 1) && (-670707220 & V1 - 1) != (-26585344 & V1 - 1) && (-1007074134 & V1 - 1) >= 0 && (-1007074134 & V1 - 1) < V1 && (-1007074134 & V1 - 1) == (-670707220 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_304(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_304";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-1378069120 & V1 - 1) && (-650453762 & V1 - 1) >= 0 && (-650453762 & V1 - 1) < V1 && (-650453762 & V1 - 1) == (-2043122136 & V1 - 1) && (-650453762 & V1 - 1) != (-26585344 & V1 - 1) && (-650453762 & V1 - 1) != (-1378069120 & V1 - 1) && (-1814293712 & V1 - 1) >= 0 && (-1814293712 & V1 - 1) < V1 && (-1814293712 & V1 - 1) == (-26585344 & V1 - 1) && (-1814293712 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_15(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_15";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_134(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_134";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 == 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_107(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_107";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_348(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_348";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) == (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (-1350853018 & V1 - 1) >= 0 && (-1350853018 & V1 - 1) < V1 && (-1350853018 & V1 - 1) == (-2043122136 & V1 - 1) && (-1350853018 & V1 - 1) != (-26585344 & V1 - 1) && (-1350853018 & V1 - 1) != (-1378069120 & V1 - 1) && (1027648782 & V1 - 1) >= 0 && (1027648782 & V1 - 1) < V1 && (1027648782 & V1 - 1) == (-26585344 & V1 - 1) && (1027648782 & V1 - 1) != (-1378069120 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_14(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_14";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1) && (68 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_497(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_497";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (867302602 & V1 - 1) && (-810761822 & V1 - 1) >= 0 && (-810761822 & V1 - 1) < V1 && (-810761822 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_195(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_195";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 >= 0 && (-2043122136 & V1 - 1) + 2 < V1 && (-2043122136 & V1 - 1) + 2 != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) >= 0 && (-63324968 & V1 - 1) < V1 && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) && (-63324968 & V1 - 1) != (-2043122136 & V1 - 1) + 2 && (2001338476 & V1 - 1) >= 0 && (2001338476 & V1 - 1) < V1 && (2001338476 & V1 - 1) == (-2043122136 & V1 - 1) + 2 && (2001338476 & V1 - 1) != (-63324968 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_95(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_95";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_117(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_117";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 == 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 != 1 % V1 && 64 % V1 != 5 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_251(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_251";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) == 0 && (-26585344 & V1 - 1) != 0 && (-517655510 & V1 - 1) >= 0 && (-517655510 & V1 - 1) < V1 && (-517655510 & V1 - 1) == (-2043122136 & V1 - 1) && (-517655510 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_39(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_39";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (5 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) != (1 & V1 - 1) && (68 & V1 - 1) != (5 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_103(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_103";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 == 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 1 % V1 && 64 % V1 != 5 % V1 && 64 % V1 != 8 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_13(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_13";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_201(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_201";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) != (-2043122136 & V1 - 1) && (807110086 & V1 - 1) != 0 && (1462166448 & V1 - 1) >= 0 && (1462166448 & V1 - 1) < V1 && (1462166448 & V1 - 1) != (-2043122136 & V1 - 1) && (1462166448 & V1 - 1) != 0 && (1462166448 & V1 - 1) != (807110086 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_96(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_96";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 1 % V1 >= 0 && 1 % V1 < V1 && 5 % V1 >= 0 && 5 % V1 < V1 && 5 % V1 != 1 % V1 && 8 % V1 >= 0 && 8 % V1 < V1 && 8 % V1 != 1 % V1 && 8 % V1 != 5 % V1 && 40 % V1 >= 0 && 40 % V1 < V1 && 40 % V1 != 1 % V1 && 40 % V1 != 5 % V1 && 40 % V1 != 8 % V1 && 64 % V1 >= 0 && 64 % V1 < V1 && 64 % V1 == 5 % V1 && 64 % V1 != 8 % V1 && 64 % V1 != 40 % V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_18(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_18";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (8 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (1 & V1 - 1) && (42 & V1 - 1) != (5 & V1 - 1) && (42 & V1 - 1) != (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_264(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_264";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) != (-2043122136 & V1 - 1) && (550015172 & V1 - 1) != (-26585344 & V1 - 1) && (550015172 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_493(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_493";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (-2043122136 & V1 - 1) && (190184342 & V1 - 1) != (867302602 & V1 - 1) && (-2029121872 & V1 - 1) >= 0 && (-2029121872 & V1 - 1) < V1 && (-2029121872 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_70(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_70";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (1 & V1 - 1) >= 0 && (1 & V1 - 1) < V1 && (5 & V1 - 1) >= 0 && (5 & V1 - 1) < V1 && (5 & V1 - 1) == (1 & V1 - 1) && (8 & V1 - 1) >= 0 && (8 & V1 - 1) < V1 && (8 & V1 - 1) != (1 & V1 - 1) && (42 & V1 - 1) >= 0 && (42 & V1 - 1) < V1 && (42 & V1 - 1) == (8 & V1 - 1) && (68 & V1 - 1) >= 0 && (68 & V1 - 1) < V1 && (68 & V1 - 1) == (8 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_498(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_498";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) != (-2043122136 & V1 - 1) && (388958728 & V1 - 1) >= 0 && (388958728 & V1 - 1) < V1 && (388958728 & V1 - 1) == (-2043122136 & V1 - 1) && (388958728 & V1 - 1) != (867302602 & V1 - 1) && (190184342 & V1 - 1) >= 0 && (190184342 & V1 - 1) < V1 && (190184342 & V1 - 1) == (867302602 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_428(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_428";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-26585344 & V1 - 1) && (1749220880 & V1 - 1) >= 0 && (1749220880 & V1 - 1) < V1 && (1749220880 & V1 - 1) != (-2043122136 & V1 - 1) && (1749220880 & V1 - 1) != (-26585344 & V1 - 1) && (-780691482 & V1 - 1) >= 0 && (-780691482 & V1 - 1) < V1 && (-780691482 & V1 - 1) == (1749220880 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_204(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_204";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-2043122136 & V1 - 1) + 2 >= V1 && V1 > 0 && (-2043122136 & V1 - 1) != 0 && (807110086 & V1 - 1) >= 0 && (807110086 & V1 - 1) < V1 && (807110086 & V1 - 1) != (-2043122136 & V1 - 1) && (807110086 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_401(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_401";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) == (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (2123915888 & V1 - 1) >= 0 && (2123915888 & V1 - 1) < V1 && (2123915888 & V1 - 1) == (-26585344 & V1 - 1) && (-1198890088 & V1 - 1) >= 0 && (-1198890088 & V1 - 1) < V1 && (-1198890088 & V1 - 1) == (-2043122136 & V1 - 1) && (-1198890088 & V1 - 1) != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_518(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_518";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) == (-2043122136 & V1 - 1) && (867302602 & V1 - 1) >= 0 && (867302602 & V1 - 1) < V1 && (867302602 & V1 - 1) == (-2043122136 & V1 - 1) && (790449556 & V1 - 1) >= 0 && (790449556 & V1 - 1) < V1 && (790449556 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) >= 0 && (768140076 & V1 - 1) < V1 && (768140076 & V1 - 1) != (-2043122136 & V1 - 1) && (768140076 & V1 - 1) != (790449556 & V1 - 1) && (-522666294 & V1 - 1) >= 0 && (-522666294 & V1 - 1) < V1 && (-522666294 & V1 - 1) == (790449556 & V1 - 1) && (-522666294 & V1 - 1) != (768140076 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_214(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_214";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 >= 0 && (-26585344 & V1 - 1) + 2 < V1 && (-26585344 & V1 - 1) + 2 == (-2043122136 & V1 - 1) && (-26585344 & V1 - 1) + 2 != (-26585344 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void constructCastlingPiecesMovementTracker_267(Integer count, Integer V1) {

		String pathCondition = "constructCastlingPiecesMovementTracker_267";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-2043122136 & V1 - 1) >= 0 && (-2043122136 & V1 - 1) < V1 && (-26585344 & V1 - 1) >= 0 && (-26585344 & V1 - 1) < V1 && (-26585344 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) >= 0 && (-1378069120 & V1 - 1) < V1 && (-1378069120 & V1 - 1) != (-2043122136 & V1 - 1) && (-1378069120 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) >= 0 && (1369083856 & V1 - 1) < V1 && (1369083856 & V1 - 1) != (-2043122136 & V1 - 1) && (1369083856 & V1 - 1) != (-26585344 & V1 - 1) && (1369083856 & V1 - 1) != (-1378069120 & V1 - 1) && (550015172 & V1 - 1) >= 0 && (550015172 & V1 - 1) < V1 && (550015172 & V1 - 1) == (-1378069120 & V1 - 1) && (550015172 & V1 - 1) != (1369083856 & V1 - 1) && (-91481742 & V1 - 1) >= 0 && (-91481742 & V1 - 1) < V1 && (-91481742 & V1 - 1) == (-2043122136 & V1 - 1) && (-91481742 & V1 - 1) != (-26585344 & V1 - 1) && (-91481742 & V1 - 1) != (-1378069120 & V1 - 1) && (-91481742 & V1 - 1) != (1369083856 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void cullIllegalMovesGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer cullIllegalMoves_11 = 0;
		Integer cullIllegalMoves_21 = 0;
		Integer cullIllegalMoves_12 = 0;
		Integer cullIllegalMoves_6 = 0;
		Integer cullIllegalMoves_17 = 0;
		Integer cullIllegalMoves_18 = 0;
		Integer cullIllegalMoves_23 = 0;
		Integer cullIllegalMoves_1 = 0;
		Integer cullIllegalMoves_4 = 0;
		Integer cullIllegalMoves_14 = 0;
		Integer cullIllegalMoves_15 = 0;
		Integer cullIllegalMoves_0 = 0;
		Integer cullIllegalMoves_24 = 0;
		Integer cullIllegalMoves_7 = 0;
		Integer cullIllegalMoves_13 = 0;
		Integer cullIllegalMoves_20 = 0;
		Integer cullIllegalMoves_2 = 0;
		Integer cullIllegalMoves_8 = 0;
		Integer cullIllegalMoves_16 = 0;
		Integer cullIllegalMoves_3 = 0;
		Integer cullIllegalMoves_10 = 0;
		Integer cullIllegalMoves_22 = 0;
		Integer cullIllegalMoves_19 = 0;
		Integer cullIllegalMoves_9 = 0;
		Integer cullIllegalMoves_27 = 0;
		Integer cullIllegalMoves_25 = 0;
		Integer cullIllegalMoves_26 = 0;
		Integer cullIllegalMoves_5 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV11 = expression("chessBoard.chessPieces.navigableKeySetView.m.fromStart","boolean");
		Integer V11 = !sV11.isEmpty() ? parseBoolean(sV11) : null;
		String sV2 = expression("chessBoard.chessPieces.navigableKeySet.m.fromStart","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
		String sV18 = expression("chessBoard.chessPieces.navigableKeySetView.m.toEnd","boolean");
		Integer V18 = !sV18.isEmpty() ? parseBoolean(sV18) : null;
		String sV3 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV12 = expression("chessBoard.chessPieces.keySet.this$0.fromStart","boolean");
		Integer V12 = !sV12.isEmpty() ? parseBoolean(sV12) : null;
		String sV16 = expression("chessBoard.chessPieces.navigableKeySet.m.toEnd","boolean");
		Integer V16 = !sV16.isEmpty() ? parseBoolean(sV16) : null;
		String sV9 = expression("chessBoard.chessPieces.keySet.elements.length","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV8 = expression("chessBoard.chessPieces.keySet.this$0.count","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV14 = expression("chessBoard.chessPieces.keySet.this$0.toEnd","boolean");
		Integer V14 = !sV14.isEmpty() ? parseBoolean(sV14) : null;
		String sV15 = expression("chessBoard.chessPieces.keySet.m.fromStart","boolean");
		Integer V15 = !sV15.isEmpty() ? parseBoolean(sV15) : null;
		String sV13 = expression("chessBoard.chessPieces.keySet.this$0.size","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV5 = expression("chessBoard.chessPieces.keySet.elements","long");
		Long V5 = !sV5.isEmpty() ? Long.parseLong(sV5) : null;
		String sV1 = expression("chessBoard.chessPieces.keySet.m.toEnd","boolean");
		Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;
		String sV6 = expression("[gui.ChessBoard.$assertionsDisabled","boolean");
		Integer V6 = !sV6.isEmpty() ? parseBoolean(sV6) : null;
		String sV19 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V19 = !sV19.isEmpty() ? parseBoolean(sV19) : null;
		String sV4 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV7 = expression("chessBoard.chessPieces.count","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV17 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V17 = !sV17.isEmpty() ? parseBoolean(sV17) : null;
		String sV10 = expression("chessBoard.chessPieces.size","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;

		cullIllegalMoves_11(cullIllegalMoves_11, V1);
		cullIllegalMoves_21(cullIllegalMoves_21, V2);
		cullIllegalMoves_12(cullIllegalMoves_12, V3, V4);
		cullIllegalMoves_6(cullIllegalMoves_6, V6, V5);
		cullIllegalMoves_17(cullIllegalMoves_17, V7);
		cullIllegalMoves_18(cullIllegalMoves_18, V7);
		cullIllegalMoves_23(cullIllegalMoves_23, V6);
		cullIllegalMoves_1(cullIllegalMoves_1, V8);
		cullIllegalMoves_4(cullIllegalMoves_4, V9);
		cullIllegalMoves_14(cullIllegalMoves_14, V10);
		cullIllegalMoves_15(cullIllegalMoves_15, V6, V10);
		cullIllegalMoves_0(cullIllegalMoves_0, V8);
		cullIllegalMoves_24(cullIllegalMoves_24, V11);
		cullIllegalMoves_7(cullIllegalMoves_7, V12);
		cullIllegalMoves_13(cullIllegalMoves_13, V3);
		cullIllegalMoves_20(cullIllegalMoves_20, V10);
		cullIllegalMoves_2(cullIllegalMoves_2, V13);
		cullIllegalMoves_8(cullIllegalMoves_8, V14);
		cullIllegalMoves_16(cullIllegalMoves_16, V6, V10);
		cullIllegalMoves_3(cullIllegalMoves_3, V13);
		cullIllegalMoves_10(cullIllegalMoves_10, V15);
		cullIllegalMoves_22(cullIllegalMoves_22, V16);
		cullIllegalMoves_19(cullIllegalMoves_19, V10);
		cullIllegalMoves_9(cullIllegalMoves_9, V6);
		cullIllegalMoves_27(cullIllegalMoves_27, V17);
		cullIllegalMoves_25(cullIllegalMoves_25, V18);
		cullIllegalMoves_26(cullIllegalMoves_26, V19);
		cullIllegalMoves_5(cullIllegalMoves_5, V6, V5);
				} 
			}
		currentObject = null;
	}

	private void cullIllegalMoves_11(Integer count, Integer V1) {

		String pathCondition = "cullIllegalMoves_11";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_21(Integer count, Integer V2) {

		String pathCondition = "cullIllegalMoves_21";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_12(Integer count, Integer V3, Integer V4) {

		String pathCondition = "cullIllegalMoves_12";

		if(V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_6(Integer count, Integer V6, Long V5) {

		String pathCondition = "cullIllegalMoves_6";

		if(V6 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 == 0 && V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_17(Integer count, Integer V7) {

		String pathCondition = "cullIllegalMoves_17";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_18(Integer count, Integer V7) {

		String pathCondition = "cullIllegalMoves_18";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_23(Integer count, Integer V6) {

		String pathCondition = "cullIllegalMoves_23";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_1(Integer count, Integer V8) {

		String pathCondition = "cullIllegalMoves_1";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_4(Integer count, Integer V9) {

		String pathCondition = "cullIllegalMoves_4";

		if(V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 >= 0 && V9 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_14(Integer count, Integer V10) {

		String pathCondition = "cullIllegalMoves_14";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_15(Integer count, Integer V6, Integer V10) {

		String pathCondition = "cullIllegalMoves_15";

		if(V6 == null || V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0 && V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_0(Integer count, Integer V8) {

		String pathCondition = "cullIllegalMoves_0";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_24(Integer count, Integer V11) {

		String pathCondition = "cullIllegalMoves_24";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_7(Integer count, Integer V12) {

		String pathCondition = "cullIllegalMoves_7";

		if(V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_13(Integer count, Integer V3) {

		String pathCondition = "cullIllegalMoves_13";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_20(Integer count, Integer V10) {

		String pathCondition = "cullIllegalMoves_20";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_2(Integer count, Integer V13) {

		String pathCondition = "cullIllegalMoves_2";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_8(Integer count, Integer V14) {

		String pathCondition = "cullIllegalMoves_8";

		if(V14 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_16(Integer count, Integer V6, Integer V10) {

		String pathCondition = "cullIllegalMoves_16";

		if(V6 == null || V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0 && V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_3(Integer count, Integer V13) {

		String pathCondition = "cullIllegalMoves_3";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_10(Integer count, Integer V15) {

		String pathCondition = "cullIllegalMoves_10";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_22(Integer count, Integer V16) {

		String pathCondition = "cullIllegalMoves_22";

		if(V16 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V16 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_19(Integer count, Integer V10) {

		String pathCondition = "cullIllegalMoves_19";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_9(Integer count, Integer V6) {

		String pathCondition = "cullIllegalMoves_9";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_27(Integer count, Integer V17) {

		String pathCondition = "cullIllegalMoves_27";

		if(V17 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V17 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_25(Integer count, Integer V18) {

		String pathCondition = "cullIllegalMoves_25";

		if(V18 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V18 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_26(Integer count, Integer V19) {

		String pathCondition = "cullIllegalMoves_26";

		if(V19 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V19 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullIllegalMoves_5(Integer count, Integer V6, Long V5) {

		String pathCondition = "cullIllegalMoves_5";

		if(V6 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 == 0 && V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void cullSpecialCasesGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer cullSpecialCases_5 = 0;
		Integer cullSpecialCases_4 = 0;
		Integer cullSpecialCases_3 = 0;
		Integer cullSpecialCases_2 = 0;
		Integer cullSpecialCases_1 = 0;
		Integer cullSpecialCases_0 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV2 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV3 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV1 = expression("chessBoard.chessPieces.table.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;

		cullSpecialCases_5(cullSpecialCases_5, V1);
		cullSpecialCases_4(cullSpecialCases_4, V1);
		cullSpecialCases_3(cullSpecialCases_3, V2, V3);
		cullSpecialCases_2(cullSpecialCases_2 );
		cullSpecialCases_1(cullSpecialCases_1, V2);
		cullSpecialCases_0(cullSpecialCases_0, V2, V3);
				} 
			}
		currentObject = null;
	}

	private void cullSpecialCases_5(Integer count, Integer V1) {

		String pathCondition = "cullSpecialCases_5";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullSpecialCases_4(Integer count, Integer V1) {

		String pathCondition = "cullSpecialCases_4";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullSpecialCases_3(Integer count, Integer V2, Integer V3) {

		String pathCondition = "cullSpecialCases_3";

		if(V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 >= 0 && V2 > 0 && V3 < 0 && 1 >= V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullSpecialCases_2(Integer count) {

//		String pathCondition = "cullSpecialCases_2";
//
//		if(){
//			if (count == null)
//				values.put(pathCondition, 0);
//		} else if (true){
//			if (count == null)
//				values.put(pathCondition, 1);
//			else
//				values.put(pathCondition, count + 1);
//		} else {
//			if (count == null)
//				values.put(pathCondition, 0);
//		}
	}


	private void cullSpecialCases_1(Integer count, Integer V2) {

		String pathCondition = "cullSpecialCases_1";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 >= 0 && V2 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void cullSpecialCases_0(Integer count, Integer V2, Integer V3) {

		String pathCondition = "cullSpecialCases_0";

		if(V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 >= 0 && V2 > 0 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void determineIfCurrentPlayerIsInCheckGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer determineIfCurrentPlayerIsInCheck_16 = 0;
		Integer determineIfCurrentPlayerIsInCheck_3 = 0;
		Integer determineIfCurrentPlayerIsInCheck_27 = 0;
		Integer determineIfCurrentPlayerIsInCheck_28 = 0;
		Integer determineIfCurrentPlayerIsInCheck_6 = 0;
		Integer determineIfCurrentPlayerIsInCheck_14 = 0;
		Integer determineIfCurrentPlayerIsInCheck_4 = 0;
		Integer determineIfCurrentPlayerIsInCheck_35 = 0;
		Integer determineIfCurrentPlayerIsInCheck_15 = 0;
		Integer determineIfCurrentPlayerIsInCheck_36 = 0;
		Integer determineIfCurrentPlayerIsInCheck_46 = 0;
		Integer determineIfCurrentPlayerIsInCheck_7 = 0;
		Integer determineIfCurrentPlayerIsInCheck_25 = 0;
		Integer determineIfCurrentPlayerIsInCheck_37 = 0;
		Integer determineIfCurrentPlayerIsInCheck_11 = 0;
		Integer determineIfCurrentPlayerIsInCheck_38 = 0;
		Integer determineIfCurrentPlayerIsInCheck_18 = 0;
		Integer determineIfCurrentPlayerIsInCheck_21 = 0;
		Integer determineIfCurrentPlayerIsInCheck_22 = 0;
		Integer determineIfCurrentPlayerIsInCheck_32 = 0;
		Integer determineIfCurrentPlayerIsInCheck_33 = 0;
		Integer determineIfCurrentPlayerIsInCheck_20 = 0;
		Integer determineIfCurrentPlayerIsInCheck_0 = 0;
		Integer determineIfCurrentPlayerIsInCheck_44 = 0;
		Integer determineIfCurrentPlayerIsInCheck_5 = 0;
		Integer determineIfCurrentPlayerIsInCheck_12 = 0;
		Integer determineIfCurrentPlayerIsInCheck_29 = 0;
		Integer determineIfCurrentPlayerIsInCheck_45 = 0;
		Integer determineIfCurrentPlayerIsInCheck_42 = 0;
		Integer determineIfCurrentPlayerIsInCheck_8 = 0;
		Integer determineIfCurrentPlayerIsInCheck_13 = 0;
		Integer determineIfCurrentPlayerIsInCheck_34 = 0;
		Integer determineIfCurrentPlayerIsInCheck_9 = 0;
		Integer determineIfCurrentPlayerIsInCheck_26 = 0;
		Integer determineIfCurrentPlayerIsInCheck_41 = 0;
		Integer determineIfCurrentPlayerIsInCheck_40 = 0;
		Integer determineIfCurrentPlayerIsInCheck_10 = 0;
		Integer determineIfCurrentPlayerIsInCheck_1 = 0;
		Integer determineIfCurrentPlayerIsInCheck_30 = 0;
		Integer determineIfCurrentPlayerIsInCheck_23 = 0;
		Integer determineIfCurrentPlayerIsInCheck_17 = 0;
		Integer determineIfCurrentPlayerIsInCheck_31 = 0;
		Integer determineIfCurrentPlayerIsInCheck_43 = 0;
		Integer determineIfCurrentPlayerIsInCheck_24 = 0;
		Integer determineIfCurrentPlayerIsInCheck_19 = 0;
		Integer determineIfCurrentPlayerIsInCheck_2 = 0;
		Integer determineIfCurrentPlayerIsInCheck_39 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV3 = expression("chessBoard.chessPieces.keySet.this$0.this$0.runAttributes.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV17 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements.length","int");
		Integer V17 = !sV17.isEmpty() ? Integer.parseInt(sV17) : null;
		String sV23 = expression("chessBoard.chessPieces.keySet.map.keySet.elements.length","int");
		Integer V23 = !sV23.isEmpty() ? Integer.parseInt(sV23) : null;
		String sV21 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements","long");
		Long V21 = !sV21.isEmpty() ? Long.parseLong(sV21) : null;
		String sV6 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV14 = expression("chessBoard.chessPieces.keySet.map.keySet.elements","long");
		Long V14 = !sV14.isEmpty() ? Long.parseLong(sV14) : null;
		String sV9 = expression("chessBoard.chessPieces.entrySet.elements.length","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV18 = expression("chessBoard.chessPieces.keySet.this$0.fromStart","boolean");
		Integer V18 = !sV18.isEmpty() ? parseBoolean(sV18) : null;
		String sV16 = expression("chessBoard.chessPieces.keySet.elements.length","int");
		Integer V16 = !sV16.isEmpty() ? Integer.parseInt(sV16) : null;
		String sV4 = expression("chessBoard.chessPieces.keySet.this$0.runIndex","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV15 = expression("chessBoard.chessPieces.keySet.this$0.count","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV19 = expression("chessBoard.chessPieces.keySet.this$0.toEnd","boolean");
		Integer V19 = !sV19.isEmpty() ? parseBoolean(sV19) : null;
		String sV20 = expression("chessBoard.chessPieces.keySet.m.fromStart","boolean");
		Integer V20 = !sV20.isEmpty() ? parseBoolean(sV20) : null;
		String sV8 = expression("chessBoard.chessPieces.keySet.this$0.size","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV1 = expression("chessBoard.chessPieces.entrySet.elements","long");
		Long V1 = !sV1.isEmpty() ? Long.parseLong(sV1) : null;
		String sV12 = expression("chessBoard.chessPieces.keySet.elements","long");
		Long V12 = !sV12.isEmpty() ? Long.parseLong(sV12) : null;
		String sV5 = expression("chessBoard.chessPieces.keySet.m.toEnd","boolean");
		Integer V5 = !sV5.isEmpty() ? parseBoolean(sV5) : null;
		String sV2 = expression("[gui.ChessBoard.$assertionsDisabled","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
		String sV11 = expression("chessBoard.chessPieces.table.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV22 = expression("chessBoard.chessPieces.vals.length","int");
		Integer V22 = !sV22.isEmpty() ? Integer.parseInt(sV22) : null;
		String sV7 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV13 = expression("chessBoard.chessPieces.count","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV10 = expression("chessBoard.chessPieces.size","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;

		determineIfCurrentPlayerIsInCheck_16(determineIfCurrentPlayerIsInCheck_16, V1, V2);
		determineIfCurrentPlayerIsInCheck_3(determineIfCurrentPlayerIsInCheck_3, V3, V4);
		determineIfCurrentPlayerIsInCheck_27(determineIfCurrentPlayerIsInCheck_27, V5);
		determineIfCurrentPlayerIsInCheck_28(determineIfCurrentPlayerIsInCheck_28, V6, V7);
		determineIfCurrentPlayerIsInCheck_6(determineIfCurrentPlayerIsInCheck_6, V8, V2);
		determineIfCurrentPlayerIsInCheck_14(determineIfCurrentPlayerIsInCheck_14, V9);
		determineIfCurrentPlayerIsInCheck_4(determineIfCurrentPlayerIsInCheck_4, V3);
		determineIfCurrentPlayerIsInCheck_35(determineIfCurrentPlayerIsInCheck_35, V10, V11, V2);
		determineIfCurrentPlayerIsInCheck_15(determineIfCurrentPlayerIsInCheck_15, V1, V2);
		determineIfCurrentPlayerIsInCheck_36(determineIfCurrentPlayerIsInCheck_36, V10, V11, V2);
		determineIfCurrentPlayerIsInCheck_46(determineIfCurrentPlayerIsInCheck_46, V10, V11, V2);
		determineIfCurrentPlayerIsInCheck_7(determineIfCurrentPlayerIsInCheck_7, V8, V2);
		determineIfCurrentPlayerIsInCheck_25(determineIfCurrentPlayerIsInCheck_25, V12, V2);
		determineIfCurrentPlayerIsInCheck_37(determineIfCurrentPlayerIsInCheck_37, V13);
		determineIfCurrentPlayerIsInCheck_11(determineIfCurrentPlayerIsInCheck_11, V2);
		determineIfCurrentPlayerIsInCheck_38(determineIfCurrentPlayerIsInCheck_38, V13);
		determineIfCurrentPlayerIsInCheck_18(determineIfCurrentPlayerIsInCheck_18, V14, V2);
		determineIfCurrentPlayerIsInCheck_21(determineIfCurrentPlayerIsInCheck_21, V15);
		determineIfCurrentPlayerIsInCheck_22(determineIfCurrentPlayerIsInCheck_22, V16);
		determineIfCurrentPlayerIsInCheck_32(determineIfCurrentPlayerIsInCheck_32, V10);
		determineIfCurrentPlayerIsInCheck_33(determineIfCurrentPlayerIsInCheck_33, V10, V2);
		determineIfCurrentPlayerIsInCheck_20(determineIfCurrentPlayerIsInCheck_20, V15);
		determineIfCurrentPlayerIsInCheck_0(determineIfCurrentPlayerIsInCheck_0, V17);
		determineIfCurrentPlayerIsInCheck_44(determineIfCurrentPlayerIsInCheck_44, V10, V11, V2);
		determineIfCurrentPlayerIsInCheck_5(determineIfCurrentPlayerIsInCheck_5, V8);
		determineIfCurrentPlayerIsInCheck_12(determineIfCurrentPlayerIsInCheck_12, V18);
		determineIfCurrentPlayerIsInCheck_29(determineIfCurrentPlayerIsInCheck_29, V6);
		determineIfCurrentPlayerIsInCheck_45(determineIfCurrentPlayerIsInCheck_45, V10, V11, V2);
		determineIfCurrentPlayerIsInCheck_42(determineIfCurrentPlayerIsInCheck_42, V10);
		determineIfCurrentPlayerIsInCheck_8(determineIfCurrentPlayerIsInCheck_8, V8);
		determineIfCurrentPlayerIsInCheck_13(determineIfCurrentPlayerIsInCheck_13, V19);
		determineIfCurrentPlayerIsInCheck_34(determineIfCurrentPlayerIsInCheck_34, V10, V2);
		determineIfCurrentPlayerIsInCheck_9(determineIfCurrentPlayerIsInCheck_9, V8);
		determineIfCurrentPlayerIsInCheck_26(determineIfCurrentPlayerIsInCheck_26, V20);
		determineIfCurrentPlayerIsInCheck_41(determineIfCurrentPlayerIsInCheck_41, V10);
		determineIfCurrentPlayerIsInCheck_40(determineIfCurrentPlayerIsInCheck_40, V11, V13, V2);
		determineIfCurrentPlayerIsInCheck_10(determineIfCurrentPlayerIsInCheck_10, V2);
		determineIfCurrentPlayerIsInCheck_1(determineIfCurrentPlayerIsInCheck_1, V21, V2);
		determineIfCurrentPlayerIsInCheck_30(determineIfCurrentPlayerIsInCheck_30, V22, V2);
		determineIfCurrentPlayerIsInCheck_23(determineIfCurrentPlayerIsInCheck_23, V12);
		determineIfCurrentPlayerIsInCheck_17(determineIfCurrentPlayerIsInCheck_17, V23);
		determineIfCurrentPlayerIsInCheck_31(determineIfCurrentPlayerIsInCheck_31, V22, V2);
		determineIfCurrentPlayerIsInCheck_43(determineIfCurrentPlayerIsInCheck_43, V10, V11, V2);
		determineIfCurrentPlayerIsInCheck_24(determineIfCurrentPlayerIsInCheck_24, V12, V2);
		determineIfCurrentPlayerIsInCheck_19(determineIfCurrentPlayerIsInCheck_19, V14, V2);
		determineIfCurrentPlayerIsInCheck_2(determineIfCurrentPlayerIsInCheck_2, V21, V2);
		determineIfCurrentPlayerIsInCheck_39(determineIfCurrentPlayerIsInCheck_39, V11, V13, V2);
				} 
			}
		currentObject = null;
	}

	private void determineIfCurrentPlayerIsInCheck_16(Integer count, Long V1, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_16";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_3(Integer count, Integer V3, Integer V4) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_3";

		if(V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_27(Integer count, Integer V5) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_27";

		if(V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_28(Integer count, Integer V6, Integer V7) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_28";

		if(V6 == null || V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 >= 0 && V7 >= 0 && V7 < V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_6(Integer count, Integer V8, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_6";

		if(V8 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_14(Integer count, Integer V9) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_14";

		if(V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 >= 0 && V9 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_4(Integer count, Integer V3) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_4";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_35(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_35";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0 && V11 >= 0 && V11 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_15(Integer count, Long V1, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_15";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_36(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_36";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0 && V11 >= 0 && V11 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_46(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_46";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0 && V11 >= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_7(Integer count, Integer V8, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_7";

		if(V8 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_25(Integer count, Long V12, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_25";

		if(V12 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_37(Integer count, Integer V13) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_37";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_11(Integer count, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_11";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_38(Integer count, Integer V13) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_38";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_18(Integer count, Long V14, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_18";

		if(V14 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_21(Integer count, Integer V15) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_21";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_22(Integer count, Integer V16) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_22";

		if(V16 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V16 >= 0 && V16 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_32(Integer count, Integer V10) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_32";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_33(Integer count, Integer V10, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_33";

		if(V10 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_20(Integer count, Integer V15) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_20";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_0(Integer count, Integer V17) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_0";

		if(V17 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V17 >= 0 && V17 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_44(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_44";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0 && V11 >= 0 && V11 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_5(Integer count, Integer V8) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_5";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_12(Integer count, Integer V18) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_12";

		if(V18 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V18 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_29(Integer count, Integer V6) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_29";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_45(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_45";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0 && V11 >= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_42(Integer count, Integer V10) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_42";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_8(Integer count, Integer V8) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_8";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_13(Integer count, Integer V19) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_13";

		if(V19 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V19 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_34(Integer count, Integer V10, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_34";

		if(V10 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_9(Integer count, Integer V8) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_9";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_26(Integer count, Integer V20) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_26";

		if(V20 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V20 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_41(Integer count, Integer V10) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_41";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_40(Integer count, Integer V11, Integer V13, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_40";

		if(V11 == null || V13 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V11 >= 0 && V11 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_10(Integer count, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_10";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_1(Integer count, Long V21, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_1";

		if(V21 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V21 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_30(Integer count, Integer V22, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_30";

		if(V22 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V22 >= 0 && V22 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_23(Integer count, Long V12) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_23";

		if(V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_17(Integer count, Integer V23) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_17";

		if(V23 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V23 >= 0 && V23 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_31(Integer count, Integer V22, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_31";

		if(V22 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V22 >= 0 && V22 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_43(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_43";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0 && V11 >= 0 && V11 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_24(Integer count, Long V12, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_24";

		if(V12 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_19(Integer count, Long V14, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_19";

		if(V14 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_2(Integer count, Long V21, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_2";

		if(V21 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V21 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void determineIfCurrentPlayerIsInCheck_39(Integer count, Integer V11, Integer V13, Integer V2) {

		String pathCondition = "determineIfCurrentPlayerIsInCheck_39";

		if(V11 == null || V13 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V11 >= 0 && V11 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void duplicateArrayListGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer duplicateArrayList_2 = 0;
		Integer duplicateArrayList_4 = 0;
		Integer duplicateArrayList_3 = 0;
		Integer duplicateArrayList_5 = 0;
		Integer duplicateArrayList_1 = 0;
		Integer duplicateArrayList_0 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV1 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV2 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV3 = expression("[java.lang.AbstractStringBuilder.sizeTable[1]","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;

		duplicateArrayList_2(duplicateArrayList_2, V1, V2);
		duplicateArrayList_4(duplicateArrayList_4 );
		duplicateArrayList_3(duplicateArrayList_3, V1);
		duplicateArrayList_5(duplicateArrayList_5, V1, V2, V3);
		duplicateArrayList_1(duplicateArrayList_1, V1, V2, V3);
		duplicateArrayList_0(duplicateArrayList_0, V1, V2);
				} 
			}
		currentObject = null;
	}

	private void duplicateArrayList_2(Integer count, Integer V1, Integer V2) {

		String pathCondition = "duplicateArrayList_2";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 < 0 && 1 >= V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void duplicateArrayList_4(Integer count ) {

//		String pathCondition = "duplicateArrayList_4";
//
//		if(){
//			if (count == null)
//				values.put(pathCondition, 0);
//		} else if (true){
//			if (count == null)
//				values.put(pathCondition, 1);
//			else
//				values.put(pathCondition, count + 1);
//		} else {
//			if (count == null)
//				values.put(pathCondition, 0);
//		}
	}


	private void duplicateArrayList_3(Integer count, Integer V1) {

		String pathCondition = "duplicateArrayList_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void duplicateArrayList_5(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "duplicateArrayList_5";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 < 0 && 1 < V1 && V3 < 0 && 2 >= V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void duplicateArrayList_1(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "duplicateArrayList_1";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 < 0 && 1 < V1 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void duplicateArrayList_0(Integer count, Integer V1, Integer V2) {

		String pathCondition = "duplicateArrayList_0";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0 && V2 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void getCheckedLineGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer getCheckedLine_2 = 0;
		Integer getCheckedLine_23 = 0;
		Integer getCheckedLine_24 = 0;
		Integer getCheckedLine_5 = 0;
		Integer getCheckedLine_11 = 0;
		Integer getCheckedLine_3 = 0;
		Integer getCheckedLine_30 = 0;
		Integer getCheckedLine_12 = 0;
		Integer getCheckedLine_20 = 0;
		Integer getCheckedLine_31 = 0;
		Integer getCheckedLine_21 = 0;
		Integer getCheckedLine_32 = 0;
		Integer getCheckedLine_14 = 0;
		Integer getCheckedLine_16 = 0;
		Integer getCheckedLine_17 = 0;
		Integer getCheckedLine_27 = 0;
		Integer getCheckedLine_28 = 0;
		Integer getCheckedLine_15 = 0;
		Integer getCheckedLine_0 = 0;
		Integer getCheckedLine_4 = 0;
		Integer getCheckedLine_9 = 0;
		Integer getCheckedLine_25 = 0;
		Integer getCheckedLine_6 = 0;
		Integer getCheckedLine_10 = 0;
		Integer getCheckedLine_29 = 0;
		Integer getCheckedLine_7 = 0;
		Integer getCheckedLine_22 = 0;
		Integer getCheckedLine_8 = 0;
		Integer getCheckedLine_1 = 0;
		Integer getCheckedLine_26 = 0;
		Integer getCheckedLine_18 = 0;
		Integer getCheckedLine_13 = 0;
		Integer getCheckedLine_19 = 0;
		Integer getCheckedLine_33 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV1 = expression("chessBoard.chessPieces.keySet.this$0.this$0.runAttributes.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV17 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements.length","int");
		Integer V17 = !sV17.isEmpty() ? Integer.parseInt(sV17) : null;
		String sV23 = expression("chessBoard.chessPieces.keySet.map.keySet.elements.length","int");
		Integer V23 = !sV23.isEmpty() ? Integer.parseInt(sV23) : null;
		String sV21 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements","long");
		Long V21 = !sV21.isEmpty() ? Long.parseLong(sV21) : null;
		String sV4 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV14 = expression("chessBoard.chessPieces.keySet.map.keySet.elements","long");
		Long V14 = !sV14.isEmpty() ? Long.parseLong(sV14) : null;
		String sV8 = expression("chessBoard.chessPieces.entrySet.elements.length","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV18 = expression("chessBoard.chessPieces.keySet.this$0.fromStart","boolean");
		Integer V18 = !sV18.isEmpty() ? parseBoolean(sV18) : null;
		String sV16 = expression("chessBoard.chessPieces.keySet.elements.length","int");
		Integer V16 = !sV16.isEmpty() ? Integer.parseInt(sV16) : null;
		String sV2 = expression("chessBoard.chessPieces.keySet.this$0.runIndex","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV15 = expression("chessBoard.chessPieces.keySet.this$0.count","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV19 = expression("chessBoard.chessPieces.keySet.this$0.toEnd","boolean");
		Integer V19 = !sV19.isEmpty() ? parseBoolean(sV19) : null;
		String sV20 = expression("chessBoard.chessPieces.keySet.m.fromStart","boolean");
		Integer V20 = !sV20.isEmpty() ? parseBoolean(sV20) : null;
		String sV6 = expression("chessBoard.chessPieces.keySet.this$0.size","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV11 = expression("chessBoard.chessPieces.entrySet.elements","long");
		Long V11 = !sV11.isEmpty() ? Long.parseLong(sV11) : null;
		String sV12 = expression("chessBoard.chessPieces.keySet.elements","long");
		Long V12 = !sV12.isEmpty() ? Long.parseLong(sV12) : null;
		String sV3 = expression("chessBoard.chessPieces.keySet.m.toEnd","boolean");
		Integer V3 = !sV3.isEmpty() ? parseBoolean(sV3) : null;
		String sV7 = expression("[gui.ChessBoard.$assertionsDisabled","boolean");
		Integer V7 = !sV7.isEmpty() ? parseBoolean(sV7) : null;
		String sV10 = expression("chessBoard.chessPieces.table.length","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV22 = expression("chessBoard.chessPieces.vals.length","int");
		Integer V22 = !sV22.isEmpty() ? Integer.parseInt(sV22) : null;
		String sV5 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV13 = expression("chessBoard.chessPieces.count","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV9 = expression("chessBoard.chessPieces.size","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;

		getCheckedLine_2(getCheckedLine_2, V1, V2);
		getCheckedLine_23(getCheckedLine_23, V3);
		getCheckedLine_24(getCheckedLine_24, V4, V5);
		getCheckedLine_5(getCheckedLine_5, V6, V7);
		getCheckedLine_11(getCheckedLine_11, V8);
		getCheckedLine_3(getCheckedLine_3, V1);
		getCheckedLine_30(getCheckedLine_30, V7, V9, V10);
		getCheckedLine_12(getCheckedLine_12, V7, V11);
		getCheckedLine_20(getCheckedLine_20, V7, V12);
		getCheckedLine_31(getCheckedLine_31, V13);
		getCheckedLine_21(getCheckedLine_21, V7);
		getCheckedLine_32(getCheckedLine_32, V13);
		getCheckedLine_14(getCheckedLine_14, V7, V14);
		getCheckedLine_16(getCheckedLine_16, V15);
		getCheckedLine_17(getCheckedLine_17, V16);
		getCheckedLine_27(getCheckedLine_27, V9);
		getCheckedLine_28(getCheckedLine_28, V7, V9);
		getCheckedLine_15(getCheckedLine_15, V15);
		getCheckedLine_0(getCheckedLine_0, V17);
		getCheckedLine_4(getCheckedLine_4, V6);
		getCheckedLine_9(getCheckedLine_9, V18);
		getCheckedLine_25(getCheckedLine_25, V4);
		getCheckedLine_6(getCheckedLine_6, V6);
		getCheckedLine_10(getCheckedLine_10, V19);
		getCheckedLine_29(getCheckedLine_29, V7, V9);
		getCheckedLine_7(getCheckedLine_7, V6);
		getCheckedLine_22(getCheckedLine_22, V20);
		getCheckedLine_8(getCheckedLine_8, V7);
		getCheckedLine_1(getCheckedLine_1, V7, V21);
		getCheckedLine_26(getCheckedLine_26, V7, V22);
		getCheckedLine_18(getCheckedLine_18, V12);
		getCheckedLine_13(getCheckedLine_13, V23);
		getCheckedLine_19(getCheckedLine_19, V7, V12);
		getCheckedLine_33(getCheckedLine_33, V7, V10, V13);
				} 
			}
		currentObject = null;
	}

	private void getCheckedLine_2(Integer count, Integer V1, Integer V2) {

		String pathCondition = "getCheckedLine_2";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && V2 < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_23(Integer count, Integer V3) {

		String pathCondition = "getCheckedLine_23";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_24(Integer count, Integer V4, Integer V5) {

		String pathCondition = "getCheckedLine_24";

		if(V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 >= 0 && V5 >= 0 && V5 < V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_5(Integer count, Integer V6, Integer V7) {

		String pathCondition = "getCheckedLine_5";

		if(V6 == null || V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 <= 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_11(Integer count, Integer V8) {

		String pathCondition = "getCheckedLine_11";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 >= 0 && V8 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_3(Integer count, Integer V1) {

		String pathCondition = "getCheckedLine_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_30(Integer count, Integer V7, Integer V9, Integer V10) {

		String pathCondition = "getCheckedLine_30";

		if(V7 == null || V9 == null || V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 > 0 && V10 >= 0 && V10 <= 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_12(Integer count, Integer V7, Long V11) {

		String pathCondition = "getCheckedLine_12";

		if(V7 == null || V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 == 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_20(Integer count, Integer V7, Long V12) {

		String pathCondition = "getCheckedLine_20";

		if(V7 == null || V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 == 0 && V7 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_31(Integer count, Integer V13) {

		String pathCondition = "getCheckedLine_31";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_21(Integer count, Integer V7) {

		String pathCondition = "getCheckedLine_21";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_32(Integer count, Integer V13) {

		String pathCondition = "getCheckedLine_32";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_14(Integer count, Integer V7, Long V14) {

		String pathCondition = "getCheckedLine_14";

		if(V7 == null || V14 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_16(Integer count, Integer V15) {

		String pathCondition = "getCheckedLine_16";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_17(Integer count, Integer V16) {

		String pathCondition = "getCheckedLine_17";

		if(V16 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V16 >= 0 && V16 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_27(Integer count, Integer V9) {

		String pathCondition = "getCheckedLine_27";

		if(V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_28(Integer count, Integer V7, Integer V9) {

		String pathCondition = "getCheckedLine_28";

		if(V7 == null || V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 <= 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_15(Integer count, Integer V15) {

		String pathCondition = "getCheckedLine_15";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_0(Integer count, Integer V17) {

		String pathCondition = "getCheckedLine_0";

		if(V17 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V17 >= 0 && V17 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_4(Integer count, Integer V6) {

		String pathCondition = "getCheckedLine_4";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_9(Integer count, Integer V18) {

		String pathCondition = "getCheckedLine_9";

		if(V18 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V18 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_25(Integer count, Integer V4) {

		String pathCondition = "getCheckedLine_25";

		if(V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_6(Integer count, Integer V6) {

		String pathCondition = "getCheckedLine_6";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_10(Integer count, Integer V19) {

		String pathCondition = "getCheckedLine_10";

		if(V19 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V19 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_29(Integer count, Integer V7, Integer V9) {

		String pathCondition = "getCheckedLine_29";

		if(V7 == null || V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 <= 0 && V7 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_7(Integer count, Integer V6) {

		String pathCondition = "getCheckedLine_7";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_22(Integer count, Integer V20) {

		String pathCondition = "getCheckedLine_22";

		if(V20 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V20 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_8(Integer count, Integer V7) {

		String pathCondition = "getCheckedLine_8";

		if(V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_1(Integer count, Integer V7, Long V21) {

		String pathCondition = "getCheckedLine_1";

		if(V7 == null || V21 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V21 == 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_26(Integer count, Integer V7, Integer V22) {

		String pathCondition = "getCheckedLine_26";

		if(V7 == null || V22 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V22 >= 0 && V22 <= 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_18(Integer count, Long V12) {

		String pathCondition = "getCheckedLine_18";

		if(V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_13(Integer count, Integer V23) {

		String pathCondition = "getCheckedLine_13";

		if(V23 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V23 >= 0 && V23 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_19(Integer count, Integer V7, Long V12) {

		String pathCondition = "getCheckedLine_19";

		if(V7 == null || V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 == 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void getCheckedLine_33(Integer count, Integer V7, Integer V10, Integer V13) {

		String pathCondition = "getCheckedLine_33";

		if(V7 == null || V10 == null || V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V10 >= 0 && V10 <= 0 && V7 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void getThreateningLinesGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer getThreateningLines_0 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV1 = expression("chessBoard.chessPieces.table.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;

		getThreateningLines_0(getThreateningLines_0, V1);
				} 
			}
		currentObject = null;
	}

	private void getThreateningLines_0(Integer count, Integer V1) {

		String pathCondition = "getThreateningLines_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void isCheckmateGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer isCheckmate_16 = 0;
		Integer isCheckmate_3 = 0;
		Integer isCheckmate_27 = 0;
		Integer isCheckmate_28 = 0;
		Integer isCheckmate_6 = 0;
		Integer isCheckmate_14 = 0;
		Integer isCheckmate_4 = 0;
		Integer isCheckmate_35 = 0;
		Integer isCheckmate_15 = 0;
		Integer isCheckmate_36 = 0;
		Integer isCheckmate_46 = 0;
		Integer isCheckmate_7 = 0;
		Integer isCheckmate_25 = 0;
		Integer isCheckmate_37 = 0;
		Integer isCheckmate_11 = 0;
		Integer isCheckmate_38 = 0;
		Integer isCheckmate_18 = 0;
		Integer isCheckmate_21 = 0;
		Integer isCheckmate_22 = 0;
		Integer isCheckmate_32 = 0;
		Integer isCheckmate_33 = 0;
		Integer isCheckmate_20 = 0;
		Integer isCheckmate_0 = 0;
		Integer isCheckmate_44 = 0;
		Integer isCheckmate_5 = 0;
		Integer isCheckmate_12 = 0;
		Integer isCheckmate_29 = 0;
		Integer isCheckmate_45 = 0;
		Integer isCheckmate_42 = 0;
		Integer isCheckmate_8 = 0;
		Integer isCheckmate_13 = 0;
		Integer isCheckmate_34 = 0;
		Integer isCheckmate_9 = 0;
		Integer isCheckmate_26 = 0;
		Integer isCheckmate_41 = 0;
		Integer isCheckmate_40 = 0;
		Integer isCheckmate_10 = 0;
		Integer isCheckmate_1 = 0;
		Integer isCheckmate_30 = 0;
		Integer isCheckmate_23 = 0;
		Integer isCheckmate_17 = 0;
		Integer isCheckmate_31 = 0;
		Integer isCheckmate_43 = 0;
		Integer isCheckmate_24 = 0;
		Integer isCheckmate_19 = 0;
		Integer isCheckmate_2 = 0;
		Integer isCheckmate_39 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV3 = expression("chessBoard.chessPieces.keySet.this$0.this$0.runAttributes.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV17 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements.length","int");
		Integer V17 = !sV17.isEmpty() ? Integer.parseInt(sV17) : null;
		String sV23 = expression("chessBoard.chessPieces.keySet.map.keySet.elements.length","int");
		Integer V23 = !sV23.isEmpty() ? Integer.parseInt(sV23) : null;
		String sV21 = expression("chessBoard.chessPieces.keySet.this$0.entrySet.elements","long");
		Long V21 = !sV21.isEmpty() ? Long.parseLong(sV21) : null;
		String sV6 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV14 = expression("chessBoard.chessPieces.keySet.map.keySet.elements","long");
		Long V14 = !sV14.isEmpty() ? Long.parseLong(sV14) : null;
		String sV9 = expression("chessBoard.chessPieces.entrySet.elements.length","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV18 = expression("chessBoard.chessPieces.keySet.this$0.fromStart","boolean");
		Integer V18 = !sV18.isEmpty() ? parseBoolean(sV18) : null;
		String sV16 = expression("chessBoard.chessPieces.keySet.elements.length","int");
		Integer V16 = !sV16.isEmpty() ? Integer.parseInt(sV16) : null;
		String sV4 = expression("chessBoard.chessPieces.keySet.this$0.runIndex","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV15 = expression("chessBoard.chessPieces.keySet.this$0.count","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV19 = expression("chessBoard.chessPieces.keySet.this$0.toEnd","boolean");
		Integer V19 = !sV19.isEmpty() ? parseBoolean(sV19) : null;
		String sV20 = expression("chessBoard.chessPieces.keySet.m.fromStart","boolean");
		Integer V20 = !sV20.isEmpty() ? parseBoolean(sV20) : null;
		String sV8 = expression("chessBoard.chessPieces.keySet.this$0.size","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV1 = expression("chessBoard.chessPieces.entrySet.elements","long");
		Long V1 = !sV1.isEmpty() ? Long.parseLong(sV1) : null;
		String sV12 = expression("chessBoard.chessPieces.keySet.elements","long");
		Long V12 = !sV12.isEmpty() ? Long.parseLong(sV12) : null;
		String sV5 = expression("chessBoard.chessPieces.keySet.m.toEnd","boolean");
		Integer V5 = !sV5.isEmpty() ? parseBoolean(sV5) : null;
		String sV2 = expression("[gui.ChessBoard.$assertionsDisabled","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
		String sV11 = expression("chessBoard.chessPieces.table.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV22 = expression("chessBoard.chessPieces.vals.length","int");
		Integer V22 = !sV22.isEmpty() ? Integer.parseInt(sV22) : null;
		String sV7 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV13 = expression("chessBoard.chessPieces.count","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV10 = expression("chessBoard.chessPieces.size","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;

		isCheckmate_16(isCheckmate_16, V1, V2);
		isCheckmate_3(isCheckmate_3, V3, V4);
		isCheckmate_27(isCheckmate_27, V5);
		isCheckmate_28(isCheckmate_28, V6, V7);
		isCheckmate_6(isCheckmate_6, V8, V2);
		isCheckmate_14(isCheckmate_14, V9);
		isCheckmate_4(isCheckmate_4, V3);
		isCheckmate_35(isCheckmate_35, V10, V11, V2);
		isCheckmate_15(isCheckmate_15, V1, V2);
		isCheckmate_36(isCheckmate_36, V10, V11, V2);
		isCheckmate_46(isCheckmate_46, V10, V11, V2);
		isCheckmate_7(isCheckmate_7, V8, V2);
		isCheckmate_25(isCheckmate_25, V12, V2);
		isCheckmate_37(isCheckmate_37, V13);
		isCheckmate_11(isCheckmate_11, V2);
		isCheckmate_38(isCheckmate_38, V13);
		isCheckmate_18(isCheckmate_18, V14, V2);
		isCheckmate_21(isCheckmate_21, V15);
		isCheckmate_22(isCheckmate_22, V16);
		isCheckmate_32(isCheckmate_32, V10);
		isCheckmate_33(isCheckmate_33, V10, V2);
		isCheckmate_20(isCheckmate_20, V15);
		isCheckmate_0(isCheckmate_0, V17);
		isCheckmate_44(isCheckmate_44, V10, V11, V2);
		isCheckmate_5(isCheckmate_5, V8);
		isCheckmate_12(isCheckmate_12, V18);
		isCheckmate_29(isCheckmate_29, V6);
		isCheckmate_45(isCheckmate_45, V10, V11, V2);
		isCheckmate_42(isCheckmate_42, V10);
		isCheckmate_8(isCheckmate_8, V8);
		isCheckmate_13(isCheckmate_13, V19);
		isCheckmate_34(isCheckmate_34, V10, V2);
		isCheckmate_9(isCheckmate_9, V8);
		isCheckmate_26(isCheckmate_26, V20);
		isCheckmate_41(isCheckmate_41, V10);
		isCheckmate_40(isCheckmate_40, V11, V13, V2);
		isCheckmate_10(isCheckmate_10, V2);
		isCheckmate_1(isCheckmate_1, V21, V2);
		isCheckmate_30(isCheckmate_30, V22, V2);
		isCheckmate_23(isCheckmate_23, V12);
		isCheckmate_17(isCheckmate_17, V23);
		isCheckmate_31(isCheckmate_31, V22, V2);
		isCheckmate_43(isCheckmate_43, V10, V11, V2);
		isCheckmate_24(isCheckmate_24, V12, V2);
		isCheckmate_19(isCheckmate_19, V14, V2);
		isCheckmate_2(isCheckmate_2, V21, V2);
		isCheckmate_39(isCheckmate_39, V11, V13, V2);
				} 
			}
		currentObject = null;
	}

	private void isCheckmate_16(Integer count, Long V1, Integer V2) {

		String pathCondition = "isCheckmate_16";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_3(Integer count, Integer V3, Integer V4) {

		String pathCondition = "isCheckmate_3";

		if(V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_27(Integer count, Integer V5) {

		String pathCondition = "isCheckmate_27";

		if(V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_28(Integer count, Integer V6, Integer V7) {

		String pathCondition = "isCheckmate_28";

		if(V6 == null || V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 >= 0 && V7 >= 0 && V7 < V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_6(Integer count, Integer V8, Integer V2) {

		String pathCondition = "isCheckmate_6";

		if(V8 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_14(Integer count, Integer V9) {

		String pathCondition = "isCheckmate_14";

		if(V9 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V9 >= 0 && V9 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_4(Integer count, Integer V3) {

		String pathCondition = "isCheckmate_4";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_35(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "isCheckmate_35";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0 && V11 >= 0 && V11 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_15(Integer count, Long V1, Integer V2) {

		String pathCondition = "isCheckmate_15";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_36(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "isCheckmate_36";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0 && V11 >= 0 && V11 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_46(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "isCheckmate_46";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0 && V11 >= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_7(Integer count, Integer V8, Integer V2) {

		String pathCondition = "isCheckmate_7";

		if(V8 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_25(Integer count, Long V12, Integer V2) {

		String pathCondition = "isCheckmate_25";

		if(V12 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_37(Integer count, Integer V13) {

		String pathCondition = "isCheckmate_37";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_11(Integer count, Integer V2) {

		String pathCondition = "isCheckmate_11";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_38(Integer count, Integer V13) {

		String pathCondition = "isCheckmate_38";

		if(V13 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_18(Integer count, Long V14, Integer V2) {

		String pathCondition = "isCheckmate_18";

		if(V14 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_21(Integer count, Integer V15) {

		String pathCondition = "isCheckmate_21";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_22(Integer count, Integer V16) {

		String pathCondition = "isCheckmate_22";

		if(V16 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V16 >= 0 && V16 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_32(Integer count, Integer V10) {

		String pathCondition = "isCheckmate_32";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_33(Integer count, Integer V10, Integer V2) {

		String pathCondition = "isCheckmate_33";

		if(V10 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_20(Integer count, Integer V15) {

		String pathCondition = "isCheckmate_20";

		if(V15 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V15 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_0(Integer count, Integer V17) {

		String pathCondition = "isCheckmate_0";

		if(V17 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V17 >= 0 && V17 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_44(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "isCheckmate_44";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0 && V11 >= 0 && V11 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_5(Integer count, Integer V8) {

		String pathCondition = "isCheckmate_5";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_12(Integer count, Integer V18) {

		String pathCondition = "isCheckmate_12";

		if(V18 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V18 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_29(Integer count, Integer V6) {

		String pathCondition = "isCheckmate_29";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_45(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "isCheckmate_45";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0 && V11 >= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_42(Integer count, Integer V10) {

		String pathCondition = "isCheckmate_42";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_8(Integer count, Integer V8) {

		String pathCondition = "isCheckmate_8";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_13(Integer count, Integer V19) {

		String pathCondition = "isCheckmate_13";

		if(V19 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V19 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_34(Integer count, Integer V10, Integer V2) {

		String pathCondition = "isCheckmate_34";

		if(V10 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_9(Integer count, Integer V8) {

		String pathCondition = "isCheckmate_9";

		if(V8 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_26(Integer count, Integer V20) {

		String pathCondition = "isCheckmate_26";

		if(V20 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V20 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_41(Integer count, Integer V10) {

		String pathCondition = "isCheckmate_41";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_40(Integer count, Integer V11, Integer V13, Integer V2) {

		String pathCondition = "isCheckmate_40";

		if(V11 == null || V13 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V11 >= 0 && V11 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_10(Integer count, Integer V2) {

		String pathCondition = "isCheckmate_10";

		if(V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_1(Integer count, Long V21, Integer V2) {

		String pathCondition = "isCheckmate_1";

		if(V21 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V21 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_30(Integer count, Integer V22, Integer V2) {

		String pathCondition = "isCheckmate_30";

		if(V22 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V22 >= 0 && V22 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_23(Integer count, Long V12) {

		String pathCondition = "isCheckmate_23";

		if(V12 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_17(Integer count, Integer V23) {

		String pathCondition = "isCheckmate_17";

		if(V23 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V23 >= 0 && V23 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_31(Integer count, Integer V22, Integer V2) {

		String pathCondition = "isCheckmate_31";

		if(V22 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V22 >= 0 && V22 <= 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_43(Integer count, Integer V10, Integer V11, Integer V2) {

		String pathCondition = "isCheckmate_43";

		if(V10 == null || V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 != 0 && V11 >= 0 && V11 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_24(Integer count, Long V12, Integer V2) {

		String pathCondition = "isCheckmate_24";

		if(V12 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V12 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_19(Integer count, Long V14, Integer V2) {

		String pathCondition = "isCheckmate_19";

		if(V14 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V14 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_2(Integer count, Long V21, Integer V2) {

		String pathCondition = "isCheckmate_2";

		if(V21 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V21 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void isCheckmate_39(Integer count, Integer V11, Integer V13, Integer V2) {

		String pathCondition = "isCheckmate_39";

		if(V11 == null || V13 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V13 != 0 && V11 >= 0 && V11 <= 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void moveCurrentlyHeldPieceGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer moveCurrentlyHeldPiece_0 = 0;
		Integer moveCurrentlyHeldPiece_6 = 0;
		Integer moveCurrentlyHeldPiece_7 = 0;
		Integer moveCurrentlyHeldPiece_9 = 0;
		Integer moveCurrentlyHeldPiece_10 = 0;
		Integer moveCurrentlyHeldPiece_8 = 0;
		Integer moveCurrentlyHeldPiece_1 = 0;
		Integer moveCurrentlyHeldPiece_2 = 0;
		Integer moveCurrentlyHeldPiece_4 = 0;
		Integer moveCurrentlyHeldPiece_11 = 0;
		Integer moveCurrentlyHeldPiece_3 = 0;
		Integer moveCurrentlyHeldPiece_5 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV4 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))].length","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV3 = expression("chessBoard.chessSquareArray.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV6 = expression("pieceCurrentlyHeld.position.xCoord","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV5 = expression("pieceCurrentlyHeld.position.yCoord","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV1 = expression("gcState.enPassantPosition.xCoord","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV2 = expression("gcState.enPassantPosition.yCoord","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;

		moveCurrentlyHeldPiece_0(moveCurrentlyHeldPiece_0, V1, V2);
		moveCurrentlyHeldPiece_6(moveCurrentlyHeldPiece_6, V1);
		moveCurrentlyHeldPiece_7(moveCurrentlyHeldPiece_7, V1, V2, V3);
		moveCurrentlyHeldPiece_9(moveCurrentlyHeldPiece_9, V3, V4, V5);
		moveCurrentlyHeldPiece_10(moveCurrentlyHeldPiece_10, V3, V5);
		moveCurrentlyHeldPiece_8(moveCurrentlyHeldPiece_8, V6, V3, V4, V5);
		moveCurrentlyHeldPiece_1(moveCurrentlyHeldPiece_1, V1, V2);
		moveCurrentlyHeldPiece_2(moveCurrentlyHeldPiece_2, V1, V2);
		moveCurrentlyHeldPiece_4(moveCurrentlyHeldPiece_4, V1, V3, V5);
		moveCurrentlyHeldPiece_11(moveCurrentlyHeldPiece_11, V3);
		moveCurrentlyHeldPiece_3(moveCurrentlyHeldPiece_3, V1);
		moveCurrentlyHeldPiece_5(moveCurrentlyHeldPiece_5, V1, V3);
				} 
			}
		currentObject = null;
	}

	private void moveCurrentlyHeldPiece_0(Integer count, Integer V1, Integer V2) {

		String pathCondition = "moveCurrentlyHeldPiece_0";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 1 && V1 <= 8 && V2 - 1 >= 1 && V2 - 1 <= 8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_6(Integer count, Integer V1) {

		String pathCondition = "moveCurrentlyHeldPiece_6";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_7(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "moveCurrentlyHeldPiece_7";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 1 && V3 >= 0 && 7 - (V2 + -1) >= 0 && 7 - (V2 + -1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_9(Integer count, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "moveCurrentlyHeldPiece_9";

		if(V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_10(Integer count, Integer V3, Integer V5) {

		String pathCondition = "moveCurrentlyHeldPiece_10";

		if(V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_8(Integer count, Integer V6, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "moveCurrentlyHeldPiece_8";

		if(V6 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3 && V6 + -1 >= 0 && V6 + -1 < V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_1(Integer count, Integer V1, Integer V2) {

		String pathCondition = "moveCurrentlyHeldPiece_1";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 1 && V1 <= 8 && V2 - 1 >= 1 && V2 - 1 > 8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_2(Integer count, Integer V1, Integer V2) {

		String pathCondition = "moveCurrentlyHeldPiece_2";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 1 && V1 <= 8 && V2 - 1 < 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_4(Integer count, Integer V1, Integer V3, Integer V5) {

		String pathCondition = "moveCurrentlyHeldPiece_4";

		if(V1 == null || V3 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 1 && V3 >= 0 && 7 - (V5 + -1) >= 0 && 7 - (V5 + -1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_11(Integer count, Integer V3) {

		String pathCondition = "moveCurrentlyHeldPiece_11";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_3(Integer count, Integer V1) {

		String pathCondition = "moveCurrentlyHeldPiece_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 1 && V1 > 8){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void moveCurrentlyHeldPiece_5(Integer count, Integer V1, Integer V3) {

		String pathCondition = "moveCurrentlyHeldPiece_5";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 1 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void performCastlingGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer performCastling_6 = 0;
		Integer performCastling_16 = 0;
		Integer performCastling_8 = 0;
		Integer performCastling_10 = 0;
		Integer performCastling_9 = 0;
		Integer performCastling_18 = 0;
		Integer performCastling_11 = 0;
		Integer performCastling_7 = 0;
		Integer performCastling_15 = 0;
		Integer performCastling_14 = 0;
		Integer performCastling_13 = 0;
		Integer performCastling_2 = 0;
		Integer performCastling_12 = 0;
		Integer performCastling_1 = 0;
		Integer performCastling_5 = 0;
		Integer performCastling_17 = 0;
		Integer performCastling_3 = 0;
		Integer performCastling_0 = 0;
		Integer performCastling_4 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV2 = expression("chessBoard.chessPieces.table[(0) & ((chessBoard.chessPieces.table.length) - (1))].hash","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV3 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV1 = expression("chessBoard.chessPieces.table.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV5 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V5 = !sV5.isEmpty() ? parseBoolean(sV5) : null;
		String sV4 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV6 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V6 = !sV6.isEmpty() ? parseBoolean(sV6) : null;

		performCastling_6(performCastling_6, V1);
		performCastling_16(performCastling_16, V1);
		performCastling_8(performCastling_8, V1, V2);
		performCastling_10(performCastling_10, V3, V4);
		performCastling_9(performCastling_9, V1, V2);
		performCastling_18(performCastling_18, V1);
		performCastling_11(performCastling_11, V1);
		performCastling_7(performCastling_7, V1);
		performCastling_15(performCastling_15, V1);
		performCastling_14(performCastling_14, V6, V5);
		performCastling_13(performCastling_13, V1);
		performCastling_2(performCastling_2, V6, V5);
		performCastling_12(performCastling_12, V1);
		performCastling_1(performCastling_1, V5);
		performCastling_5(performCastling_5, V1);
		performCastling_17(performCastling_17, V1);
		performCastling_3(performCastling_3, V1);
		performCastling_0(performCastling_0, V1);
		performCastling_4(performCastling_4, V3);
				} 
			}
		currentObject = null;
	}

	private void performCastling_6(Integer count, Integer V1) {

		String pathCondition = "performCastling_6";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_16(Integer count, Integer V1) {

		String pathCondition = "performCastling_16";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (50517524 & V1 - 1) >= 0 && (50517524 & V1 - 1) < V1 && (50517524 & V1 - 1) + 2 < V1 && (50517524 & V1 - 1) + 2 >= 0 && (50517524 & V1 - 1) + 2 < V1 && (50517524 & V1 - 1) + 2 != (50517524 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_8(Integer count, Integer V1, Integer V2) {

		String pathCondition = "performCastling_8";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_10(Integer count, Integer V3, Integer V4) {

		String pathCondition = "performCastling_10";

		if(V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0 && V4 >= 0 && V4 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_9(Integer count, Integer V1, Integer V2) {

		String pathCondition = "performCastling_9";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_18(Integer count, Integer V1) {

		String pathCondition = "performCastling_18";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (50517524 & V1 - 1) >= 0 && (50517524 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_11(Integer count, Integer V1) {

		String pathCondition = "performCastling_11";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-1280102876 & V1 - 1) >= 0 && (-1280102876 & V1 - 1) < V1 && (-1280102876 & V1 - 1) + 2 < V1 && (-1280102876 & V1 - 1) + 2 >= 0 && (-1280102876 & V1 - 1) + 2 < V1 && (-1280102876 & V1 - 1) + 2 != (-1280102876 & V1 - 1)){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_7(Integer count, Integer V1) {

		String pathCondition = "performCastling_7";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (418130090 & V1 - 1) >= 0 && (418130090 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_15(Integer count, Integer V1) {

		String pathCondition = "performCastling_15";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-584317304 & V1 - 1) >= 0 && (-584317304 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_14(Integer count, Integer V6, Integer V5) {

		String pathCondition = "performCastling_14";

		if(V6 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0 && V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_13(Integer count, Integer V1) {

		String pathCondition = "performCastling_13";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-1280102876 & V1 - 1) >= 0 && (-1280102876 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_2(Integer count, Integer V6, Integer V5) {

		String pathCondition = "performCastling_2";

		if(V6 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 != 0 && V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_12(Integer count, Integer V1) {

		String pathCondition = "performCastling_12";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (-1280102876 & V1 - 1) >= 0 && (-1280102876 & V1 - 1) < V1 && (-1280102876 & V1 - 1) + 2 >= V1 && V1 > 0 && (-1280102876 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_1(Integer count, Integer V5) {

		String pathCondition = "performCastling_1";

		if(V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V5 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_5(Integer count, Integer V1) {

		String pathCondition = "performCastling_5";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_17(Integer count, Integer V1) {

		String pathCondition = "performCastling_17";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (50517524 & V1 - 1) >= 0 && (50517524 & V1 - 1) < V1 && (50517524 & V1 - 1) + 2 >= V1 && V1 > 0 && (50517524 & V1 - 1) != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_3(Integer count, Integer V1) {

		String pathCondition = "performCastling_3";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && (0 & V1 - 1) >= 0 && (0 & V1 - 1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_0(Integer count, Integer V1) {

		String pathCondition = "performCastling_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void performCastling_4(Integer count, Integer V3) {

		String pathCondition = "performCastling_4";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void redoGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer redo_20 = 0;
		Integer redo_38 = 0;
		Integer redo_47 = 0;
		Integer redo_27 = 0;
		Integer redo_15 = 0;
		Integer redo_51 = 0;
		Integer redo_6 = 0;
		Integer redo_9 = 0;
		Integer redo_31 = 0;
		Integer redo_24 = 0;
		Integer redo_7 = 0;
		Integer redo_30 = 0;
		Integer redo_43 = 0;
		Integer redo_18 = 0;
		Integer redo_4 = 0;
		Integer redo_11 = 0;
		Integer redo_25 = 0;
		Integer redo_26 = 0;
		Integer redo_29 = 0;
		Integer redo_48 = 0;
		Integer redo_0 = 0;
		Integer redo_49 = 0;
		Integer redo_41 = 0;
		Integer redo_23 = 0;
		Integer redo_21 = 0;
		Integer redo_16 = 0;
		Integer redo_35 = 0;
		Integer redo_42 = 0;
		Integer redo_36 = 0;
		Integer redo_17 = 0;
		Integer redo_8 = 0;
		Integer redo_22 = 0;
		Integer redo_32 = 0;
		Integer redo_46 = 0;
		Integer redo_52 = 0;
		Integer redo_3 = 0;
		Integer redo_39 = 0;
		Integer redo_1 = 0;
		Integer redo_33 = 0;
		Integer redo_13 = 0;
		Integer redo_10 = 0;
		Integer redo_2 = 0;
		Integer redo_19 = 0;
		Integer redo_14 = 0;
		Integer redo_45 = 0;
		Integer redo_5 = 0;
		Integer redo_12 = 0;
		Integer redo_44 = 0;
		Integer redo_37 = 0;
		Integer redo_28 = 0;
		Integer redo_40 = 0;
		Integer redo_34 = 0;
		Integer redo_50 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV4 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV11 = expression("undoRedoMove.previousMoments.elementData.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV15 = expression("undoRedoMove.previousMoments.l.expectedModCount","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV5 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV13 = expression("[java.lang.AbstractStringBuilder.sizeTable[1]","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV3 = expression("undoRedoMove.previousMoments.expectedModCount","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV6 = expression("undoRedoMove.previousMoments.elementCount","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV14 = expression("undoRedoMove.previousMoments.l.l.modCount","int");
		Integer V14 = !sV14.isEmpty() ? Integer.parseInt(sV14) : null;
		String sV8 = expression("undoRedoMove.previousMoments.l.modCount","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV10 = expression("undoRedoMove.previousMoments.a.length","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV2 = expression("undoRedoMove.previousMoments.modCount","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV12 = expression("undoRedoMove.previousMoments.l.size","int");
		Integer V12 = !sV12.isEmpty() ? Integer.parseInt(sV12) : null;
		String sV9 = expression("undoRedoMove.previousMoments.offset","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV1 = expression("undoRedoMove.previousMoments.size","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV7 = expression("undoRedoMove.moveNumber","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;

		redo_20(redo_20, V1);
		redo_38(redo_38, V1, V2, V3, V4, V5);
		redo_47(redo_47, V6, V7);
		redo_27(redo_27, V8, V9, V1, V3);
		redo_15(redo_15, V10);
		redo_51(redo_51, V6, V7, V11);
		redo_6(redo_6, V7, V1, V4);
		redo_9(redo_9, V7, V1, V4);
		redo_31(redo_31, V8, V9, V12, V1, V3);
		redo_24(redo_24, V8, V1, V3, V4, V5);
		redo_7(redo_7, V7, V1);
		redo_30(redo_30, V8, V9, V1, V3);
		redo_43(redo_43, V6);
		redo_18(redo_18, V1, V4, V5);
		redo_4(redo_4, V11, V1);
		redo_11(redo_11, V7, V11, V1);
		redo_25(redo_25, V8, V1, V3, V4);
		redo_26(redo_26, V8, V1, V3);
		redo_29(redo_29, V8, V9, V1, V3);
		redo_48(redo_48, V6, V7, V4);
		redo_0(redo_0, V1, V4, V5);
		redo_49(redo_49, V6, V7, V4);
		redo_41(redo_41, V6, V4, V5);
		redo_23(redo_23, V8, V1, V3, V4, V5);
		redo_21(redo_21, V1);
		redo_16(redo_16, V1, V4, V5);
		redo_35(redo_35, V8, V1, V3);
		redo_42(redo_42, V6, V4);
		redo_36(redo_36, V2, V3);
		redo_17(redo_17, V13, V1, V4, V5);
		redo_8(redo_8, V7, V1, V4);
		redo_22(redo_22, V8, V3);
		redo_32(redo_32, V8, V14, V1, V15, V3);
		redo_46(redo_46, V6);
		redo_52(redo_52, V6, V7);
		redo_3(redo_3, V11, V1);
		redo_39(redo_39, V1, V2, V3, V4);
		redo_1(redo_1, V1, V4);
		redo_33(redo_33, V8, V1, V15, V2, V3);
		redo_13(redo_13, V10);
		redo_10(redo_10, V7, V1);
		redo_2(redo_2, V1);
		redo_19(redo_19, V1, V4);
		redo_14(redo_14, V7, V10);
		redo_45(redo_45, V6, V11);
		redo_5(redo_5, V1);
		redo_12(redo_12, V7, V1);
		redo_44(redo_44, V6, V11);
		redo_37(redo_37, V1, V2, V3, V4, V5);
		redo_28(redo_28, V8, V9, V1, V3);
		redo_40(redo_40, V1, V2, V3);
		redo_34(redo_34, V8, V1, V15, V3);
		redo_50(redo_50, V6, V7);
				} 
			}
		currentObject = null;
	}

	private void redo_20(Integer count, Integer V1) {

		String pathCondition = "redo_20";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_38(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "redo_38";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == V3 && V1 < 0 && V4 >= 0 && V4 > 0 && V5 < 0 && 1 >= V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_47(Integer count, Integer V6, Integer V7) {

		String pathCondition = "redo_47";

		if(V6 == null || V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0 && V7 + 1 >= V6 && V7 + 1 == -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_27(Integer count, Integer V8, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "redo_27";

		if(V8 == null || V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V9 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_15(Integer count, Integer V10) {

		String pathCondition = "redo_15";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 >= 0 && V10 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_51(Integer count, Integer V6, Integer V7, Integer V11) {

		String pathCondition = "redo_51";

		if(V6 == null || V7 == null || V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0 && V7 + 1 < V6 && V11 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_6(Integer count, Integer V7, Integer V1, Integer V4) {

		String pathCondition = "redo_6";

		if(V7 == null || V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 >= V1 && V7 + 1 == -2147483648 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_9(Integer count, Integer V7, Integer V1, Integer V4) {

		String pathCondition = "redo_9";

		if(V7 == null || V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 >= V1 && V7 + 1 != -2147483648 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_31(Integer count, Integer V8, Integer V9, Integer V12, Integer V1, Integer V3) {

		String pathCondition = "redo_31";

		if(V8 == null || V9 == null || V12 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V9 >= 0 && V9 <= V12 && V9 < V12 >> 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_24(Integer count, Integer V8, Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "redo_24";

		if(V8 == null || V1 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 < 0 && V4 >= 0 && V4 > 0 && V5 < 0 && 1 >= V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_7(Integer count, Integer V7, Integer V1) {

		String pathCondition = "redo_7";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 >= V1 && V7 + 1 == -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_30(Integer count, Integer V8, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "redo_30";

		if(V8 == null || V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V9 < 0 && V9 != -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_43(Integer count, Integer V6) {

		String pathCondition = "redo_43";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_18(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "redo_18";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V4 >= 0 && V4 > 0 && V5 < 0 && 1 >= V4){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_4(Integer count, Integer V11, Integer V1) {

		String pathCondition = "redo_4";

		if(V11 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 > 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_11(Integer count, Integer V7, Integer V11, Integer V1) {

		String pathCondition = "redo_11";

		if(V7 == null || V11 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 < V1 && V11 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_25(Integer count, Integer V8, Integer V1, Integer V3, Integer V4) {

		String pathCondition = "redo_25";

		if(V8 == null || V1 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 < 0 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_26(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "redo_26";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_29(Integer count, Integer V8, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "redo_29";

		if(V8 == null || V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V9 < 0 && V9 == -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_48(Integer count, Integer V6, Integer V7, Integer V4) {

		String pathCondition = "redo_48";

		if(V6 == null || V7 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0 && V7 + 1 >= V6 && V7 + 1 != -2147483648 && V4 >= 0 && V4 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_0(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "redo_0";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 <= 0 && V4 >= 0 && V4 > 0 && V5 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_49(Integer count, Integer V6, Integer V7, Integer V4) {

		String pathCondition = "redo_49";

		if(V6 == null || V7 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0 && V7 + 1 >= V6 && V7 + 1 != -2147483648 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_41(Integer count, Integer V6, Integer V4, Integer V5) {

		String pathCondition = "redo_41";

		if(V6 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0 && V6 <= 0 && V4 >= 0 && V4 > 0 && V5 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_23(Integer count, Integer V8, Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "redo_23";

		if(V8 == null || V1 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 < 0 && V4 >= 0 && V4 > 0 && V5 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_21(Integer count, Integer V1) {

		String pathCondition = "redo_21";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 >> 1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_16(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "redo_16";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V4 >= 0 && V4 > 0 && V5 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_35(Integer count, Integer V8, Integer V1, Integer V3) {

		String pathCondition = "redo_35";

		if(V8 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_42(Integer count, Integer V6, Integer V4) {

		String pathCondition = "redo_42";

		if(V6 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0 && V6 <= 0 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_36(Integer count, Integer V2, Integer V3) {

		String pathCondition = "redo_36";

		if(V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 != V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_17(Integer count, Integer V13, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "redo_17";

		if(V13 == null || V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V4 >= 0 && V4 > 0 && V5 < 0 && 1 < V4 && V13 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_8(Integer count, Integer V7, Integer V1, Integer V4) {

		String pathCondition = "redo_8";

		if(V7 == null || V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 >= V1 && V7 + 1 != -2147483648 && V4 >= 0 && V4 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_22(Integer count, Integer V8, Integer V3) {

		String pathCondition = "redo_22";

		if(V8 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 != V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_32(Integer count, Integer V8, Integer V14, Integer V1, Integer V15, Integer V3) {

		String pathCondition = "redo_32";

		if(V8 == null || V14 == null || V1 == null || V15 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V14 != V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_46(Integer count, Integer V6) {

		String pathCondition = "redo_46";

		if(V6 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0 && V6 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_52(Integer count, Integer V6, Integer V7) {

		String pathCondition = "redo_52";

		if(V6 == null || V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0 && V7 + 1 < V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_3(Integer count, Integer V11, Integer V1) {

		String pathCondition = "redo_3";

		if(V11 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 > 0 && V11 >= 0 && V11 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_39(Integer count, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "redo_39";

		if(V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == V3 && V1 < 0 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_1(Integer count, Integer V1, Integer V4) {

		String pathCondition = "redo_1";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 <= 0 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_33(Integer count, Integer V8, Integer V1, Integer V15, Integer V2, Integer V3) {

		String pathCondition = "redo_33";

		if(V8 == null || V1 == null || V15 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V2 != V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_13(Integer count, Integer V10) {

		String pathCondition = "redo_13";

		if(V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 >= 0 && V10 != 0 && true){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_10(Integer count, Integer V7, Integer V1) {

		String pathCondition = "redo_10";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 >= V1 && V7 + 1 != -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_2(Integer count, Integer V1) {

		String pathCondition = "redo_2";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_19(Integer count, Integer V1, Integer V4) {

		String pathCondition = "redo_19";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V4 >= 0 && V4 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_14(Integer count, Integer V7, Integer V10) {

		String pathCondition = "redo_14";

		if(V7 == null || V10 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V10 >= 0 && V10 == 0 && V7 + 1 >= 0 && V7 + 1 < V10){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_45(Integer count, Integer V6, Integer V11) {

		String pathCondition = "redo_45";

		if(V6 == null || V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0 && V6 > 0 && V11 >= 0 && V11 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_5(Integer count, Integer V1) {

		String pathCondition = "redo_5";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_12(Integer count, Integer V7, Integer V1) {

		String pathCondition = "redo_12";

		if(V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V7 + 1 < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_44(Integer count, Integer V6, Integer V11) {

		String pathCondition = "redo_44";

		if(V6 == null || V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 != 0 && V6 > 0 && V11 >= 0 && V11 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_37(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "redo_37";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == V3 && V1 < 0 && V4 >= 0 && V4 > 0 && V5 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_28(Integer count, Integer V8, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "redo_28";

		if(V8 == null || V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V9 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_40(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "redo_40";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V2 == V3 && V1 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_34(Integer count, Integer V8, Integer V1, Integer V15, Integer V3) {

		String pathCondition = "redo_34";

		if(V8 == null || V1 == null || V15 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V3 && V1 >= 0 && V8 != V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void redo_50(Integer count, Integer V6, Integer V7) {

		String pathCondition = "redo_50";

		if(V6 == null || V7 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V6 == 0 && V7 + 1 >= V6 && V7 + 1 != -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void replacePieceGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer replacePiece_0 = 0;
		Integer replacePiece_3 = 0;
		Integer replacePiece_5 = 0;
		Integer replacePiece_6 = 0;
		Integer replacePiece_4 = 0;
		Integer replacePiece_2 = 0;
		Integer replacePiece_7 = 0;
		Integer replacePiece_1 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV6 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))][(pieceCurrentlyHeld.position.xCoord) + (-1)].nameExplicitlySet","boolean");
		Integer V6 = !sV6.isEmpty() ? parseBoolean(sV6) : null;
		String sV5 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))][(pieceCurrentlyHeld.position.xCoord) + (-1)].name.count","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV2 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))].length","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV1 = expression("chessBoard.chessSquareArray.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV4 = expression("pieceCurrentlyHeld.position.xCoord","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV3 = expression("pieceCurrentlyHeld.position.yCoord","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;

		replacePiece_0(replacePiece_0, V1, V2, V3, V4, V5);
		replacePiece_3(replacePiece_3, V6, V1, V2, V3, V4);
		replacePiece_5(replacePiece_5, V1, V2, V3);
		replacePiece_6(replacePiece_6, V1, V3);
		replacePiece_4(replacePiece_4, V1, V2, V3, V4);
		replacePiece_2(replacePiece_2, V6, V1, V2, V3, V4);
		replacePiece_7(replacePiece_7, V1);
		replacePiece_1(replacePiece_1, V1, V2, V3, V4, V5);
				} 
			}
		currentObject = null;
	}

	private void replacePiece_0(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "replacePiece_0";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V5 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_3(Integer count, Integer V6, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "replacePiece_3";

		if(V6 == null || V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_5(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "replacePiece_5";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_6(Integer count, Integer V1, Integer V3) {

		String pathCondition = "replacePiece_6";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_4(Integer count, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "replacePiece_4";

		if(V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_2(Integer count, Integer V6, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "replacePiece_2";

		if(V6 == null || V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_7(Integer count, Integer V1) {

		String pathCondition = "replacePiece_7";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void replacePiece_1(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "replacePiece_1";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V5 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void resetColoursAfterMoveGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer resetColoursAfterMove_0 = 0;
		Integer resetColoursAfterMove_3 = 0;
		Integer resetColoursAfterMove_5 = 0;
		Integer resetColoursAfterMove_6 = 0;
		Integer resetColoursAfterMove_4 = 0;
		Integer resetColoursAfterMove_2 = 0;
		Integer resetColoursAfterMove_7 = 0;
		Integer resetColoursAfterMove_1 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV6 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))][(pieceCurrentlyHeld.position.xCoord) + (-1)].nameExplicitlySet","boolean");
		Integer V6 = !sV6.isEmpty() ? parseBoolean(sV6) : null;
		String sV5 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))][(pieceCurrentlyHeld.position.xCoord) + (-1)].name.count","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV2 = expression("chessBoard.chessSquareArray[(7) - ((pieceCurrentlyHeld.position.yCoord) + (-1))].length","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
		String sV1 = expression("chessBoard.chessSquareArray.length","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV4 = expression("pieceCurrentlyHeld.position.xCoord","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV3 = expression("pieceCurrentlyHeld.position.yCoord","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;

		resetColoursAfterMove_0(resetColoursAfterMove_0, V1, V2, V3, V4, V5);
		resetColoursAfterMove_3(resetColoursAfterMove_3, V6, V1, V2, V3, V4);
		resetColoursAfterMove_5(resetColoursAfterMove_5, V1, V2, V3);
		resetColoursAfterMove_6(resetColoursAfterMove_6, V1, V3);
		resetColoursAfterMove_4(resetColoursAfterMove_4, V1, V2, V3, V4);
		resetColoursAfterMove_2(resetColoursAfterMove_2, V6, V1, V2, V3, V4);
		resetColoursAfterMove_7(resetColoursAfterMove_7, V1);
		resetColoursAfterMove_1(resetColoursAfterMove_1, V1, V2, V3, V4, V5);
				} 
			}
		currentObject = null;
	}

	private void resetColoursAfterMove_0(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "resetColoursAfterMove_0";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V5 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_3(Integer count, Integer V6, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "resetColoursAfterMove_3";

		if(V6 == null || V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V6 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_5(Integer count, Integer V1, Integer V2, Integer V3) {

		String pathCondition = "resetColoursAfterMove_5";

		if(V1 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_6(Integer count, Integer V1, Integer V3) {

		String pathCondition = "resetColoursAfterMove_6";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_4(Integer count, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "resetColoursAfterMove_4";

		if(V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_2(Integer count, Integer V6, Integer V1, Integer V2, Integer V3, Integer V4) {

		String pathCondition = "resetColoursAfterMove_2";

		if(V6 == null || V1 == null || V2 == null || V3 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V6 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_7(Integer count, Integer V1) {

		String pathCondition = "resetColoursAfterMove_7";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void resetColoursAfterMove_1(Integer count, Integer V1, Integer V2, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "resetColoursAfterMove_1";

		if(V1 == null || V2 == null || V3 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V2 >= 0 && 7 - (V3 + -1) >= 0 && 7 - (V3 + -1) < V1 && V4 + -1 >= 0 && V4 + -1 < V2 && V5 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void squareClickedGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer squareClicked_11 = 0;
		Integer squareClicked_7 = 0;
		Integer squareClicked_10 = 0;
		Integer squareClicked_3 = 0;
		Integer squareClicked_16 = 0;
		Integer squareClicked_15 = 0;
		Integer squareClicked_1 = 0;
		Integer squareClicked_0 = 0;
		Integer squareClicked_4 = 0;
		Integer squareClicked_8 = 0;
		Integer squareClicked_9 = 0;
		Integer squareClicked_2 = 0;
		Integer squareClicked_14 = 0;
		Integer squareClicked_5 = 0;
		Integer squareClicked_12 = 0;
		Integer squareClicked_6 = 0;
		Integer squareClicked_13 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV9 = expression("chessBoard.chessPieces.table[(0) & ((chessBoard.chessPieces.table.length) - (1))].hash","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV6 = expression("chessBoard.chessPieces.this$0.runAttributes.length","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV2 = expression("[control.GameController.$assertionsDisabled","boolean");
		Integer V2 = !sV2.isEmpty() ? parseBoolean(sV2) : null;
		String sV3 = expression("chessBoard.chessPieces.table.length","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV4 = expression("chessBoard.chessPieces.fromStart","boolean");
		Integer V4 = !sV4.isEmpty() ? parseBoolean(sV4) : null;
		String sV7 = expression("chessBoard.chessPieces.runIndex","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV5 = expression("chessBoard.chessPieces.toEnd","boolean");
		Integer V5 = !sV5.isEmpty() ? parseBoolean(sV5) : null;
		String sV10 = expression("possibleMoves.elementCount","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV8 = expression("possibleMoves.size","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV1 = expression("endGame.gameOver","boolean");
		Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;

		squareClicked_11(squareClicked_11, V1, V2);
		squareClicked_7(squareClicked_7, V1, V3);
		squareClicked_10(squareClicked_10, V1, V2);
		squareClicked_3(squareClicked_3, V1, V4);
		squareClicked_16(squareClicked_16, V1, V3);
		squareClicked_15(squareClicked_15, V1, V3);
		squareClicked_1(squareClicked_1, V1, V3);
		squareClicked_0(squareClicked_0, V1);
		squareClicked_4(squareClicked_4, V1, V4, V5);
		squareClicked_8(squareClicked_8, V6, V7, V1);
		squareClicked_9(squareClicked_9, V6, V1);
		squareClicked_2(squareClicked_2, V1);
		squareClicked_14(squareClicked_14, V1, V3);
		squareClicked_5(squareClicked_5, V1, V4, V5);
		squareClicked_12(squareClicked_12, V8, V1, V2);
		squareClicked_6(squareClicked_6, V9, V1, V3);
		squareClicked_13(squareClicked_13, V10, V1, V2);
				} 
			}
		currentObject = null;
	}

	private void squareClicked_11(Integer count, Integer V1, Integer V2) {

		String pathCondition = "squareClicked_11";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_7(Integer count, Integer V1, Integer V3) {

		String pathCondition = "squareClicked_7";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V3 >= 0 && (0 & V3 - 1) >= 0 && (0 & V3 - 1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_10(Integer count, Integer V1, Integer V2) {

		String pathCondition = "squareClicked_10";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_3(Integer count, Integer V1, Integer V4) {

		String pathCondition = "squareClicked_3";

		if(V1 == null || V4 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_16(Integer count, Integer V1, Integer V3) {

		String pathCondition = "squareClicked_16";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V3 >= 0 && (1000645948 & V3 - 1) >= 0 && (1000645948 & V3 - 1) < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_15(Integer count, Integer V1, Integer V3) {

		String pathCondition = "squareClicked_15";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V3 >= 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_1(Integer count, Integer V1, Integer V3) {

		String pathCondition = "squareClicked_1";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V3 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_0(Integer count, Integer V1) {

		String pathCondition = "squareClicked_0";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_4(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "squareClicked_4";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 != 0 && V5 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_8(Integer count, Integer V6, Integer V7, Integer V1) {

		String pathCondition = "squareClicked_8";

		if(V6 == null || V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 >= 0 && V7 >= 0 && V7 < V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_9(Integer count, Integer V6, Integer V1) {

		String pathCondition = "squareClicked_9";

		if(V6 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V6 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_2(Integer count, Integer V1) {

		String pathCondition = "squareClicked_2";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_14(Integer count, Integer V1, Integer V3) {

		String pathCondition = "squareClicked_14";

		if(V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V3 >= 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_5(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "squareClicked_5";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V4 != 0 && V5 != 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_12(Integer count, Integer V8, Integer V1, Integer V2) {

		String pathCondition = "squareClicked_12";

		if(V8 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 != 0 && V8 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_6(Integer count, Integer V9, Integer V1, Integer V3) {

		String pathCondition = "squareClicked_6";

		if(V9 == null || V1 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V3 >= 0 && (0 & V3 - 1) >= 0 && (0 & V3 - 1) < V3 && V9 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void squareClicked_13(Integer count, Integer V10, Integer V1, Integer V2) {

		String pathCondition = "squareClicked_13";

		if(V10 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 != 0 && V10 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}

	private void undoGameController() throws NumberFormatException, ClassNotFoundException {
			String clsName = "control.GameController"; 
			currentObject = Class.forName(clsName).cast(currentObject); 
			if ( map.containsKey(clsName))  {
				List<WeakReference<Object>> objectsList = map.get(clsName);
		Integer undo_20 = 0;
		Integer undo_10 = 0;
		Integer undo_52 = 0;
		Integer undo_38 = 0;
		Integer undo_27 = 0;
		Integer undo_51 = 0;
		Integer undo_15 = 0;
		Integer undo_12 = 0;
		Integer undo_49 = 0;
		Integer undo_31 = 0;
		Integer undo_24 = 0;
		Integer undo_30 = 0;
		Integer undo_43 = 0;
		Integer undo_18 = 0;
		Integer undo_50 = 0;
		Integer undo_4 = 0;
		Integer undo_25 = 0;
		Integer undo_26 = 0;
		Integer undo_29 = 0;
		Integer undo_0 = 0;
		Integer undo_8 = 0;
		Integer undo_47 = 0;
		Integer undo_41 = 0;
		Integer undo_9 = 0;
		Integer undo_23 = 0;
		Integer undo_21 = 0;
		Integer undo_16 = 0;
		Integer undo_35 = 0;
		Integer undo_42 = 0;
		Integer undo_36 = 0;
		Integer undo_17 = 0;
		Integer undo_22 = 0;
		Integer undo_48 = 0;
		Integer undo_14 = 0;
		Integer undo_7 = 0;
		Integer undo_32 = 0;
		Integer undo_46 = 0;
		Integer undo_3 = 0;
		Integer undo_39 = 0;
		Integer undo_1 = 0;
		Integer undo_33 = 0;
		Integer undo_13 = 0;
		Integer undo_2 = 0;
		Integer undo_19 = 0;
		Integer undo_45 = 0;
		Integer undo_5 = 0;
		Integer undo_6 = 0;
		Integer undo_44 = 0;
		Integer undo_11 = 0;
		Integer undo_37 = 0;
		Integer undo_28 = 0;
		Integer undo_40 = 0;
		Integer undo_34 = 0;
				for (WeakReference<Object> object: objectsList){
					if (object.isEnqueued())
						addQueuedObject(clsName, object);

					currentObject = object.get();
					fh.setCurrentObject(currentObject);

		String sV6 = expression("[java.lang.AbstractStringBuilder.sizeTable.length","int");
		Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
		String sV10 = expression("undoRedoMove.previousMoments.elementData.length","int");
		Integer V10 = !sV10.isEmpty() ? Integer.parseInt(sV10) : null;
		String sV15 = expression("undoRedoMove.previousMoments.l.expectedModCount","int");
		Integer V15 = !sV15.isEmpty() ? Integer.parseInt(sV15) : null;
		String sV7 = expression("[java.lang.AbstractStringBuilder.sizeTable[0]","int");
		Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;
		String sV13 = expression("[java.lang.AbstractStringBuilder.sizeTable[1]","int");
		Integer V13 = !sV13.isEmpty() ? Integer.parseInt(sV13) : null;
		String sV5 = expression("undoRedoMove.previousMoments.expectedModCount","int");
		Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
		String sV3 = expression("undoRedoMove.previousMoments.elementCount","int");
		Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
		String sV14 = expression("undoRedoMove.previousMoments.l.l.modCount","int");
		Integer V14 = !sV14.isEmpty() ? Integer.parseInt(sV14) : null;
		String sV8 = expression("undoRedoMove.previousMoments.l.modCount","int");
		Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
		String sV11 = expression("undoRedoMove.previousMoments.a.length","int");
		Integer V11 = !sV11.isEmpty() ? Integer.parseInt(sV11) : null;
		String sV4 = expression("undoRedoMove.previousMoments.modCount","int");
		Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
		String sV12 = expression("undoRedoMove.previousMoments.l.size","int");
		Integer V12 = !sV12.isEmpty() ? Integer.parseInt(sV12) : null;
		String sV9 = expression("undoRedoMove.previousMoments.offset","int");
		Integer V9 = !sV9.isEmpty() ? Integer.parseInt(sV9) : null;
		String sV1 = expression("undoRedoMove.previousMoments.size","int");
		Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
		String sV2 = expression("undoRedoMove.moveNumber","int");
		Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;

		undo_20(undo_20, V1);
		undo_10(undo_10, V1, V2);
		undo_52(undo_52, V2, V3);
		undo_38(undo_38, V6, V7, V1, V4, V5);
		undo_27(undo_27, V8, V9, V1, V5);
		undo_51(undo_51, V10, V2, V3);
		undo_15(undo_15, V11);
		undo_12(undo_12, V1, V2);
		undo_49(undo_49, V6, V2, V3);
		undo_31(undo_31, V8, V9, V12, V1, V5);
		undo_24(undo_24, V6, V7, V8, V1, V5);
		undo_30(undo_30, V8, V9, V1, V5);
		undo_43(undo_43, V3);
		undo_18(undo_18, V6, V7, V1);
		undo_50(undo_50, V2, V3);
		undo_4(undo_4, V10, V1);
		undo_25(undo_25, V6, V8, V1, V5);
		undo_26(undo_26, V8, V1, V5);
		undo_29(undo_29, V8, V9, V1, V5);
		undo_0(undo_0, V6, V7, V1);
		undo_8(undo_8, V6, V1, V2);
		undo_47(undo_47, V2, V3);
		undo_41(undo_41, V6, V7, V3);
		undo_9(undo_9, V6, V1, V2);
		undo_23(undo_23, V6, V7, V8, V1, V5);
		undo_21(undo_21, V1);
		undo_16(undo_16, V6, V7, V1);
		undo_35(undo_35, V8, V1, V5);
		undo_42(undo_42, V6, V3);
		undo_36(undo_36, V4, V5);
		undo_17(undo_17, V6, V7, V13, V1);
		undo_22(undo_22, V8, V5);
		undo_48(undo_48, V6, V2, V3);
		undo_14(undo_14, V11, V2);
		undo_7(undo_7, V1, V2);
		undo_32(undo_32, V8, V14, V1, V15, V5);
		undo_46(undo_46, V3);
		undo_3(undo_3, V10, V1);
		undo_39(undo_39, V6, V1, V4, V5);
		undo_1(undo_1, V6, V1);
		undo_33(undo_33, V8, V1, V15, V4, V5);
		undo_13(undo_13, V11);
		undo_2(undo_2, V1);
		undo_19(undo_19, V6, V1);
		undo_45(undo_45, V10, V3);
		undo_5(undo_5, V1);
		undo_6(undo_6, V6, V1, V2);
		undo_44(undo_44, V10, V3);
		undo_11(undo_11, V10, V1, V2);
		undo_37(undo_37, V6, V7, V1, V4, V5);
		undo_28(undo_28, V8, V9, V1, V5);
		undo_40(undo_40, V1, V4, V5);
		undo_34(undo_34, V8, V1, V15, V5);
				} 
			}
		currentObject = null;
	}

	private void undo_20(Integer count, Integer V1) {

		String pathCondition = "undo_20";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_10(Integer count, Integer V1, Integer V2) {

		String pathCondition = "undo_10";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 >= V1 && V2 - 1 != -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_52(Integer count, Integer V2, Integer V3) {

		String pathCondition = "undo_52";

		if(V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0 && V2 - 1 < V3){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_38(Integer count, Integer V6, Integer V7, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "undo_38";

		if(V6 == null || V7 == null || V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 == V5 && V1 < 0 && V6 >= 0 && V6 > 0 && V7 < 0 && 1 >= V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_27(Integer count, Integer V8, Integer V9, Integer V1, Integer V5) {

		String pathCondition = "undo_27";

		if(V8 == null || V9 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V9 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_51(Integer count, Integer V10, Integer V2, Integer V3) {

		String pathCondition = "undo_51";

		if(V10 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0 && V2 - 1 < V3 && V10 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_15(Integer count, Integer V11) {

		String pathCondition = "undo_15";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 >= 0 && V11 == 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_12(Integer count, Integer V1, Integer V2) {

		String pathCondition = "undo_12";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 < V1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_49(Integer count, Integer V6, Integer V2, Integer V3) {

		String pathCondition = "undo_49";

		if(V6 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0 && V2 - 1 >= V3 && V2 - 1 != -2147483648 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_31(Integer count, Integer V8, Integer V9, Integer V12, Integer V1, Integer V5) {

		String pathCondition = "undo_31";

		if(V8 == null || V9 == null || V12 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V9 >= 0 && V9 <= V12 && V9 < V12 >> 1){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_24(Integer count, Integer V6, Integer V7, Integer V8, Integer V1, Integer V5) {

		String pathCondition = "undo_24";

		if(V6 == null || V7 == null || V8 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 < 0 && V6 >= 0 && V6 > 0 && V7 < 0 && 1 >= V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_30(Integer count, Integer V8, Integer V9, Integer V1, Integer V5) {

		String pathCondition = "undo_30";

		if(V8 == null || V9 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V9 < 0 && V9 != -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_43(Integer count, Integer V3) {

		String pathCondition = "undo_43";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_18(Integer count, Integer V6, Integer V7, Integer V1) {

		String pathCondition = "undo_18";

		if(V6 == null || V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V6 >= 0 && V6 > 0 && V7 < 0 && 1 >= V6){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_50(Integer count, Integer V2, Integer V3) {

		String pathCondition = "undo_50";

		if(V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0 && V2 - 1 >= V3 && V2 - 1 != -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_4(Integer count, Integer V10, Integer V1) {

		String pathCondition = "undo_4";

		if(V10 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 > 0 && V10 >= 0 && V10 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_25(Integer count, Integer V6, Integer V8, Integer V1, Integer V5) {

		String pathCondition = "undo_25";

		if(V6 == null || V8 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 < 0 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_26(Integer count, Integer V8, Integer V1, Integer V5) {

		String pathCondition = "undo_26";

		if(V8 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_29(Integer count, Integer V8, Integer V9, Integer V1, Integer V5) {

		String pathCondition = "undo_29";

		if(V8 == null || V9 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V9 < 0 && V9 == -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_0(Integer count, Integer V6, Integer V7, Integer V1) {

		String pathCondition = "undo_0";

		if(V6 == null || V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 <= 0 && V6 >= 0 && V6 > 0 && V7 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_8(Integer count, Integer V6, Integer V1, Integer V2) {

		String pathCondition = "undo_8";

		if(V6 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 >= V1 && V2 - 1 != -2147483648 && V6 >= 0 && V6 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_47(Integer count, Integer V2, Integer V3) {

		String pathCondition = "undo_47";

		if(V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0 && V2 - 1 >= V3 && V2 - 1 == -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_41(Integer count, Integer V6, Integer V7, Integer V3) {

		String pathCondition = "undo_41";

		if(V6 == null || V7 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0 && V6 >= 0 && V6 > 0 && V7 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_9(Integer count, Integer V6, Integer V1, Integer V2) {

		String pathCondition = "undo_9";

		if(V6 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 >= V1 && V2 - 1 != -2147483648 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_23(Integer count, Integer V6, Integer V7, Integer V8, Integer V1, Integer V5) {

		String pathCondition = "undo_23";

		if(V6 == null || V7 == null || V8 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 < 0 && V6 >= 0 && V6 > 0 && V7 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_21(Integer count, Integer V1) {

		String pathCondition = "undo_21";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 >= 0 && V1 >> 1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_16(Integer count, Integer V6, Integer V7, Integer V1) {

		String pathCondition = "undo_16";

		if(V6 == null || V7 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V6 >= 0 && V6 > 0 && V7 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_35(Integer count, Integer V8, Integer V1, Integer V5) {

		String pathCondition = "undo_35";

		if(V8 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_42(Integer count, Integer V6, Integer V3) {

		String pathCondition = "undo_42";

		if(V6 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 <= 0 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_36(Integer count, Integer V4, Integer V5) {

		String pathCondition = "undo_36";

		if(V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_17(Integer count, Integer V6, Integer V7, Integer V13, Integer V1) {

		String pathCondition = "undo_17";

		if(V6 == null || V7 == null || V13 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V6 >= 0 && V6 > 0 && V7 < 0 && 1 < V6 && V13 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_22(Integer count, Integer V8, Integer V5) {

		String pathCondition = "undo_22";

		if(V8 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 != V5){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_48(Integer count, Integer V6, Integer V2, Integer V3) {

		String pathCondition = "undo_48";

		if(V6 == null || V2 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 == 0 && V2 - 1 >= V3 && V2 - 1 != -2147483648 && V6 >= 0 && V6 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_14(Integer count, Integer V11, Integer V2) {

		String pathCondition = "undo_14";

		if(V11 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 >= 0 && V11 == 0 && V2 - 1 >= 0 && V2 - 1 < V11){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_7(Integer count, Integer V1, Integer V2) {

		String pathCondition = "undo_7";

		if(V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 >= V1 && V2 - 1 == -2147483648){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_32(Integer count, Integer V8, Integer V14, Integer V1, Integer V15, Integer V5) {

		String pathCondition = "undo_32";

		if(V8 == null || V14 == null || V1 == null || V15 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V14 != V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_46(Integer count, Integer V3) {

		String pathCondition = "undo_46";

		if(V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_3(Integer count, Integer V10, Integer V1) {

		String pathCondition = "undo_3";

		if(V10 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 > 0 && V10 >= 0 && V10 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_39(Integer count, Integer V6, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "undo_39";

		if(V6 == null || V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 == V5 && V1 < 0 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_1(Integer count, Integer V6, Integer V1) {

		String pathCondition = "undo_1";

		if(V6 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 <= 0 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_33(Integer count, Integer V8, Integer V1, Integer V15, Integer V4, Integer V5) {

		String pathCondition = "undo_33";

		if(V8 == null || V1 == null || V15 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V4 != V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_13(Integer count, Integer V11) {

		String pathCondition = "undo_13";

		if(V11 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V11 >= 0 && V11 != 0 && true){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_2(Integer count, Integer V1) {

		String pathCondition = "undo_2";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_19(Integer count, Integer V6, Integer V1) {

		String pathCondition = "undo_19";

		if(V6 == null || V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 < 0 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_45(Integer count, Integer V10, Integer V3) {

		String pathCondition = "undo_45";

		if(V10 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 > 0 && V10 >= 0 && V10 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_5(Integer count, Integer V1) {

		String pathCondition = "undo_5";

		if(V1 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 != 0 && V1 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_6(Integer count, Integer V6, Integer V1, Integer V2) {

		String pathCondition = "undo_6";

		if(V6 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 >= V1 && V2 - 1 == -2147483648 && V6 >= 0 && V6 <= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_44(Integer count, Integer V10, Integer V3) {

		String pathCondition = "undo_44";

		if(V10 == null || V3 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V3 != 0 && V3 > 0 && V10 >= 0 && V10 > 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_11(Integer count, Integer V10, Integer V1, Integer V2) {

		String pathCondition = "undo_11";

		if(V10 == null || V1 == null || V2 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V1 == 0 && V2 - 1 < V1 && V10 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_37(Integer count, Integer V6, Integer V7, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "undo_37";

		if(V6 == null || V7 == null || V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 == V5 && V1 < 0 && V6 >= 0 && V6 > 0 && V7 >= 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_28(Integer count, Integer V8, Integer V9, Integer V1, Integer V5) {

		String pathCondition = "undo_28";

		if(V8 == null || V9 == null || V1 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V9 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_40(Integer count, Integer V1, Integer V4, Integer V5) {

		String pathCondition = "undo_40";

		if(V1 == null || V4 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V4 == V5 && V1 < 0){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private void undo_34(Integer count, Integer V8, Integer V1, Integer V15, Integer V5) {

		String pathCondition = "undo_34";

		if(V8 == null || V1 == null || V15 == null || V5 == null){
			if (count == null)
				values.put(pathCondition, 0);
		} else if (V8 == V5 && V1 >= 0 && V8 != V15){
			if (count == null)
				values.put(pathCondition, 1);
			else
				values.put(pathCondition, count + 1);
		} else {
			if (count == null)
				values.put(pathCondition, 0);
		}
	}


	private String expression(String path, String type) {
		if (path.startsWith("[")){
			return sfh.expression(path, type);
		} else {
			return fh.expression(path, type);
		}
	}

private Integer parseBoolean(String s) {
	return s.equals("true") ? 1 : 0;
}
	private char parseChar(String s) {
		return s.charAt(0);
	}

}
