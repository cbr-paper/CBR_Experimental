package runtime.evaluators.autogenerated;

import java.lang.ref.WeakReference;
import java.util.List;

import runtime.evaluators.AtLeastOneConditionEvaluator;

import java.util.Iterator;
public class FigPartition_800477427 extends AtLeastOneConditionEvaluator {
	private Object currentObject;
	private String clsName;

	public FigPartition_800477427(String clsName) {
		this.clsName = clsName;
	}

	public void monitor() throws ClassNotFoundException, NumberFormatException {

		currentObject = null;
		//currentObject =	 Class.forName(clsName).cast(currentObject); 
		currentObject = Class.forName(clsName, false,Thread.currentThread().getContextClassLoader()).cast(currentObject); 
 		if ( map.containsKey(clsName)) {
 			List<WeakReference<Object>> objectsList =	 map.get(clsName);
 			for (Iterator<WeakReference<Object>> it = objectsList.iterator();it.hasNext();) {
 				WeakReference<Object> object = it.next();
 				if (object.isEnqueued())
 					addQueuedObject(clsName, object);
 				else {
 					currentObject = object.get();
 					sfh.setCurrentStaticObject(currentObject);
 					fh.setCurrentObject(currentObject);

						String sV4 = expression("[org.tigris.gef.base.Globals._pcListeners.table[((leftLine.hashCode()) & (2147483647)) % ([org.tigris.gef.base.Globals._pcListeners.table.length)].hash","int");
						Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
						String sV1 = expression("[org.argouml.uml.diagram.ui.FigRole.$assertionsDisabled","boolean");
						Integer V1 = !sV1.isEmpty() ? parseBoolean(sV1) : null;
						String sV2 = expression("[org.tigris.gef.base.Globals._pcListeners.table.length","int");
						Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
						String sV3 = expression("leftLine.hashCode()","int");
						Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;

						setLineColorFigPartition_800477427_1(V1);
						setLineColorFigPartition_800477427_5(V2);
						setLineColorFigPartition_800477427_3(V2, V3, V4);
				} 
			}
		}
	}

 private void setLineColorFigPartition_800477427_1(Integer V1) {

		String pathCondition = "setLineColorFigPartition_800477427_1";
		if(V1 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 != 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void setLineColorFigPartition_800477427_5(Integer V2) {

		String pathCondition = "setLineColorFigPartition_800477427_5";
		if(V2 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V2 >= 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void setLineColorFigPartition_800477427_3(Integer V2, Integer V3, Integer V4) {

		String pathCondition = "setLineColorFigPartition_800477427_3";
		if(V2 == null || V3 == null || V4 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V2 >= 0 && (V3 & 2147483647) % V2 >= 0 && (V3 & 2147483647) % V2 < V2 && V4 != V3){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }

}
