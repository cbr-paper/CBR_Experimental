package runtime.evaluators.autogenerated;

import java.lang.ref.WeakReference;
import java.util.List;

import runtime.evaluators.AtLeastOneConditionEvaluator;

import java.util.Iterator;
public class FigActionState_988386457 extends AtLeastOneConditionEvaluator {
	private Object currentObject;
	private String clsName;

	public FigActionState_988386457(String clsName) {
		this.clsName = clsName;
	}

	public void monitor() throws ClassNotFoundException, NumberFormatException {

		currentObject = null;
		//currentObject =	 Class.forName(clsName).cast(currentObject); 
		currentObject = Class.forName(clsName, false,Thread.currentThread().getContextClassLoader()).cast(currentObject); 
 		if ( map.containsKey(clsName)) {
 			List<WeakReference<Object>> objectsList =	 map.get(clsName);
 			for (Iterator<WeakReference<Object>> it = objectsList.iterator();it.hasNext();) {
 				WeakReference<Object> object = it.next();
 				if (object.isEnqueued())
 					addQueuedObject(clsName, object);
 				else {
 					currentObject = object.get();
 					sfh.setCurrentStaticObject(currentObject);
 					fh.setCurrentObject(currentObject);

						String sV2 = expression("stereotypeFig.figs.elementData.length","int");
						Integer V2 = !sV2.isEmpty() ? Integer.parseInt(sV2) : null;
						String sV1 = expression("stereotypeFig.figs.size","int");
						Integer V1 = !sV1.isEmpty() ? Integer.parseInt(sV1) : null;
						String sV4 = expression("nameFig._rightMargin","int");
						Integer V4 = !sV4.isEmpty() ? Integer.parseInt(sV4) : null;
						String sV3 = expression("nameFig._leftMargin","int");
						Integer V3 = !sV3.isEmpty() ? Integer.parseInt(sV3) : null;
						String sV8 = expression("nameFig._botMargin","int");
						Integer V8 = !sV8.isEmpty() ? Integer.parseInt(sV8) : null;
						String sV6 = expression("nameFig._font.size","int");
						Integer V6 = !sV6.isEmpty() ? Integer.parseInt(sV6) : null;
						String sV5 = expression("nameFig._lineWidth","int");
						Integer V5 = !sV5.isEmpty() ? Integer.parseInt(sV5) : null;
						String sV7 = expression("nameFig._topMargin","int");
						Integer V7 = !sV7.isEmpty() ? Integer.parseInt(sV7) : null;

						getMinimumSizeFigActionState_988386457_5(V1, V2);
						getMinimumSizeFigActionState_988386457_35(V1);
						getMinimumSizeFigActionState_988386457_36(V1);
						getMinimumSizeFigActionState_988386457_6(V1, V2);
						getMinimumSizeFigActionState_988386457_13(V1, V3, V4, V5);
						getMinimumSizeFigActionState_988386457_17(V6, V7, V8, V1, V3, V4, V5);
						getMinimumSizeFigActionState_988386457_20(V6, V7, V8, V1, V3, V4, V5);
						getMinimumSizeFigActionState_988386457_14(V1, V3, V4, V5);
						getMinimumSizeFigActionState_988386457_8(V1);
						getMinimumSizeFigActionState_988386457_34(V1);
						getMinimumSizeFigActionState_988386457_19(V6, V7, V8, V1, V3, V4, V5);
						getMinimumSizeFigActionState_988386457_4(V1);
						getMinimumSizeFigActionState_988386457_18(V6, V7, V8, V1, V3, V4, V5);
				} 
			}
		}
	}

 private void getMinimumSizeFigActionState_988386457_5(Integer V1, Integer V2) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_5";
		if(V1 == null || V2 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 != 0 && V1 > 0 && V2 >= 0 && V2 > 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_35(Integer V1) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_35";
		if(V1 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 >= 0 && V1 >> 1 > 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_36(Integer V1) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_36";
		if(V1 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 >= 0 && V1 >> 1 <= 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_6(Integer V1, Integer V2) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_6";
		if(V1 == null || V2 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 != 0 && V1 > 0 && V2 >= 0 && V2 <= 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_13(Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_13";
		if(V1 == null || V3 == null || V4 == null || V5 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0 && 30 + V3 + V4 + 2 * V5 <= 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_17(Integer V6, Integer V7, Integer V8, Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_17";
		if(V6 == null || V7 == null || V8 == null || V1 == null || V3 == null || V4 == null || V5 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0 && 30 + V3 + V4 + 2 * V5 <= 0 && 16 >= -2 + V6 + V7 + V8 + 2 * V5 + 8 + 44){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_20(Integer V6, Integer V7, Integer V8, Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_20";
		if(V6 == null || V7 == null || V8 == null || V1 == null || V3 == null || V4 == null || V5 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0 && 30 + V3 + V4 + 2 * V5 > 0 && 30 + V3 + V4 + 2 * V5 + 16 < -2 + V6 + V7 + V8 + 2 * V5 + 8 + 44){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_14(Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_14";
		if(V1 == null || V3 == null || V4 == null || V5 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0 && 30 + V3 + V4 + 2 * V5 > 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_8(Integer V1) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_8";
		if(V1 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_34(Integer V1) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_34";
		if(V1 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 < 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_19(Integer V6, Integer V7, Integer V8, Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_19";
		if(V6 == null || V7 == null || V8 == null || V1 == null || V3 == null || V4 == null || V5 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0 && 30 + V3 + V4 + 2 * V5 > 0 && 30 + V3 + V4 + 2 * V5 + 16 >= -2 + V6 + V7 + V8 + 2 * V5 + 8 + 44){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_4(Integer V1) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_4";
		if(V1 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 != 0 && V1 <= 0){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }


 private void getMinimumSizeFigActionState_988386457_18(Integer V6, Integer V7, Integer V8, Integer V1, Integer V3, Integer V4, Integer V5) {

		String pathCondition = "getMinimumSizeFigActionState_988386457_18";
		if(V6 == null || V7 == null || V8 == null || V1 == null || V3 == null || V4 == null || V5 == null){
		 Character val = values.get(pathCondition);
		 if (val.equals('U'))
		 values.put(pathCondition, 'U');
		 else if (val.equals('T'))
		 values.put(pathCondition, 'T');
		 else if (val.equals('F'))
		 values.put(pathCondition, 'F');
		} else if (V1 == 0 && 30 + V3 + V4 + 2 * V5 <= 0 && 16 < -2 + V6 + V7 + V8 + 2 * V5 + 8 + 44){
		 values.put(pathCondition, 'T');
		} else {
		 Character val = values.get(pathCondition);
		 if (val.equals('F') || val.equals('U'))
		 values.put(pathCondition, 'F');
		 else
		 values.put(pathCondition, 'T');
		}
 }

}
